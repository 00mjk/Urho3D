namespace Urho3D
{
/**
\page LuaScriptAPI Lua scripting API

\section LuaScriptAPI_TableOfContents Table of contents

\ref LuaScriptAPI_ClassList "Class list"<br>
\ref LuaScriptAPI_Classes "Classes"<br>
\ref LuaScriptAPI_Enums "Enumerations"<br>
\ref LuaScriptAPI_toluaFunctions "tolua functions"<br>
\ref LuaScriptAPI_GlobalFunctions "Global functions"<br>
\ref LuaScriptAPI_GlobalProperties "Global properties"<br>
\ref LuaScriptAPI_GlobalConstants "Global constants"<br>

\section LuaScriptAPI_ClassList Class list
<a href="#Class_Animatable"><b>Animatable</b></a>
<a href="#Class_AnimatedModel"><b>AnimatedModel</b></a>
<a href="#Class_AnimatedSprite2D"><b>AnimatedSprite2D</b></a>
<a href="#Class_Animation"><b>Animation</b></a>
<a href="#Class_AnimationController"><b>AnimationController</b></a>
<a href="#Class_AnimationKeyFrame"><b>AnimationKeyFrame</b></a>
<a href="#Class_AnimationSet2D"><b>AnimationSet2D</b></a>
<a href="#Class_AnimationState"><b>AnimationState</b></a>
<a href="#Class_AnimationTrack"><b>AnimationTrack</b></a>
<a href="#Class_AnimationTriggerPoint"><b>AnimationTriggerPoint</b></a>
<a href="#Class_Audio"><b>Audio</b></a>
<a href="#Class_BiasParameters"><b>BiasParameters</b></a>
<a href="#Class_Billboard"><b>Billboard</b></a>
<a href="#Class_BillboardSet"><b>BillboardSet</b></a>
<a href="#Class_Bone"><b>Bone</b></a>
<a href="#Class_BorderImage"><b>BorderImage</b></a>
<a href="#Class_BoundingBox"><b>BoundingBox</b></a>
<a href="#Class_Button"><b>Button</b></a>
<a href="#Class_Camera"><b>Camera</b></a>
<a href="#Class_CascadeParameters"><b>CascadeParameters</b></a>
<a href="#Class_CheckBox"><b>CheckBox</b></a>
<a href="#Class_CollisionBox2D"><b>CollisionBox2D</b></a>
<a href="#Class_CollisionChain2D"><b>CollisionChain2D</b></a>
<a href="#Class_CollisionCircle2D"><b>CollisionCircle2D</b></a>
<a href="#Class_CollisionEdge2D"><b>CollisionEdge2D</b></a>
<a href="#Class_CollisionPolygon2D"><b>CollisionPolygon2D</b></a>
<a href="#Class_CollisionShape"><b>CollisionShape</b></a>
<a href="#Class_CollisionShape2D"><b>CollisionShape2D</b></a>
<a href="#Class_Color"><b>Color</b></a>
<a href="#Class_ColorFrame"><b>ColorFrame</b></a>
<a href="#Class_Component"><b>Component</b></a>
<a href="#Class_Connection"><b>Connection</b></a>
<a href="#Class_Console"><b>Console</b></a>
<a href="#Class_Constraint"><b>Constraint</b></a>
<a href="#Class_Constraint2D"><b>Constraint2D</b></a>
<a href="#Class_ConstraintDistance2D"><b>ConstraintDistance2D</b></a>
<a href="#Class_ConstraintFriction2D"><b>ConstraintFriction2D</b></a>
<a href="#Class_ConstraintGear2D"><b>ConstraintGear2D</b></a>
<a href="#Class_ConstraintMotor2D"><b>ConstraintMotor2D</b></a>
<a href="#Class_ConstraintMouse2D"><b>ConstraintMouse2D</b></a>
<a href="#Class_ConstraintPrismatic2D"><b>ConstraintPrismatic2D</b></a>
<a href="#Class_ConstraintPulley2D"><b>ConstraintPulley2D</b></a>
<a href="#Class_ConstraintRevolute2D"><b>ConstraintRevolute2D</b></a>
<a href="#Class_ConstraintRope2D"><b>ConstraintRope2D</b></a>
<a href="#Class_ConstraintWeld2D"><b>ConstraintWeld2D</b></a>
<a href="#Class_ConstraintWheel2D"><b>ConstraintWheel2D</b></a>
<a href="#Class_Context"><b>Context</b></a>
<a href="#Class_Controls"><b>Controls</b></a>
<a href="#Class_CrowdAgent"><b>CrowdAgent</b></a>
<a href="#Class_CrowdManager"><b>CrowdManager</b></a>
<a href="#Class_CrowdObstacleAvoidanceParams"><b>CrowdObstacleAvoidanceParams</b></a>
<a href="#Class_Cursor"><b>Cursor</b></a>
<a href="#Class_CustomGeometry"><b>CustomGeometry</b></a>
<a href="#Class_CustomGeometryVertex"><b>CustomGeometryVertex</b></a>
<a href="#Class_Database"><b>Database</b></a>
<a href="#Class_DbConnection"><b>DbConnection</b></a>
<a href="#Class_DbResult"><b>DbResult</b></a>
<a href="#Class_DebugHud"><b>DebugHud</b></a>
<a href="#Class_DebugRenderer"><b>DebugRenderer</b></a>
<a href="#Class_DecalSet"><b>DecalSet</b></a>
<a href="#Class_Deserializer"><b>Deserializer</b></a>
<a href="#Class_Drawable"><b>Drawable</b></a>
<a href="#Class_Drawable2D"><b>Drawable2D</b></a>
<a href="#Class_DropDownList"><b>DropDownList</b></a>
<a href="#Class_DynamicNavigationMesh"><b>DynamicNavigationMesh</b></a>
<a href="#Class_Engine"><b>Engine</b></a>
<a href="#Class_File"><b>File</b></a>
<a href="#Class_FileSelector"><b>FileSelector</b></a>
<a href="#Class_FileSelectorEntry"><b>FileSelectorEntry</b></a>
<a href="#Class_FileSystem"><b>FileSystem</b></a>
<a href="#Class_FocusParameters"><b>FocusParameters</b></a>
<a href="#Class_Font"><b>Font</b></a>
<a href="#Class_Frustum"><b>Frustum</b></a>
<a href="#Class_Geometry"><b>Geometry</b></a>
<a href="#Class_Graphics"><b>Graphics</b></a>
<a href="#Class_HttpRequest"><b>HttpRequest</b></a>
<a href="#Class_Image"><b>Image</b></a>
<a href="#Class_IndexBuffer"><b>IndexBuffer</b></a>
<a href="#Class_Input"><b>Input</b></a>
<a href="#Class_IntRect"><b>IntRect</b></a>
<a href="#Class_IntVector2"><b>IntVector2</b></a>
<a href="#Class_JSONFile"><b>JSONFile</b></a>
<a href="#Class_JSONValue"><b>JSONValue</b></a>
<a href="#Class_JoystickState"><b>JoystickState</b></a>
<a href="#Class_Light"><b>Light</b></a>
<a href="#Class_LineEdit"><b>LineEdit</b></a>
<a href="#Class_ListView"><b>ListView</b></a>
<a href="#Class_Localization"><b>Localization</b></a>
<a href="#Class_Log"><b>Log</b></a>
<a href="#Class_LogicComponent"><b>LogicComponent</b></a>
<a href="#Class_LuaScriptInstance"><b>LuaScriptInstance</b></a>
<a href="#Class_Material"><b>Material</b></a>
<a href="#Class_Matrix2"><b>Matrix2</b></a>
<a href="#Class_Matrix3"><b>Matrix3</b></a>
<a href="#Class_Matrix3x4"><b>Matrix3x4</b></a>
<a href="#Class_Matrix4"><b>Matrix4</b></a>
<a href="#Class_Menu"><b>Menu</b></a>
<a href="#Class_MessageBox"><b>MessageBox</b></a>
<a href="#Class_Model"><b>Model</b></a>
<a href="#Class_NamedPipe"><b>NamedPipe</b></a>
<a href="#Class_NavArea"><b>NavArea</b></a>
<a href="#Class_Navigable"><b>Navigable</b></a>
<a href="#Class_NavigationGeometryInfo"><b>NavigationGeometryInfo</b></a>
<a href="#Class_NavigationMesh"><b>NavigationMesh</b></a>
<a href="#Class_Network"><b>Network</b></a>
<a href="#Class_NetworkPriority"><b>NetworkPriority</b></a>
<a href="#Class_Node"><b>Node</b></a>
<a href="#Class_Object"><b>Object</b></a>
<a href="#Class_ObjectAnimation"><b>ObjectAnimation</b></a>
<a href="#Class_Obstacle"><b>Obstacle</b></a>
<a href="#Class_Octree"><b>Octree</b></a>
<a href="#Class_OctreeQueryResult"><b>OctreeQueryResult</b></a>
<a href="#Class_OffMeshConnection"><b>OffMeshConnection</b></a>
<a href="#Class_PackageEntry"><b>PackageEntry</b></a>
<a href="#Class_PackageFile"><b>PackageFile</b></a>
<a href="#Class_ParticleEffect"><b>ParticleEffect</b></a>
<a href="#Class_ParticleEffect2D"><b>ParticleEffect2D</b></a>
<a href="#Class_ParticleEmitter"><b>ParticleEmitter</b></a>
<a href="#Class_ParticleEmitter2D"><b>ParticleEmitter2D</b></a>
<a href="#Class_Pass"><b>Pass</b></a>
<a href="#Class_PhysicsRaycastResult"><b>PhysicsRaycastResult</b></a>
<a href="#Class_PhysicsRaycastResult2D"><b>PhysicsRaycastResult2D</b></a>
<a href="#Class_PhysicsWorld"><b>PhysicsWorld</b></a>
<a href="#Class_PhysicsWorld2D"><b>PhysicsWorld2D</b></a>
<a href="#Class_Plane"><b>Plane</b></a>
<a href="#Class_Polyhedron"><b>Polyhedron</b></a>
<a href="#Class_PropertySet2D"><b>PropertySet2D</b></a>
<a href="#Class_Quaternion"><b>Quaternion</b></a>
<a href="#Class_Ray"><b>Ray</b></a>
<a href="#Class_RayQueryResult"><b>RayQueryResult</b></a>
<a href="#Class_Rect"><b>Rect</b></a>
<a href="#Class_RemoteEvent"><b>RemoteEvent</b></a>
<a href="#Class_RenderPath"><b>RenderPath</b></a>
<a href="#Class_RenderPathCommand"><b>RenderPathCommand</b></a>
<a href="#Class_RenderSurface"><b>RenderSurface</b></a>
<a href="#Class_RenderTargetInfo"><b>RenderTargetInfo</b></a>
<a href="#Class_Renderer"><b>Renderer</b></a>
<a href="#Class_Resource"><b>Resource</b></a>
<a href="#Class_ResourceCache"><b>ResourceCache</b></a>
<a href="#Class_ResourceRef"><b>ResourceRef</b></a>
<a href="#Class_ResourceRefList"><b>ResourceRefList</b></a>
<a href="#Class_RibbonTrail"><b>RibbonTrail</b></a>
<a href="#Class_RigidBody"><b>RigidBody</b></a>
<a href="#Class_RigidBody2D"><b>RigidBody2D</b></a>
<a href="#Class_Scene"><b>Scene</b></a>
<a href="#Class_ScriptObject"><b>ScriptObject</b></a>
<a href="#Class_ScrollBar"><b>ScrollBar</b></a>
<a href="#Class_ScrollView"><b>ScrollView</b></a>
<a href="#Class_Serializable"><b>Serializable</b></a>
<a href="#Class_Serializer"><b>Serializer</b></a>
<a href="#Class_Skeleton"><b>Skeleton</b></a>
<a href="#Class_Skybox"><b>Skybox</b></a>
<a href="#Class_Slider"><b>Slider</b></a>
<a href="#Class_SmoothedTransform"><b>SmoothedTransform</b></a>
<a href="#Class_Sound"><b>Sound</b></a>
<a href="#Class_SoundListener"><b>SoundListener</b></a>
<a href="#Class_SoundSource"><b>SoundSource</b></a>
<a href="#Class_SoundSource3D"><b>SoundSource3D</b></a>
<a href="#Class_Sphere"><b>Sphere</b></a>
<a href="#Class_Spline"><b>Spline</b></a>
<a href="#Class_SplinePath"><b>SplinePath</b></a>
<a href="#Class_Sprite"><b>Sprite</b></a>
<a href="#Class_Sprite2D"><b>Sprite2D</b></a>
<a href="#Class_SpriteSheet2D"><b>SpriteSheet2D</b></a>
<a href="#Class_StaticModel"><b>StaticModel</b></a>
<a href="#Class_StaticModelGroup"><b>StaticModelGroup</b></a>
<a href="#Class_StaticSprite2D"><b>StaticSprite2D</b></a>
<a href="#Class_StringHash"><b>StringHash</b></a>
<a href="#Class_Technique"><b>Technique</b></a>
<a href="#Class_Terrain"><b>Terrain</b></a>
<a href="#Class_TerrainPatch"><b>TerrainPatch</b></a>
<a href="#Class_Text"><b>Text</b></a>
<a href="#Class_Text3D"><b>Text3D</b></a>
<a href="#Class_Texture"><b>Texture</b></a>
<a href="#Class_Texture2D"><b>Texture2D</b></a>
<a href="#Class_Texture2DArray"><b>Texture2DArray</b></a>
<a href="#Class_Texture3D"><b>Texture3D</b></a>
<a href="#Class_TextureCube"><b>TextureCube</b></a>
<a href="#Class_TextureFrame"><b>TextureFrame</b></a>
<a href="#Class_Tile2D"><b>Tile2D</b></a>
<a href="#Class_TileMap2D"><b>TileMap2D</b></a>
<a href="#Class_TileMapInfo2D"><b>TileMapInfo2D</b></a>
<a href="#Class_TileMapLayer2D"><b>TileMapLayer2D</b></a>
<a href="#Class_TileMapObject2D"><b>TileMapObject2D</b></a>
<a href="#Class_Time"><b>Time</b></a>
<a href="#Class_TmxFile2D"><b>TmxFile2D</b></a>
<a href="#Class_ToolTip"><b>ToolTip</b></a>
<a href="#Class_TouchState"><b>TouchState</b></a>
<a href="#Class_UI"><b>UI</b></a>
<a href="#Class_UIElement"><b>UIElement</b></a>
<a href="#Class_ValueAnimation"><b>ValueAnimation</b></a>
<a href="#Class_Variant"><b>Variant</b></a>
<a href="#Class_VariantMap"><b>VariantMap</b></a>
<a href="#Class_Vector2"><b>Vector2</b></a>
<a href="#Class_Vector3"><b>Vector3</b></a>
<a href="#Class_Vector4"><b>Vector4</b></a>
<a href="#Class_VectorBuffer"><b>VectorBuffer</b></a>
<a href="#Class_VertexBuffer"><b>VertexBuffer</b></a>
<a href="#Class_VertexElement"><b>VertexElement</b></a>
<a href="#Class_View3D"><b>View3D</b></a>
<a href="#Class_Viewport"><b>Viewport</b></a>
<a href="#Class_Window"><b>Window</b></a>
<a href="#Class_XMLElement"><b>XMLElement</b></a>
<a href="#Class_XMLFile"><b>XMLFile</b></a>
<a href="#Class_XPathQuery"><b>XPathQuery</b></a>
<a href="#Class_XPathResultSet"><b>XPathResultSet</b></a>
<a href="#Class_Zone"><b>Zone</b></a>

\section LuaScriptAPI_Classes Classes
<a name="Class_Animatable"></a>
### Animatable : Serializable
Methods:

- void SetAnimationEnabled(bool enable)
- void SetAnimationTime(float time)
- void SetObjectAnimation(ObjectAnimation* objectAnimation)
- void SetAttributeAnimation(const String& name, ValueAnimation* attributeAnimation, WrapMode wrapMode = WM_LOOP, float speed = 1.0f)
- void SetAttributeAnimationWrapMode(const String& name, WrapMode wrapMode)
- void SetAttributeAnimationSpeed(const String& name, float speed)
- void SetAttributeAnimationTime(const String& name, float time)
- void RemoveObjectAnimation()
- void RemoveAttributeAnimation(const String& name)
- bool GetAnimationEnabled() const
- ObjectAnimation* GetObjectAnimation() const
- ValueAnimation* GetAttributeAnimation(const String& name) const
- WrapMode GetAttributeAnimationWrapMode(const String& name) const
- float GetAttributeAnimationSpeed(const String& name) const
- float GetAttributeAnimationTime(const String& name) const

Properties:

- bool animationEnabled
- ObjectAnimation* objectAnimation
- float animationTime (writeonly)

<a name="Class_AnimatedModel"></a>
### AnimatedModel : StaticModel
- AnimatedModel()

Methods:

- void SetModel(Model* model, bool createBones = true)
- AnimationState* AddAnimationState(Animation* animation)
- void AnimatedModel::RemoveAnimationState(Animation* animation)
- void AnimatedModel::RemoveAnimationState(const String& animationName)
- void AnimatedModel::RemoveAnimationState(StringHash animationNameHash)
- void AnimatedModel::RemoveAnimationState(AnimationState* state)
- void AnimatedModel::RemoveAnimationState(unsigned index)
- void RemoveAllAnimationStates()
- void SetAnimationLodBias(float bias)
- void SetUpdateInvisible(bool enable)
- void SetMorphWeight(unsigned index, float weight)
- void SetMorphWeight(const String& name, float weight)
- void SetMorphWeight(StringHash nameHash, float weight)
- void ResetMorphWeights()
- Skeleton& GetSkeleton()
- unsigned GetNumAnimationStates() const
- AnimationState* GetAnimationState(Animation* animation) const
- AnimationState* GetAnimationState(const String& animationName) const
- AnimationState* GetAnimationState(StringHash animationNameHash) const
- AnimationState* GetAnimationState(unsigned index) const
- float GetAnimationLodBias() const
- bool GetUpdateInvisible() const
- const Vector<ModelMorph>& GetMorphs() const
- unsigned GetNumMorphs() const
- float GetMorphWeight(unsigned index) const
- float GetMorphWeight(const String& name) const
- float GetMorphWeight(StringHash nameHash) const
- bool IsMaster() const
- void UpdateBoneBoundingBox()

Properties:

- Model* model
- UpdateGeometryType updateGeometryType (readonly)
- Skeleton& skeleton (readonly)
- unsigned numAnimationStates (readonly)
- float animationLodBias
- bool updateInvisible
- unsigned numMorphs (readonly)
- bool master (readonly)

<a name="Class_AnimatedSprite2D"></a>
### AnimatedSprite2D : StaticSprite2D
- AnimatedSprite2D()

Methods:

- void SetAnimationSet(AnimationSet2D* animationSet)
- void SetEntity(const String& name)
- void SetAnimation(const String& name, LoopMode2D loopMode = LM_DEFAULT)
- void SetLoopMode(LoopMode2D loopMode)
- void SetSpeed(float speed)
- AnimationSet2D* GetAnimationSet() const
- const String& GetEntity() const
- const String& GetAnimation() const
- LoopMode2D GetLoopMode() const
- float GetSpeed() const

Properties:

- AnimationSet2D* animationSet
- const String& entity
- const String& animation (readonly)
- LoopMode2D loopMode
- float speed

<a name="Class_Animation"></a>
### Animation : Resource
- Animation()

Methods:

- void SetAnimationName(const String& name)
- void SetLength(float length)
- AnimationTrack* CreateTrack(const String& name)
- bool RemoveTrack(const String& name)
- void RemoveAllTracks()
- void SetTrigger(unsigned index, const AnimationTriggerPoint& trigger)
- void AddTrigger(const AnimationTriggerPoint& trigger)
- void void AddTrigger(float time, bool timeIsNormalized, const Variant& data)
- void RemoveTrigger(unsigned index)
- void RemoveAllTriggers()
- SharedPtr<Animation> Clone(const String& cloneName = String::EMPTY) const
- const String& GetAnimationName() const
- StringHash GetAnimationNameHash() const
- float GetLength() const
- unsigned GetNumTracks() const
- AnimationTrack* GetTrack(const String& name)
- unsigned GetNumTriggers() const
- AnimationTriggerPoint* GetTrigger(unsigned index)

Properties:

- const String& animationName
- StringHash animationNameHash (readonly)
- float length
- unsigned numTracks (readonly)
- unsigned numTriggers

<a name="Class_AnimationController"></a>
### AnimationController : Component
- AnimationController()

Methods:

- bool Play(const String& name, unsigned char layer, bool looped, float fadeInTime = 0.0f)
- bool PlayExclusive(const String& name, unsigned char layer, bool looped, float fadeTime = 0.0f)
- bool Stop(const String& name, float fadeOutTime = 0.0f)
- void StopLayer(unsigned char layer, float fadeOutTime = 0.0f)
- void StopAll(float fadeTime = 0.0f)
- bool Fade(const String& name, float targetWeight, float fadeTime)
- bool FadeOthers(const String& name, float targetWeight, float fadeTime)
- bool SetLayer(const String& name, unsigned char layer)
- bool SetStartBone(const String& name, const String& startBoneName)
- bool SetTime(const String& name, float time)
- bool SetWeight(const String& name, float weight)
- bool SetLooped(const String& name, bool enable)
- bool SetSpeed(const String& name, float speed)
- bool SetAutoFade(const String& name, float fadeOutTime)
- bool SetRemoveOnCompletion(const String& name, bool removeOnCompletion)
- bool SetBlendMode(const String& name, AnimationBlendMode mode)
- bool IsPlaying(const String& name) const
- bool IsFadingIn(const String& name) const
- bool IsFadingOut(const String& name) const
- bool IsAtEnd(const String& name) const
- unsigned char GetLayer(const String& name) const
- Bone* GetStartBone(const String& name) const
- const String& GetStartBoneName(const String& name) const
- float GetTime(const String& name) const
- float GetWeight(const String& name) const
- bool IsLooped(const String& name) const
- AnimationBlendMode GetBlendMode(const String& name) const
- float GetLength(const String& name) const
- float GetSpeed(const String& name) const
- float GetFadeTarget(const String& name) const
- float GetFadeTime(const String& name) const
- float GetAutoFade(const String& name) const
- bool GetRemoveOnCompletion(const String& name) const
- AnimationState* GetAnimationState(const String& name) const

<a name="Class_AnimationKeyFrame"></a>
### AnimationKeyFrame
Fields:

- float time
- Vector3 position
- Quaternion rotation
- Vector3 scale

<a name="Class_AnimationSet2D"></a>
### AnimationSet2D : Resource
- AnimationSet2D()

Methods:

- unsigned GetNumAnimations() const
- String GetAnimation(unsigned index) const
- bool HasAnimation(const String& animation) const

Properties:

- unsigned numAnimations (readonly)

<a name="Class_AnimationState"></a>
### AnimationState : RefCounted
- AnimationState(AnimatedModel* model, Animation* animation)

Methods:

- void SetStartBone(Bone* bone)
- void SetLooped(bool looped)
- void SetWeight(float weight)
- void SetBlendMode(AnimationBlendMode mode)
- void SetTime(float time)
- void SetBoneWeight(unsigned index, float weight, bool recursive = false)
- void SetBoneWeight(const String& name, float weight, bool recursive = false)
- void AddWeight(float delta)
- void AddTime(float delta)
- void SetLayer(unsigned char layer)
- Animation* GetAnimation() const
- AnimatedModel* GetModel() const
- Node* GetNode() const
- Bone* GetStartBone() const
- float AnimationState::GetBoneWeight(unsigned index) const
- float AnimationState::GetBoneWeight(const String& name) const
- unsigned GetTrackIndex(const String& name) const
- bool IsEnabled() const
- bool IsLooped() const
- float GetWeight() const
- AnimationBlendMode GetBlendMode() const
- float GetTime() const
- float GetLength() const
- unsigned char GetLayer() const
- void Apply()

Properties:

- Animation* animation (readonly)
- AnimatedModel* model (readonly)
- Node* node (readonly)
- Bone* startBone
- bool enabled (readonly)
- bool looped
- float weight
- AnimationBlendMode blendMode
- float time
- float length (readonly)
- unsigned char layer

<a name="Class_AnimationTrack"></a>
### AnimationTrack
Methods:

- void SetKeyFrame(unsigned index, const AnimationKeyFrame& command)
- void AddKeyFrame(const AnimationKeyFrame& keyFrame)
- void InsertKeyFrame(unsigned index, const AnimationKeyFrame& keyFrame)
- void RemoveKeyFrame(unsigned index)
- void RemoveAllKeyFrames()
- AnimationKeyFrame* GetKeyFrame(unsigned index)
- unsigned GetNumKeyFrames() const

Properties:

- unsigned numKeyFrames (readonly)

Fields:

- String name
- StringHash nameHash
- unsigned char channelMask
- Vector<AnimationKeyFrame> keyFrames

<a name="Class_AnimationTriggerPoint"></a>
### AnimationTriggerPoint
- AnimationTriggerPoint()

Fields:

- float time
- Variant data

<a name="Class_Audio"></a>
### Audio : Object
Methods:

- bool SetMode(int bufferLengthMSec, int mixRate, bool stereo, bool interpolation = true)
- bool Play()
- void Stop()
- void SetMasterGain(const String& type, float gain)
- void PauseSoundType(const String& type)
- void ResumeSoundType(const String& type)
- void ResumeAll()
- void SetListener(SoundListener* listener)
- void StopSound(Sound* sound)
- unsigned GetSampleSize() const
- int GetMixRate() const
- bool GetInterpolation() const
- bool IsStereo() const
- bool IsPlaying() const
- bool IsInitialized() const
- float GetMasterGain(const String& type) const
- bool IsSoundTypePaused(const String& type) const
- SoundListener* GetListener() const
- const PODVector<SoundSource*>& GetSoundSources() const
- bool HasMasterGain(const String& type) const
- void AddSoundSource(SoundSource* soundSource)
- void RemoveSoundSource(SoundSource* soundSource)

Properties:

- unsigned sampleSize (readonly)
- int mixRate (readonly)
- bool interpolation (readonly)
- bool stereo (readonly)
- bool playing (readonly)
- bool initialized (readonly)
- SoundListener* listener

<a name="Class_BiasParameters"></a>
### BiasParameters
- BiasParameters()
- BiasParameters(float constantBias, float slopeScaledBias, float normalOffset = 0.0f)

Fields:

- float constantBias
- float slopeScaledBias
- float normalOffset

<a name="Class_Billboard"></a>
### Billboard
Fields:

- Vector3 position;
- Vector2 size;
- Rect uv;
- Color color;
- float rotation;
- Vector3 direction;
- bool enabled;

<a name="Class_BillboardSet"></a>
### BillboardSet : Drawable
- BillboardSet()

Methods:

- void SetMaterial(Material* material)
- void SetNumBillboards(unsigned num)
- void SetRelative(bool enable)
- void SetScaled(bool enable)
- void SetSorted(bool enable)
- void SetFixedScreenSize(bool enable)
- void SetFaceCameraMode(FaceCameraMode mode)
- void SetAnimationLodBias(float bias)
- void Commit()
- Material* GetMaterial() const
- unsigned GetNumBillboards() const
- Billboard* GetBillboard(unsigned index)
- bool IsRelative() const
- bool IsScaled() const
- bool IsSorted() const
- bool IsFixedScreenSize() const
- FaceCameraMode GetFaceCameraMode() const
- float GetAnimationLodBias() const

Properties:

- Material* material
- unsigned numBillboards
- bool relative
- bool scaled
- bool sorted
- bool fixedScreenSize
- FaceCameraMode faceCameraMode
- float animationLodBias

<a name="Class_Bone"></a>
### Bone
- Bone()

Fields:

- String name
- StringHash nameHash
- unsigned parentIndex
- Vector3 initialPosition
- Quaternion initialRotation
- Vector3 initialScale
- Matrix3x4 offsetMatrix
- bool animated
- unsigned char collisionMask
- float radius
- BoundingBox boundingBox
- WeakPtr<Node> node

<a name="Class_BorderImage"></a>
### BorderImage : UIElement
- BorderImage

Methods:

- void SetTexture(Texture* texture)
- void SetImageRect(const IntRect& rect)
- void SetFullImageRect()
- void SetBorder(const IntRect& rect)
- void SetImageBorder(const IntRect& rect)
- void SetHoverOffset(const IntVector2& offset)
- void SetHoverOffset(int x, int y)
- void SetBlendMode(BlendMode mode)
- void SetTiled(bool enable)
- Texture* GetTexture() const
- const IntRect& GetImageRect() const
- const IntRect& GetBorder() const
- const IntRect& GetImageBorder() const
- const IntVector2& GetHoverOffset() const
- BlendMode GetBlendMode() const
- bool IsTiled() const

Properties:

- Texture* texture
- const IntRect& imageRect
- const IntRect& border
- const IntRect& imageBorder
- const IntVector2& hoverOffset
- BlendMode blendMode
- bool tiled

<a name="Class_BoundingBox"></a>
### BoundingBox
- BoundingBox()
- BoundingBox(const BoundingBox& box)
- BoundingBox(const Rect& rect)
- BoundingBox(const Vector3& min, const Vector3& max)
- BoundingBox(float min, float max)
- BoundingBox(const Frustum& frustum)
- BoundingBox(const Polyhedron& poly)
- BoundingBox(const Sphere& sphere)

Methods:

- bool ==(const BoundingBox& rhs) const
- void Define(const BoundingBox& box)
- void Define(const Rect& rect)
- void Define(const Vector3& min, const Vector3& max)
- void Define(float min, float max)
- void Define(const Vector3* vertices, unsigned count)
- void Define(const Frustum& frustum)
- void Define(const Polyhedron& poly)
- void Define(const Sphere& sphere)
- void Merge(const Vector3& point)
- void Merge(const BoundingBox& box)

<a name="Class_Button"></a>
### Button : BorderImage
- Button()

Methods:

- void SetPressedOffset(const IntVector2& offset)
- void SetPressedOffset(int x, int y)
- void SetPressedChildOffset(const IntVector2& offset)
- void SetPressedChildOffset(int x, int y)
- void SetRepeat(float delay, float rate)
- void SetRepeatDelay(float delay)
- void SetRepeatRate(float rate)
- const IntVector2& GetPressedOffset() const
- const IntVector2& GetPressedChildOffset() const
- float GetRepeatDelay() const
- float GetRepeatRate() const
- bool IsPressed() const

Properties:

- const IntVector2& pressedOffset
- const IntVector2& pressedChildOffset
- float repeatDelay
- float repeatRate
- bool pressed (readonly)

<a name="Class_Camera"></a>
### Camera : Component
- Camera()

Methods:

- void SetNearClip(float nearClip)
- void SetFarClip(float farClip)
- void SetFov(float fov)
- void SetOrthoSize(float orthoSize)
- void SetOrthoSize(const Vector2& orthoSize)
- void SetAspectRatio(float aspectRatio)
- void SetFillMode(FillMode mode)
- void SetZoom(float zoom)
- void SetLodBias(float bias)
- void SetViewMask(unsigned mask)
- void SetViewOverrideFlags(unsigned flags)
- void SetOrthographic(bool enable)
- void SetAutoAspectRatio(bool enable)
- void SetProjectionOffset(const Vector2& offset)
- void SetUseReflection(bool enable)
- void SetReflectionPlane(const Plane& plane)
- void SetUseClipping(bool enable)
- void SetClipPlane(const Plane& plane)
- void SetFlipVertical(bool enable)
- float GetFarClip() const
- float GetNearClip() const
- float GetFov() const
- float GetOrthoSize() const
- float GetAspectRatio() const
- float GetZoom() const
- float GetLodBias() const
- unsigned GetViewMask() const
- unsigned GetViewOverrideFlags() const
- FillMode GetFillMode() const
- bool IsOrthographic() const
- bool GetAutoAspectRatio() const
- const Frustum& GetFrustum() const
- const Matrix4& GetProjection() const
- Matrix4 GetProjection(bool apiSpecific) const
- const Matrix3x4& GetView() const
- void GetFrustumSize(Vector3& near, Vector3& far) const
- float GetHalfViewSize() const
- Frustum GetSplitFrustum(float nearClip, float farClip) const
- Frustum GetViewSpaceFrustum() const
- Frustum GetViewSpaceSplitFrustum(float nearClip, float farClip) const
- Ray GetScreenRay(float x, float y) const
- Vector2 WorldToScreenPoint(const Vector3& worldPos) const
- Vector3 ScreenToWorldPoint(const Vector3& screenPos) const
- const Vector2& GetProjectionOffset() const
- bool GetUseReflection() const
- const Plane& GetReflectionPlane() const
- bool GetUseClipping() const
- const Plane& GetClipPlane() const
- bool GetFlipVertical() const
- float GetDistance(const Vector3& worldPos) const
- float GetDistanceSquared(const Vector3& worldPos) const
- float GetLodDistance(float distance, float scale, float bias) const
- bool IsProjectionValid() const
- Matrix3x4 GetEffectiveWorldTransform() const

Properties:

- float farClip
- float nearClip
- float fov
- float orthoSize
- float aspectRatio
- float zoom
- float lodBias
- unsigned viewMask
- unsigned viewOverrideFlags
- FillMode fillMode
- bool orthographic
- bool autoAspectRatio
- const Frustum& frustum (readonly)
- const Matrix3x4& view (readonly)
- float halfViewSize (readonly)
- Frustum viewSpaceFrustum (readonly)
- const Vector2& projectionOffset
- bool useReflection
- const Plane& reflectionPlane
- bool useClipping
- const Plane& clipPlane
- bool flipVertical
- bool projectionValid (readonly)

<a name="Class_CascadeParameters"></a>
### CascadeParameters
- CascadeParameters()
- CascadeParameters(float split1, float split2, float split3, float split4, float fadeStart, float biasAutoAdjust = 1.0f)

Fields:

- float fadeStart
- float biasAutoAdjust

<a name="Class_CheckBox"></a>
### CheckBox : BorderImage
- CheckBox()

Methods:

- void SetChecked(bool enable)
- void SetCheckedOffset(const IntVector2& rect)
- void SetCheckedOffset(int x, int y)
- bool IsChecked() const
- const IntVector2& GetCheckedOffset() const

Properties:

- bool checked
- const IntVector2& checkedOffset

<a name="Class_CollisionBox2D"></a>
### CollisionBox2D : CollisionShape2D
- CollisionBox2D()

Methods:

- void SetSize(const Vector2& size)
- void SetSize(float width, float height)
- void SetCenter(const Vector2& center)
- void SetCenter(float x, float y)
- void SetAngle(float angle)
- const Vector2& GetSize() const
- const Vector2& GetCenter() const
- float GetAngle() const

Properties:

- const Vector2& size
- const Vector2& center
- float angle

<a name="Class_CollisionChain2D"></a>
### CollisionChain2D : CollisionShape2D
- CollisionChain2D()

Methods:

- void SetLoop(bool loop)
- void SetVertexCount(unsigned count)
- void SetVertex(unsigned index, const Vector2& vertex)
- void SetVertices(const PODVector<Vector2>& vertices)
- bool GetLoop() const
- unsigned GetVertexCount() const
- const Vector2& GetVertex(unsigned index) const
- const PODVector<Vector2>& GetVertices() const

Properties:

- bool loop
- unsigned vertexCount

<a name="Class_CollisionCircle2D"></a>
### CollisionCircle2D : CollisionShape2D
- CollisionCircle2D()

Methods:

- void SetRadius(float radius)
- void SetCenter(const Vector2& center)
- void SetCenter(float x, float y)
- float GetRadius() const
- const Vector2& GetCenter() const

Properties:

- float radius
- const Vector2& center

<a name="Class_CollisionEdge2D"></a>
### CollisionEdge2D : CollisionShape2D
- CollisionEdge2D()

Methods:

- void SetVertex1(const Vector2& vertex)
- void SetVertex2(const Vector2& vertex)
- void SetVertices(const Vector2& vertex1, const Vector2& vertex2)
- const Vector2& GetVertex1() const
- const Vector2& GetVertex2() const

Properties:

- const Vector2& vertex1
- const Vector2& vertex2

<a name="Class_CollisionPolygon2D"></a>
### CollisionPolygon2D : CollisionShape2D
- CollisionPolygon2D()

Methods:

- void SetVertexCount(unsigned count)
- void SetVertex(unsigned index, const Vector2& vertex)
- void SetVertices(const PODVector<Vector2>& vertices)
- unsigned GetVertexCount() const
- const Vector2& GetVertex(unsigned index) const
- const PODVector<Vector2>& GetVertices() const

Properties:

- unsigned vertexCount

<a name="Class_CollisionShape"></a>
### CollisionShape : Component
- CollisionShape()

Methods:

- void SetBox(const Vector3& size, const Vector3& position = Vector3::ZERO, const Quaternion& rotation = Quaternion::IDENTITY)
- void SetSphere(float diameter, const Vector3& position = Vector3::ZERO, const Quaternion& rotation = Quaternion::IDENTITY)
- void SetStaticPlane(const Vector3& position = Vector3::ZERO, const Quaternion& rotation = Quaternion::IDENTITY)
- void SetCylinder(float diameter, float height, const Vector3& position = Vector3::ZERO, const Quaternion& rotation = Quaternion::IDENTITY)
- void SetCapsule(float diameter, float height, const Vector3& position = Vector3::ZERO, const Quaternion& rotation = Quaternion::IDENTITY)
- void SetCone(float diameter, float height, const Vector3& position = Vector3::ZERO, const Quaternion& rotation = Quaternion::IDENTITY)
- void SetTriangleMesh(Model* model, unsigned lodLevel = 0, const Vector3& scale = Vector3::ONE, const Vector3& position = Vector3::ZERO, const Quaternion& rotation = Quaternion::IDENTITY)
- void SetCustomTriangleMesh(CustomGeometry* custom, const Vector3& scale = Vector3::ONE, const Vector3& position = Vector3::ZERO,
- void SetConvexHull(Model* model, unsigned lodLevel = 0, const Vector3& scale = Vector3::ONE, const Vector3& position = Vector3::ZERO, const Quaternion& rotation = Quaternion::IDENTITY)
- void SetCustomConvexHull(CustomGeometry* custom, const Vector3& scale = Vector3::ONE, const Vector3& position = Vector3::ZERO,
- void SetTerrain(unsigned lodLevel = 0)
- void SetShapeType(ShapeType type)
- void SetSize(const Vector3& size)
- void SetPosition(const Vector3& position)
- void SetRotation(const Quaternion& rotation)
- void SetTransform(const Vector3& position, const Quaternion& rotation)
- void SetMargin(float margin)
- void SetModel(Model* model)
- void SetLodLevel(unsigned lodLevel)
- PhysicsWorld* GetPhysicsWorld() const
- ShapeType GetShapeType() const
- const Vector3& GetSize() const
- const Vector3& GetPosition() const
- const Quaternion& GetRotation() const
- float GetMargin() const
- Model* GetModel() const
- unsigned GetLodLevel() const
- BoundingBox GetWorldBoundingBox() const

Properties:

- PhysicsWorld* physicsWorld (readonly)
- ShapeType shapeType
- const Vector3& size
- const Vector3& position
- const Quaternion& rotation
- float margin
- Model* model
- unsigned lodLevel
- BoundingBox worldBoundingBox (readonly)
- unsigned terrain (writeonly)

<a name="Class_CollisionShape2D"></a>
### CollisionShape2D : Component
Methods:

- void SetTrigger(bool trigger)
- void SetCategoryBits(int categoryBits)
- void SetMaskBits(int maskBits)
- void SetGroupIndex(int groupIndex)
- void SetDensity(float density)
- void SetFriction(float friction)
- void SetRestitution(float restitution)
- bool IsTrigger() const
- int GetCategoryBits() const
- int GetMaskBits() const
- int GetGroupIndex() const
- float GetDensity() const
- float GetFriction() const
- float GetRestitution() const
- float GetMass() const
- float GetInertia() const
- Vector2 GetMassCenter() const

Properties:

- bool trigger
- int categoryBits
- int maskBits
- int groupIndex
- float density
- float friction
- float restitution
- float mass (readonly)
- float inertia (readonly)
- Vector2 massCenter (readonly)

<a name="Class_Color"></a>
### Color
- Color()
- Color(const Color& color)
- Color(const Color& color, float a)
- Color(float r, float g, float b)
- Color(float r, float g, float b, float a)

Methods:

- bool operator ==(const Color& rhs)
- Color operator *(float rhs) const
- Color operator +(const Color& rhs)
- unsigned ToUInt() const
- Vector3 ToHSL() const
- Vector3 ToHSV() const
- void FromHSL(float h, float s, float l, float a = 1.0f)
- void FromHSV(float h, float s, float v, float a = 1.0f)
- Vector3 ToVector3() const
- Vector4 ToVector4() const
- float SumRGB() const
- float Average() const
- float Luma() const
- float Chroma() const
- float Hue() const
- float SaturationHSL() const
- float SaturationHSV() const
- float Value() const
- float Lightness() const
- float Value() const
- float MinRGB() const
- float Range() const
- void Clip(bool clipAlpha = false)
- void Invert(bool invertAlpha = false)
- Color Lerp(const Color& rhs, float t) const
- Color Abs() const
- bool Equals(const Color& rhs) const
- String ToString() const

Fields:

- float r
- float g
- float b
- float a

StaticConstants:

- Color WHITE
- Color GRAY
- Color BLACK
- Color RED
- Color GREEN
- Color BLUE
- Color CYAN
- Color MAGENTA
- Color YELLOW
- Color TRANSPARENT

<a name="Class_ColorFrame"></a>
### ColorFrame
- ColorFrame()
- ColorFrame(const Color& color)
- ColorFrame(const Color& color, float time)

Methods:

- Color Interpolate(const ColorFrame& next, float time) const

Fields:

- Color color
- float time

<a name="Class_Component"></a>
### Component : Animatable
- Component()

Methods:

- void SetEnabled(bool enable)
- void Remove()
- unsigned GetID() const
- Node* GetNode() const
- Scene* GetScene() const
- bool IsEnabled() const
- bool IsEnabledEffective() const
- SharedPtr<Component> GetComponent(StringHash type) const
- PODVector<Component*> GetComponents() const
- void AddReplicationState(ComponentReplicationState* state)
- void PrepareNetworkUpdate()

Properties:

- unsigned id (readonly)
- Node* node (readonly)
- Scene* scene (readonly)
- bool enabled
- bool enabledEffective (readonly)

<a name="Class_Connection"></a>
### Connection : Object
Methods:

- void SendMessage(int msgID, bool reliable, bool inOrder, const VectorBuffer& msg, unsigned contentID = 0)
- void SendMessage(int msgID, bool reliable, bool inOrder, const unsigned char* data, unsigned numBytes, unsigned contentID = 0)
- void SendRemoteEvent(StringHash eventType, bool inOrder, const VariantMap& eventData = Variant::emptyVariantMap)
- void SendRemoteEvent(Node* node, StringHash eventType, bool inOrder, const VariantMap& eventData = Variant::emptyVariantMap)
- void SetScene(Scene* newScene)
- void SetIdentity(const VariantMap& identity)
- void SetControls(const Controls& newControls)
- void SetPosition(const Vector3& position)
- void SetRotation(const Quaternion& rotation)
- void SetConnectPending(bool connectPending)
- void SetLogStatistics(bool enable)
- void Disconnect(int waitMSec = 0)
- VariantMap& GetIdentity()
- Scene* GetScene() const
- const Controls& GetControls() const
- unsigned char GetTimeStamp() const
- const Vector3& GetPosition() const
- const Quaternion& GetRotation() const
- bool IsClient() const
- bool IsConnected() const
- bool IsConnectPending() const
- bool IsSceneLoaded() const
- bool GetLogStatistics() const
- String GetAddress() const
- unsigned short GetPort() const
- float GetRoundTripTime() const
- float GetLastHeardTime() const
- float GetBytesInPerSec() const
- float GetBytesOutPerSec() const
- float GetPacketsInPerSec() const
- float GetPacketsOutPerSec() const
- String ToString() const
- unsigned GetNumDownloads() const
- const String& GetDownloadName() const
- float GetDownloadProgress() const
- void SendPackageToClient(PackageFile* package)

Properties:

- VariantMap& identity (readonly)
- Scene* scene
- const Controls& controls
- unsigned char timeStamp (readonly)
- const Vector3& position
- const Quaternion& rotation
- bool client (readonly)
- bool connected (readonly)
- bool connectPending
- bool sceneLoaded (readonly)
- bool logStatistics
- String address (readonly)
- unsigned short port (readonly)
- float roundTripTime (readonly)
- float lastHeardTime (readonly)
- float bytesInPerSec (readonly)
- float bytesOutPerSec (readonly)
- float packetsInPerSec (readonly)
- float packetsOutPerSec (readonly)
- unsigned numDownloads (readonly)
- const String& downloadName (readonly)
- float downloadProgress (readonly)

<a name="Class_Console"></a>
### Console : Object
Methods:

- void SetDefaultStyle(XMLFile* style)
- void SetVisible(bool enable)
- void Toggle()
- void SetAutoVisibleOnError(bool enable)
- void SetCommandInterpreter(const String& interpreter)
- void SetNumBufferedRows(unsigned rows)
- void SetNumRows(unsigned rows)
- void SetNumHistoryRows(unsigned rows)
- void SetFocusOnShow(bool enable)
- void UpdateElements()
- XMLFile* GetDefaultStyle() const
- BorderImage* GetBackground() const
- LineEdit* GetLineEdit() const
- Button* GetCloseButton() const
- bool IsVisible() const
- bool IsAutoVisibleOnError() const
- const String& GetCommandInterpreter() const
- unsigned GetNumBufferedRows() const
- unsigned GetNumRows() const
- void CopySelectedRows() const
- unsigned GetNumHistoryRows() const
- unsigned GetHistoryPosition() const
- const String& GetHistoryRow(unsigned index) const
- bool GetFocusOnShow() const

Properties:

- XMLFile* defaultStyle
- BorderImage* background (readonly)
- LineEdit* lineEdit (readonly)
- Button* closeButton (readonly)
- bool visible
- bool autoVisibleOnError
- const String& commandInterpreter
- unsigned numBufferedRows
- unsigned numRows
- unsigned numHistoryRows
- unsigned historyPosition (readonly)
- bool focusOnShow

<a name="Class_Constraint"></a>
### Constraint : Component
- Constraint()

Methods:

- void SetConstraintType(ConstraintType type)
- void SetOtherBody(RigidBody* body)
- void SetPosition(const Vector3& position)
- void SetRotation(const Quaternion& rotation)
- void SetAxis(const Vector3& axis)
- void SetOtherPosition(const Vector3& position)
- void SetOtherRotation(const Quaternion& rotation)
- void SetOtherAxis(const Vector3& axis)
- void SetWorldPosition(const Vector3& position)
- void SetHighLimit(const Vector2& limit)
- void SetLowLimit(const Vector2& limit)
- void SetERP(float erp)
- void SetCFM(float cfm)
- void SetDisableCollision(bool disable)
- PhysicsWorld* GetPhysicsWorld() const
- ConstraintType GetConstraintType() const
- RigidBody* GetOwnBody() const
- RigidBody* GetOtherBody() const
- const Vector3& GetPosition() const
- const Quaternion& GetRotation() const
- const Vector3& GetOtherPosition() const
- const Quaternion& GetOtherRotation() const
- Vector3 GetWorldPosition() const
- const Vector2& GetHighLimit() const
- const Vector2& GetLowLimit() const
- float GetERP() const
- float GetCFM() const
- bool GetDisableCollision() const

Properties:

- PhysicsWorld* physicsWorld (readonly)
- ConstraintType constraintType
- RigidBody* ownBody (readonly)
- RigidBody* otherBody
- const Vector3& position
- const Quaternion& rotation
- const Vector3& axis (writeonly)
- const Vector3& otherPosition
- const Quaternion& otherRotation
- const Vector3& otherAxis (writeonly)
- Vector3 worldPosition
- const Vector2& highLimit
- const Vector2& lowLimit
- float ERP
- float CFM
- bool disableCollision

<a name="Class_Constraint2D"></a>
### Constraint2D : Component
- Constraint2D()

Methods:

- void SetOtherBody(RigidBody2D* body)
- void SetCollideConnected(bool collideConnected)
- RigidBody2D* GetOwnerBody() const
- RigidBody2D* GetOtherBody() const
- bool GetCollideConnected() const

Properties:

- RigidBody2D* ownerBody (readonly)
- RigidBody2D* otherBody
- bool collideConnected

<a name="Class_ConstraintDistance2D"></a>
### ConstraintDistance2D : Constraint2D
- ConstraintDistance2D()

Methods:

- void SetOwnerBodyAnchor(const Vector2& anchor)
- void SetOtherBodyAnchor(const Vector2& anchor)
- void SetFrequencyHz(float frequencyHz)
- void SetDampingRatio(float dampingRatio)
- const Vector2& GetOwnerBodyAnchor() const
- const Vector2& GetOtherBodyAnchor() const
- float GetFrequencyHz() const
- float GetDampingRatio() const

Properties:

- const Vector2& ownerBodyAnchor
- const Vector2& otherBodyAnchor
- float frequencyHz
- float dampingRatio

<a name="Class_ConstraintFriction2D"></a>
### ConstraintFriction2D : Constraint2D
- ConstraintFriction2D()

Methods:

- void SetAnchor(const Vector2& anchor)
- void SetMaxForce(float maxForce)
- void SetMaxTorque(float maxTorque)
- const Vector2& GetAnchor() const
- float GetMaxForce() const
- float GetMaxTorque() const

Properties:

- const Vector2& anchor
- float maxForce
- float maxTorque

<a name="Class_ConstraintGear2D"></a>
### ConstraintGear2D : Constraint2D
- ConstraintGear2D()

Methods:

- void SetOwnerConstraint(Constraint2D* constraint)
- void SetOtherConstraint(Constraint2D* constraint)
- void SetRatio(float ratio)
- Constraint2D* GetOwnerConstraint() const
- Constraint2D* GetOtherConstraint() const
- float GetRatio() const

Properties:

- Constraint2D* ownerConstraint
- Constraint2D* otherConstraint
- float ratio

<a name="Class_ConstraintMotor2D"></a>
### ConstraintMotor2D : Constraint2D
- ConstraintMotor2D()

Methods:

- void SetLinearOffset(const Vector2& linearOffset)
- void SetAngularOffset(float angularOffset)
- void SetMaxForce(float maxForce)
- void SetMaxTorque(float maxTorque)
- void SetCorrectionFactor(float correctionFactor)
- const Vector2& GetLinearOffset() const
- float GetAngularOffset() const
- float GetMaxForce() const
- float GetMaxTorque() const
- float GetCorrectionFactor() const

Properties:

- const Vector2& linearOffset
- float angularOffset
- float maxForce
- float maxTorque
- float correctionFactor

<a name="Class_ConstraintMouse2D"></a>
### ConstraintMouse2D : Constraint2D
- ConstraintMouse2D()

Methods:

- void SetTarget(const Vector2& target)
- void SetMaxForce(float maxForce)
- void SetFrequencyHz(float frequencyHz)
- void SetDampingRatio(float dampingRatio)
- const Vector2& GetTarget() const
- float GetMaxForce() const
- float GetFrequencyHz() const
- float GetDampingRatio() const

Properties:

- const Vector2& target
- float maxForce
- float frequencyHz
- float dampingRatio

<a name="Class_ConstraintPrismatic2D"></a>
### ConstraintPrismatic2D : Constraint2D
- ConstraintPrismatic2D()

Methods:

- void SetAnchor(const Vector2& anchor)
- void SetAxis(const Vector2& axis)
- void SetEnableLimit(bool enableLimit)
- void SetLowerTranslation(float lowerTranslation)
- void SetUpperTranslation(float upperTranslation)
- void SetEnableMotor(bool enableMotor)
- void SetMaxMotorForce(float maxMotorForce)
- void SetMotorSpeed(float motorSpeed)
- const Vector2& GetAnchor() const
- const Vector2& GetAxis() const
- bool GetEnableLimit() const
- float GetLowerTranslation() const
- float GetUpperTranslation() const
- bool GetEnableMotor() const
- float GetMaxMotorForce() const
- float GetMotorSpeed() const

Properties:

- const Vector2& anchor
- const Vector2& axis
- bool enableLimit
- float lowerTranslation
- float upperTranslation
- bool enableMotor
- float maxMotorForce
- float motorSpeed

<a name="Class_ConstraintPulley2D"></a>
### ConstraintPulley2D : Constraint2D
- ConstraintPulley2D()

Methods:

- void SetOwnerBodyGroundAnchor(const Vector2& groundAnchor)
- void SetOtherBodyGroundAnchor(const Vector2& groundAnchor)
- void SetOwnerBodyAnchor(const Vector2& anchor)
- void SetOtherBodyAnchor(const Vector2& anchor)
- void SetRatio(float ratio)
- const Vector2& GetOwnerBodyGroundAnchor() const
- const Vector2& GetOtherBodyGroundAnchor() const
- const Vector2& GetOwnerBodyAnchor() const
- const Vector2& GetOtherBodyAnchor() const
- float GetRatio() const

Properties:

- const Vector2& ownerBodyGroundAnchor
- const Vector2& otherBodyGroundAnchor
- const Vector2& ownerBodyAnchor
- const Vector2& otherBodyAnchor
- float ratio

<a name="Class_ConstraintRevolute2D"></a>
### ConstraintRevolute2D : Constraint2D
- ConstraintRevolute2D()

Methods:

- void SetAnchor(const Vector2& anchor)
- void SetEnableLimit(bool enableLimit)
- void SetLowerAngle(float lowerAngle)
- void SetUpperAngle(float upperAngle)
- void SetEnableMotor(bool enableMotor)
- void SetMotorSpeed(float motorSpeed)
- void SetMaxMotorTorque(float maxMotorTorque)
- const Vector2& GetAnchor() const
- bool GetEnableLimit() const
- float GetLowerAngle() const
- float GetUpperAngle() const
- bool GetEnableMotor() const
- float GetMotorSpeed() const
- float GetMaxMotorTorque() const

Properties:

- const Vector2& anchor
- bool enableLimit
- float lowerAngle
- float upperAngle
- bool enableMotor
- float motorSpeed
- float maxMotorTorque

<a name="Class_ConstraintRope2D"></a>
### ConstraintRope2D : Constraint2D
- ConstraintRope2D()

Methods:

- void SetOwnerBodyAnchor(const Vector2& anchor)
- void SetOtherBodyAnchor(const Vector2& anchor)
- void SetMaxLength(float maxLength)
- const Vector2& GetOwnerBodyAnchor() const
- const Vector2& GetOtherBodyAnchor() const
- float GetMaxLength() const

Properties:

- const Vector2& ownerBodyAnchor
- const Vector2& otherBodyAnchor
- float maxLength

<a name="Class_ConstraintWeld2D"></a>
### ConstraintWeld2D : Constraint2D
- ConstraintWeld2D()

Methods:

- void SetAnchor(const Vector2& anchor)
- void SetFrequencyHz(float frequencyHz)
- void SetDampingRatio(float dampingRatio)
- const Vector2& GetAnchor() const
- float GetFrequencyHz() const
- float GetDampingRatio() const

Properties:

- const Vector2& anchor
- float frequencyHz
- float dampingRatio

<a name="Class_ConstraintWheel2D"></a>
### ConstraintWheel2D : Constraint2D
- ConstraintWheel2D()

Methods:

- void SetAnchor(const Vector2& anchor)
- void SetAxis(const Vector2& axis)
- void SetEnableMotor(bool enableMotor)
- void SetMaxMotorTorque(float maxMotorTorque)
- void SetMotorSpeed(float motorSpeed)
- void SetFrequencyHz(float frequencyHz)
- void SetDampingRatio(float dampingRatio)
- const Vector2& GetAnchor() const
- const Vector2& GetAxis() const
- bool GetEnableMotor() const
- float GetMaxMotorTorque() const
- float GetMotorSpeed() const
- float GetFrequencyHz() const
- float GetDampingRatio() const

Properties:

- const Vector2& anchor
- const Vector2& axis
- bool enableMotor
- float maxMotorTorque
- float motorSpeed
- float frequencyHz
- float dampingRatio

<a name="Class_Context"></a>
### Context : RefCounted
Methods:

- Object* GetEventSender() const
- EventHandler* GetEventHandler() const
- const String& GetTypeName(StringHash objectType) const

Properties:

- Object* eventSender (readonly)
- EventHandler* eventHandler (readonly)

<a name="Class_Controls"></a>
### Controls
- Controls()

Methods:

- void Reset()
- void Set(unsigned buttons, bool down = true)
- bool IsDown(unsigned button) const
- bool IsPressed(unsigned button, const Controls& previousControls) const

Fields:

- unsigned buttons
- float yaw
- float pitch
- VariantMap extraData

<a name="Class_CrowdAgent"></a>
### CrowdAgent : Component
Methods:

- void DrawDebugGeometry(bool)
- void SetTargetPosition(const Vector3& position)
- void SetTargetVelocity(const Vector3& velocity)
- void ResetTarget()
- void SetUpdateNodePosition(bool unodepos)
- void SetMaxAccel(float maxAccel)
- void SetMaxSpeed(float maxSpeed)
- void SetRadius(float radius)
- void SetHeight(float height)
- void SetQueryFilterType(unsigned queryFilterType)
- void SetObstacleAvoidanceType(unsigned obstacleAvoidanceType)
- void SetNavigationQuality(NavigationQuality val)
- void SetNavigationPushiness(NavigationPushiness val)
- Vector3 GetPosition() const
- Vector3 GetDesiredVelocity() const
- Vector3 GetActualVelocity() const
- const Vector3& GetTargetPosition() const
- const Vector3& GetTargetVelocity() const
- CrowdAgentRequestedTarget GetRequestedTargetType() const
- CrowdAgentState GetAgentState() const
- CrowdAgentTargetState GetTargetState() const
- bool GetUpdateNodePosition() const
- float GetMaxAccel() const
- float GetMaxSpeed() const
- float GetRadius() const
- float GetHeight() const
- unsigned GetQueryFilterType() const
- unsigned GetObstacleAvoidanceType() const
- NavigationQuality GetNavigationQuality() const
- NavigationPushiness GetNavigationPushiness() const
- bool HasRequestedTarget() const
- bool HasArrived() const
- bool IsInCrowd() const

Properties:

- Vector3 position (readonly)
- Vector3 desiredVelocity (readonly)
- Vector3 actualVelocity (readonly)
- const Vector3& targetPosition
- const Vector3& targetVelocity
- CrowdAgentRequestedTarget requestedTargetType (readonly)
- CrowdAgentState agentState (readonly)
- CrowdAgentTargetState targetState (readonly)
- bool updateNodePosition
- float maxAccel
- float maxSpeed
- float radius
- float height
- unsigned queryFilterType
- unsigned obstacleAvoidanceType
- NavigationQuality navigationQuality
- NavigationPushiness navigationPushiness
- bool inCrowd (readonly)

<a name="Class_CrowdManager"></a>
### CrowdManager : Component
- CrowdManager()

Methods:

- void DrawDebugGeometry(DebugRenderer* debug, bool depthTest)
- void SetCrowdTarget(const Vector3& position, Node* node = 0)
- void SetCrowdVelocity(const Vector3& velocity, Node* node = 0)
- void ResetCrowdTarget(Node* node = 0)
- void SetMaxAgents(unsigned maxAgents)
- void SetMaxAgentRadius(float maxAgentRadius)
- void SetNavigationMesh(NavigationMesh* navMesh)
- void SetIncludeFlags(unsigned queryFilterType, unsigned short flags)
- void SetExcludeFlags(unsigned queryFilterType, unsigned short flags)
- void SetAreaCost(unsigned queryFilterType, unsigned areaID, float cost)
- void SetObstacleAvoidanceParams(unsigned obstacleAvoidanceType, const CrowdObstacleAvoidanceParams& params)
- PODVector<CrowdAgent*> GetAgents(Node* node = 0, bool inCrowdFilter = true) const
- Vector3 FindNearestPoint(const Vector3& point, int queryFilterType, dtPolyRef* nearestRef = 0)
- Vector3 MoveAlongSurface(const Vector3& start, const Vector3& end, int queryFilterType, int maxVisited = 3)
- PODVector<Vector3> FindPath(Vector3& start, const Vector3& end, int queryFilterType)
- Vector3 GetRandomPoint(int queryFilterType, dtPolyRef* randomRef = 0)
- Vector3 GetRandomPointInCircle(const Vector3& center, float radius, int queryFilterType, dtPolyRef* randomRef = 0)
- tuple<float, Vector3, Vector3> GetDistanceToWall(CrowdManager* self, const Vector3& point, float radius, int queryFilterType)
- tuple<Vector3, Vector3> Raycast(const Vector3& start, const Vector3& end, int queryFilterType)
- unsigned GetMaxAgents() const
- float GetMaxAgentRadius() const
- NavigationMesh* GetNavigationMesh() const
- unsigned GetNumQueryFilterTypes() const
- unsigned GetNumAreas(unsigned queryFilterType) const
- unsigned short GetIncludeFlags(unsigned queryFilterType) const
- unsigned short GetExcludeFlags(unsigned queryFilterType) const
- float GetAreaCost(unsigned queryFilterType, unsigned areaID) const
- unsigned GetNumObstacleAvoidanceTypes() const
- const CrowdObstacleAvoidanceParams& GetObstacleAvoidanceParams(unsigned obstacleAvoidanceType) const

Properties:

- unsigned maxAgents
- float maxAgentRadius
- NavigationMesh* navigationMesh

<a name="Class_CrowdObstacleAvoidanceParams"></a>
### CrowdObstacleAvoidanceParams
Fields:

- float velBias
- float weightDesVel
- float weightCurVel
- float weightSide
- float weightToi
- float horizTime
- unsigned char gridSize;
- unsigned char adaptiveDivs
- unsigned char adaptiveRings
- unsigned char adaptiveDepth

<a name="Class_Cursor"></a>
### Cursor : BorderImage
- Cursor()

Methods:

- void DefineShape(const String& shape, Image* image, const IntRect& imageRect, const IntVector2& hotSpot)
- void DefineShape(CursorShape shape, Image* image, const IntRect& imageRect, const IntVector2& hotSpot)
- void SetShape(const String& shape)
- void SetShape(CursorShape shape)
- void SetUseSystemShapes(bool enable)
- const String& GetShape() const
- bool GetUseSystemShapes() const

Properties:

- const String& shape
- bool useSystemShapes

<a name="Class_CustomGeometry"></a>
### CustomGeometry : Drawable
- CustomGeometry()

Methods:

- void Clear()
- void SetNumGeometries(unsigned num)
- void SetDynamic(bool enable)
- void BeginGeometry(unsigned index, PrimitiveType type)
- void DefineVertex(const Vector3& position)
- void DefineNormal(const Vector3& normal)
- void DefineColor(const Color& color)
- void DefineTexCoord(const Vector2& texCoord)
- void DefineTangent(const Vector4& tangent)
- void Commit()
- void SetMaterial(Material* material)
- bool SetMaterial(unsigned index, Material* material)
- unsigned GetNumGeometries() const
- unsigned GetNumVertices(unsigned index) const
- bool IsDynamic() const
- Material* GetMaterial(unsigned index = 0) const
- CustomGeometryVertex* GetVertex(unsigned geometryIndex, unsigned vertexNum)

Properties:

- unsigned numGeometries
- bool dynamic
- Material* material

<a name="Class_CustomGeometryVertex"></a>
### CustomGeometryVertex
Fields:

- Vector3 position
- Vector3 normal
- Color color
- Vector2 texCoord
- Vector4 tangent

<a name="Class_Database"></a>
### Database : Object
Methods:

- DbConnection* Connect(const String& connectionString)
- void Disconnect(DbConnection* connection)
- bool IsPooling() const
- unsigned GetPoolSize() const
- void SetPoolSize(unsigned poolSize)

Properties:

- bool pooling (readonly)
- unsigned poolSize

<a name="Class_DbConnection"></a>
### DbConnection : Object
Methods:

- void Finalize()
- DbResult Execute(const String& sql, bool useCursorEvent = false)
- const String& GetConnectionString() const
- bool IsConnected() const

Properties:

- const String& connectionString
- bool connected

<a name="Class_DbResult"></a>
### DbResult
Methods:

- unsigned GetNumColumns() const
- unsigned GetNumRows() const
- long GetNumAffectedRows() const

Properties:

- unsigned numColumns (readonly)
- unsigned numRows (readonly)
- long numAffectedRows (readonly)

<a name="Class_DebugHud"></a>
### DebugHud : Object
Methods:

- void SetDefaultStyle(XMLFile* style)
- void SetMode(unsigned mode)
- void SetProfilerMaxDepth(unsigned depth)
- void SetProfilerInterval(float interval)
- void SetUseRendererStats(bool enable)
- void Toggle(unsigned mode)
- void ToggleAll()
- XMLFile* GetDefaultStyle() const
- Text* GetStatsText() const
- Text* GetModeText() const
- Text* GetProfilerText() const
- Text* GetMemoryText() const
- unsigned GetMode() const
- unsigned GetProfilerMaxDepth() const
- float GetProfilerInterval() const
- bool GetUseRendererStats() const
- void SetAppStats(const String& label, const Variant& stats)
- void SetAppStats(const String& label, const String& stats)
- bool ResetAppStats(const String& label)
- void ClearAppStats()

Properties:

- XMLFile* defaultStyle
- Text* statsText (readonly)
- Text* modeText (readonly)
- Text* profilerText (readonly)
- unsigned mode
- unsigned profilerMaxDepth
- float profilerInterval
- bool useRendererStats

<a name="Class_DebugRenderer"></a>
### DebugRenderer : Component
- DebugRenderer()

Methods:

- void SetView(Camera* camera)
- void AddLine(const Vector3& start, const Vector3& end, const Color& color, bool depthTest = true)
- void AddTriangle(const Vector3& v1, const Vector3& v2, const Vector3& v3, const Color& color, bool depthTest = true)
- void AddNode(Node* node, float scale = 1.0f, bool depthTest = true)
- void AddBoundingBox(const BoundingBox& box, const Color& color, bool depthTest = true)
- void AddBoundingBox(const BoundingBox& box, const Matrix3x4& transform, const Color& color, bool depthTest = true)
- void AddFrustum(const Frustum& frustum, const Color& color, bool depthTest = true)
- void AddPolyhedron(const Polyhedron& poly, const Color& color, bool depthTest = true)
- void AddSphere(const Sphere& sphere, const Color& color, bool depthTest = true)
- void AddCylinder(const Vector3& position, float radius, float height, const Color& color, bool depthTest = true)
- void AddSkeleton(const Skeleton& skeleton, const Color& color, bool depthTest = true)
- void AddCircle(const Vector3& center, const Vector3& normal, float radius, const Color& color, int steps = 64, bool depthTest = true)
- void AddCross(const Vector3& center, float size, const Color& color, bool depthTest = true)
- void AddQuad(const Vector3& center, float width, float height, const Color& color, bool depthTest = true)
- void Render()
- const Matrix3x4& GetView() const
- const Matrix4& GetProjection() const
- const Frustum& GetFrustum() const
- bool IsInside(const BoundingBox& box) const

Properties:

- const Matrix3x4& view (readonly)
- const Matrix4& projection (readonly)
- const Frustum& frustum (readonly)

<a name="Class_DecalSet"></a>
### DecalSet : Drawable
- DecalSet()

Methods:

- void SetMaterial(Material* material)
- void SetMaxVertices(unsigned num)
- void SetMaxIndices(unsigned num)
-  bool AddDecal(Drawable* target, const Vector3& worldPosition, const Quaternion& worldRotation, float size, float aspectRatio, float depth, const Vector2& topLeftUV, const Vector2& bottomRightUV, float timeToLive = 0.0f, float normalCutoff = 0.1f, unsigned subGeometry = M_MAX_UNSIGNED)
- void RemoveDecals(unsigned num)
- void RemoveAllDecals()
- Material* GetMaterial() const
- unsigned GetNumDecals() const
- unsigned GetNumVertices() const
- unsigned GetNumIndices() const
- unsigned GetMaxVertices() const
- unsigned GetMaxIndices() const

Properties:

- Material* material
- unsigned numDecals (writeonly)
- unsigned numVertices (writeonly)
- unsigned numIndices (writeonly)
- unsigned maxVertices
- unsigned maxIndices

<a name="Class_Deserializer"></a>
### Deserializer
Methods:

- VectorBuffer Read(unsigned size)
- unsigned Seek(unsigned position)
- const String& GetName() const
- unsigned GetChecksum()
- bool IsEof() const
- unsigned GetPosition() const
- unsigned GetSize() const
- int ReadInt()
- long long ReadInt64()
- short ReadShort()
- signed char ReadByte()
- unsigned ReadUInt()
- unsigned long long ReadUInt64()
- unsigned short ReadUShort()
- unsigned char ReadUByte()
- bool ReadBool()
- float ReadFloat()
- double ReadDouble()
- IntRect ReadIntRect()
- IntVector2 ReadIntVector2()
- Rect ReadRect()
- Vector2 ReadVector2()
- Vector3 ReadVector3()
- Vector3 ReadPackedVector3(float maxAbsCoord)
- Vector4 ReadVector4()
- Quaternion ReadQuaternion()
- Quaternion ReadPackedQuaternion()
- Matrix3 ReadMatrix3()
- Matrix3x4 ReadMatrix3x4()
- Matrix4 ReadMatrix4()
- Color ReadColor()
- BoundingBox ReadBoundingBox()
- String ReadString()
- String ReadFileID()
- StringHash ReadStringHash()
- ResourceRef ReadResourceRef()
- ResourceRefList ReadResourceRefList()
- Variant ReadVariant()
- Variant ReadVariant(VariantType variantType)
- VariantVector ReadVariantVector()
- StringVector ReadStringVector()
- VariantMap ReadVariantMap()
- unsigned ReadVLE()
- unsigned ReadNetID()
- String ReadLine()

Properties:

- const String& name (readonly)
- unsigned checksum (readonly)
- bool eof (readonly)
- unsigned position (readonly)
- unsigned size (readonly)

<a name="Class_Drawable"></a>
### Drawable : Component
Methods:

- void SetDrawDistance(float distance)
- void SetShadowDistance(float distance)
- void SetLodBias(float bias)
- void SetViewMask(unsigned mask)
- void SetLightMask(unsigned mask)
- void SetShadowMask(unsigned mask)
- void SetZoneMask(unsigned mask)
- void SetMaxLights(unsigned num)
- void SetCastShadows(bool enable)
- void SetOccluder(bool enable)
- void SetOccludee(bool enable)
- void MarkForUpdate()
- const BoundingBox& GetBoundingBox() const
- const BoundingBox& GetWorldBoundingBox()
- unsigned char GetDrawableFlags() const
- float GetDrawDistance() const
- float GetShadowDistance() const
- float GetLodBias() const
- unsigned GetViewMask() const
- unsigned GetLightMask() const
- unsigned GetShadowMask() const
- unsigned GetZoneMask() const
- unsigned GetMaxLights() const
- bool GetCastShadows() const
- bool IsOccluder() const
- bool IsOccludee() const
- bool IsInView() const
- bool IsInView(Camera* camera) const

Properties:

- const BoundingBox& boundingBox (readonly)
- unsigned char drawableFlags (readonly)
- float drawDistance
- float shadowDistance
- float lodBias
- unsigned viewMask
- unsigned lightMask
- unsigned shadowMask
- unsigned zoneMask
- unsigned maxLights
- bool castShadows
- bool occluder
- bool occludee
- bool inView
- Zone* zone (readonly)

<a name="Class_Drawable2D"></a>
### Drawable2D : Drawable
Methods:

- void SetLayer(int layer)
- void SetOrderInLayer(int orderInLayer)
- int GetLayer() const
- int GetOrderInLayer() const

Properties:

- int layer
- int orderInLayer

<a name="Class_DropDownList"></a>
### DropDownList : Menu
- DropDownList()

Methods:

- void AddItem(UIElement* item)
- void InsertItem(unsigned index, UIElement* item)
- void RemoveItem(UIElement* item)
- void RemoveItem(unsigned index)
- void RemoveAllItems()
- void SetSelection(unsigned index)
- void SetPlaceholderText(const String& text)
- void SetResizePopup(bool enable)
- unsigned GetNumItems() const
- PODVector<UIElement*> GetItems() const
- unsigned GetSelection() const
- ListView* GetListView() const
- const String& GetPlaceholderText() const
- bool GetResizePopup() const

Properties:

- unsigned numItems (readonly)
- unsigned selection
- ListView* listView (readonly)
- const String& placeholderText
- bool resizePopup

<a name="Class_DynamicNavigationMesh"></a>
### DynamicNavigationMesh : NavigationMesh
- DynamicNavigationMesh()

Methods:

- void SetMaxObstacles(unsigned maxObstacles)
- void SetMaxLayers(unsigned maxLayers)
- void SetDrawObstacles(bool enable)
- bool GetDrawObstacles() const
- unsigned GetMaxLayers() const
- unsigned GetMaxObstacles() const

Properties:

- unsigned maxObstacles
- unsigned maxLayers
- bool drawObstacles

<a name="Class_Engine"></a>
### Engine : Object
Methods:

- void RunFrame()
- Console* CreateConsole()
- DebugHud* CreateDebugHud()
- void SetMinFps(int fps)
- void SetMaxFps(int fps)
- void SetMaxInactiveFps(int fps)
- void SetTimeStepSmoothing(int frames)
- void SetPauseMinimized(bool enable)
- void SetAutoExit(bool enable)
- void SetNextTimeStep(float seconds)
- void Exit()
- void DumpProfiler()
- void DumpResources(bool dumpFileName = false)
- void DumpMemory()
- int GetMinFps() const
- int GetMaxFps() const
- int GetMaxInactiveFps() const
- int GetTimeStepSmoothing() const
- bool GetPauseMinimized() const
- bool GetAutoExit() const
- bool IsInitialized() const
- bool IsExiting() const
- bool IsHeadless() const

Properties:

- int minFps
- int maxFps
- int maxInactiveFps
- int timeStepSmoothing
- bool pauseMinimized
- bool autoExit
- bool initialized (readonly)
- bool exiting (readonly)
- bool headless (readonly)

<a name="Class_File"></a>
### File : Object, Deserializer, Serializer
- File()
- File(const String& fileName)
- File(const String& fileName, FileMode mode)
- File(PackageFile* package, const String& fileName)

Methods:

- bool Open(const String& fileName, FileMode mode = FILE_READ)
- bool Open(PackageFile* package, const String& fileName)
- void Close()
- void Flush()
- void SetName(const String& name)
- FileMode GetMode() const
- bool IsOpen() const
- void* GetHandle() const
- bool IsPackaged() const

Properties:

- FileMode mode (readonly)
- bool open (readonly)
- void* handle (readonly)
- bool packaged (readonly)

<a name="Class_FileSelector"></a>
### FileSelector : Object
- FileSelector()

Methods:

- void SetDefaultStyle(XMLFile* style)
- void SetTitle(const String& text)
- void SetButtonTexts(const String& okText, const String& cancelText)
- void SetPath(const String& path)
- void SetFileName(const String& fileName)
- void SetFilters(const Vector<String>& filters, unsigned defaultIndex)
- void SetDirectoryMode(bool enable)
- void UpdateElements()
- XMLFile* GetDefaultStyle() const
- Window* GetWindow() const
- Text* GetTitleText() const
- ListView* GetFileList() const
- LineEdit* GetPathEdit() const
- LineEdit* GetFileNameEdit() const
- DropDownList* GetFilterList() const
- Button* GetOKButton() const
- Button* GetCancelButton() const
- Button* GetCloseButton() const
- const String& GetTitle() const
- const String& GetPath() const
- const String& GetFileName() const
- const String& GetFilter() const
- unsigned GetFilterIndex() const
- bool GetDirectoryMode() const

Properties:

- XMLFile* defaultStyle
- Window* window (readonly)
- Text* titleText (readonly)
- ListView* fileList (readonly)
- LineEdit* pathEdit (readonly)
- LineEdit* fileNameEdit (readonly)
- DropDownList* filterList (readonly)
- Button* OKButton (readonly)
- Button* cancelButton (readonly)
- Button* closeButton (readonly)
- const String& title
- const String& path
- const String& fileName
- const String& filter (readonly)
- unsigned filterIndex (readonly)
- bool directoryMode

<a name="Class_FileSelectorEntry"></a>
### FileSelectorEntry
Fields:

- String name
- String directory

<a name="Class_FileSystem"></a>
### FileSystem : Object
Methods:

- bool SetCurrentDir(const String& pathName)
- bool CreateDir(const String& pathName)
- void SetExecuteConsoleCommands(bool enable)
- int SystemCommand(const String& commandLine, bool redirectStdOutToLog = false)
- int SystemRun(const String& fileName, const Vector<String>& arguments)
- unsigned SystemCommandAsync(const String& commandLine)
- unsigned SystemRunAsync(const String& fileName, const Vector<String>& arguments)
- bool SystemOpen(const String& fileName, const String& mode = String::EMPTY)
- bool Copy(const String& srcFileName, const String& destFileName)
- bool Rename(const String& srcFileName, const String& destFileName)
- bool Delete(const String& fileName)
- bool SetLastModifiedTime(const String& fileName, unsigned newTime)
- String GetCurrentDir() const
- bool GetExecuteConsoleCommands() const
- bool HasRegisteredPaths() const
- bool CheckAccess(const String& pathName) const
- unsigned GetLastModifiedTime(const String& fileName) const
- bool FileExists(const String& fileName) const
- bool DirExists(const String& pathName) const
- Vector<String> ScanDir(const String& pathName, const String& filter, unsigned flags, bool recursive)
- String GetProgramDir() const
- String GetUserDocumentsDir() const
- String GetAppPreferencesDir(const String& org, const String& app) const

<a name="Class_FocusParameters"></a>
### FocusParameters
- FocusParameters()
- FocusParameters(bool focus, bool nonUniform, bool autoSize, float quantize, float minView)

Methods:

- void Validate()

Fields:

- bool focus
- bool nonUniform
- bool autoSize
- float quantize
- float minView

<a name="Class_Font"></a>
### Font : Resource
- Font()

Methods:

- void SetAbsoluteGlyphOffset(const IntVector2& offset)
- void SetScaledGlyphOffset(const Vector2& offset)
- bool IsSDFFont() const
- const IntVector2& GetAbsoluteGlyphOffset() const
- const Vector2& GetScaledGlyphOffset() const
- IntVector2 GetTotalGlyphOffset(int pointSize) const

Properties:

- bool sdfFont (readonly)
- const IntVector2& absoluteGlyphOffset
- const Vector2& scaledGlyphOffset

<a name="Class_Frustum"></a>
### Frustum
- Frustum()
- Frustum(const Frustum& frustum)

Methods:

- void Define(float fov, float aspectRatio, float zoom, float nearZ, float farZ, const Matrix3x4& transform = Matrix3x4::IDENTITY)
- void Define(const Vector3& near, const Vector3& far, const Matrix3x4& transform = Matrix3x4::IDENTITY)
- void Define(const BoundingBox& box, const Matrix3x4& transform = Matrix3x4::IDENTITY)
- void DefineOrtho(float orthoSize, float aspectRatio, float zoom, float nearZ, float farZ, const Matrix3x4& transform = Matrix3x4::IDENTITY)
- void Transform(const Matrix3& transform)
- void Transform(const Matrix3x4& transform)
- Intersection IsInside(const Vector3& point) const
- Intersection IsInside(const Sphere& sphere) const
- Intersection IsInside(const BoundingBox& box) const
- Intersection IsInsideFast(const Sphere& sphere) const
- Intersection IsInsideFast(const BoundingBox& box) const
- float Distance(const Vector3& point) const
- Frustum Transformed(const Matrix3& transform) const
- Frustum Transformed(const Matrix3x4& transform) const
- Rect Projected(const Matrix4& transform) const
- void UpdatePlanes()

<a name="Class_Geometry"></a>
### Geometry : Object
- Geometry()

Methods:

- bool SetNumVertexBuffers(unsigned num)
- bool SetVertexBuffer(unsigned index, VertexBuffer* buffer)
- void SetIndexBuffer(IndexBuffer* buffer)
- bool SetDrawRange(PrimitiveType type, unsigned indexStart, unsigned indexCount, bool getUsedVertexRange = true)
- bool SetDrawRange(PrimitiveType type, unsigned indexStart, unsigned indexCount, unsigned vertexStart, unsigned vertexCount, bool checkIllegal = true)
- void SetLodDistance(float distance)
- unsigned GetNumVertexBuffers() const
- VertexBuffer* GetVertexBuffer(unsigned index) const
- IndexBuffer* GetIndexBuffer() const
- PrimitiveType GetPrimitiveType() const
- unsigned GetIndexStart() const
- unsigned GetIndexCount() const
- unsigned GetVertexStart() const
- unsigned GetVertexCount() const
- float GetLodDistance() const
- bool IsEmpty() const

Properties:

- unsigned numVertexBuffers (readonly)
- IndexBuffer* indexBuffer
- PrimitiveType primitiveType (readonly)
- unsigned indexStart (readonly)
- unsigned indexCount (readonly)
- unsigned vertexStart (readonly)
- unsigned vertexCount (readonly)
- float lodDistance
- bool empty (readonly)

<a name="Class_Graphics"></a>
### Graphics : Object
Methods:

- void SetWindowIcon(Image* windowIcon)
- void SetWindowTitle(const String& windowTitle)
- void SetWindowPosition(const IntVector2& position)
- void SetWindowPosition(int x, int y)
- bool SetMode(int width, int height, bool fullscreen, bool borderless, bool resizable, bool highDPI, bool vsync, bool tripleBuffer, int multiSample)
- bool SetMode(int width, int height)
- void SetSRGB(bool enable)
- void SetDither(bool enable)
- void SetFlushGPU(bool enable)
- void SetOrientations(const String& orientations)
- bool ToggleFullscreen()
- void Maximize()
- void Minimize()
- void Close()
- bool TakeScreenShot(Image& destImage)
- void BeginDumpShaders(const String& fileName)
- void EndDumpShaders()
- void PrecacheShaders(Deserializer& source)
- bool IsInitialized() const
- const String& GetWindowTitle() const
- const String& GetApiName() const
- IntVector2 GetWindowPosition() const
- int GetWidth() const
- int GetHeight() const
- int GetMultiSample() const
- bool GetFullscreen() const
- bool GetBorderless() const
- bool GetResizable() const
- bool GetVSync() const
- bool GetTripleBuffer() const
- bool GetSRGB() const
- bool GetDither() const
- bool GetFlushGPU() const
- const String& GetOrientations() const
- unsigned GetNumPrimitives() const
- unsigned GetNumBatches() const
- unsigned GetDummyColorFormat() const
- unsigned GetShadowMapFormat() const
- unsigned GetHiresShadowMapFormat() const
- bool GetInstancingSupport() const
- bool GetLightPrepassSupport() const
- bool GetDeferredSupport() const
- bool GetHardwareShadowSupport() const
- bool GetReadableDepthSupport() const
- bool GetSRGBSupport() const
- bool GetSRGBWriteSupport() const
- IntVector2 GetDesktopResolution() const

Properties:

- bool initialized (readonly)
- const String& windowTitle
- const String& apiName (readonly)
- IntVector2 windowPosition
- int width (readonly)
- int height (readonly)
- int multiSample (readonly)
- bool fullscreen (readonly)
- bool borderless (readonly)
- bool resizable (readonly)
- bool vSync (readonly)
- bool tripleBuffer (readonly)
- bool sRGB
- bool dither
- bool flushGPU
- const String& orientations
- bool deviceLost (readonly)
- unsigned numPrimitives (readonly)
- unsigned numBatches (readonly)
- unsigned dummyColorFormat (readonly)
- unsigned shadowMapFormat (readonly)
- unsigned hiresShadowMapFormat (readonly)
- bool instancingSupport (readonly)
- bool lightPrepassSupport (readonly)
- bool deferredSupport (readonly)
- bool hardwareShadowSupport (readonly)
- bool readableDepthSupport (readonly)
- bool sRGBSupport (readonly)
- bool sRGBWriteSupport (readonly)
- IntVector2 desktopResolution (readonly)

<a name="Class_HttpRequest"></a>
### HttpRequest : RefCounted
- HttpRequest(const String& url, const String& verb, const Vector<String>& headers, const String& postData)

Methods:

- const String& GetURL() const
- const String& GetVerb() const
- String GetError() const
- HttpRequestState GetState() const
- unsigned GetAvailableSize() const
- bool IsOpen() const
- VectorBuffer Read(unsigned size)

Properties:

- const String& URL (readonly)
- const String& verb (readonly)
- String error (readonly)
- HttpRequestState state (readonly)
- unsigned availableSize (readonly)
- bool open (readonly)

<a name="Class_Image"></a>
### Image : Resource
- Image()

Methods:

- bool SetSize(int width, int height, unsigned components)
- bool SetSize(int width, int height, int depth, unsigned components)
- void SetPixel(int x, int y, const Color& color)
- void SetPixel(int x, int y, int z, const Color& color)
- void SetPixelInt(int x, int y, unsigned uintColor)
- void SetPixelInt(int x, int y, int z, unsigned uintColor)
- bool FlipHorizontal()
- bool FlipVertical()
- bool Resize(int width, int height)
- void Clear(const Color& color)
- void ClearInt(unsigned uintColor)
- bool SaveBMP(const String& fileName) const
- bool SavePNG(const String& fileName) const
- bool SaveTGA(const String& fileName) const
- bool SaveJPG(const String& fileName, int quality) const
- bool IsCubemap() const
- bool IsArray() const
- bool IsSRGB() const
- Color GetPixel(int x, int y) const
- Color GetPixel(int x, int y, int z) const
- unsigned GetPixelInt(int x, int y) const
- unsigned GetPixelInt(int x, int y, int z) const
- Color GetPixelBilinear(float x, float y) const
- Color GetPixelTrilinear(float x, float y, float z) const
- int GetWidth() const
- int GetHeight() const
- int GetDepth() const
- unsigned GetComponents() const
- bool IsCompressed() const
- CompressedFormat GetCompressedFormat() const
- unsigned GetNumCompressedLevels() const
- SharedPtr<Image> GetNextLevel() const
- SharedPtr<Image> GetNextSibling() const
- SharedPtr<Image> ConvertToRGBA() const
- CompressedLevel GetCompressedLevel(unsigned index) const
- SharedPtr<Image> GetSubimage(const IntRect& rect) const

Properties:

- bool cubemap (readonly)
- bool array (readonly)
- bool sRGB (readonly)
- int width (readonly)
- int height (readonly)
- int depth (readonly)
- unsigned components (readonly)
- unsigned char* data
- bool compressed (readonly)
- CompressedFormat compressedFormat (readonly)
- unsigned numCompressedLevels (readonly)
- SharedPtr<Image> nextLevel (readonly)
- SharedPtr<Image> nextSibling (readonly)

<a name="Class_IndexBuffer"></a>
### IndexBuffer : Object
- IndexBuffer(bool forceHeadless = false)

Methods:

- void SetShadowed(bool enable)
- bool SetSize(unsigned indexCount, bool largeIndices, bool dynamic = false)
- bool SetData(VectorBuffer& src)
- VectorBuffer GetData() const
- bool IsShadowed() const
- bool IsDynamic() const
- unsigned GetIndexCount() const
- unsigned GetIndexSize() const

Properties:

- bool shadowed
- bool dynamic (readonly)
- unsigned indexCount (readonly)
- unsigned indexSize (readonly)

<a name="Class_Input"></a>
### Input : Object
Methods:

- void SetToggleFullscreen(bool enable)
- void SetMouseVisible(bool enable, bool suppressEvent = false)
- void SetMouseGrabbed(bool grab, bool suppressEvent = false)
- void SetMouseMode(MouseMode mode, bool suppressEvent = false)
- bool IsMouseLocked() const
- int AddScreenJoystick(XMLFile* layoutFile = 0, XMLFile* styleFile = 0)
- bool RemoveScreenJoystick(int id)
- void SetScreenJoystickVisible(int id, bool enable)
- void SetScreenKeyboardVisible(bool enable)
- void SetTouchEmulation(bool enable)
- bool RecordGesture()
- void SaveGestures(const String& fileName)
- void SaveGesture(const String& fileName, unsigned gestureID)
- void LoadGestures(const String& fileName)
- bool RemoveGesture(unsigned gestureID)
- void RemoveAllGestures()
- int GetKeyFromName(const String& name) const
- int GetKeyFromScancode(int scancode) const
- String GetKeyName(int key) const
- int GetScancodeFromKey(int key) const
- int GetScancodeFromName(const String& name) const
- String GetScancodeName(int scancode) const
- bool GetKeyDown(int key) const
- bool GetKeyPress(int key) const
- bool GetScancodeDown(int scancode) const
- bool GetScancodePress(int scancode) const
- bool GetMouseButtonDown(int button) const
- bool GetMouseButtonPress(int button) const
- bool GetQualifierDown(int qualifier) const
- bool GetQualifierPress(int qualifier) const
- int GetQualifiers() const
- IntVector2 GetMousePosition() const
- const IntVector2& GetMouseMove() const
- int GetMouseMoveX() const
- int GetMouseMoveY() const
- int GetMouseMoveWheel() const
- unsigned GetNumTouches() const
- TouchState* GetTouch(unsigned index) const
- unsigned GetNumJoysticks() const
- JoystickState* GetJoystick(int id)
- JoystickState* GetJoystickByIndex(unsigned index)
- JoystickState* GetJoystickByName(const String& name)
- bool GetToggleFullscreen() const
- bool GetScreenKeyboardSupport() const
- bool IsScreenJoystickVisible(int id) const
- bool IsScreenKeyboardVisible() const
- bool GetTouchEmulation() const
- bool IsMouseVisible() const
- bool IsMouseGrabbed() const
- MouseMode GetMouseMode() const
- bool HasFocus()
- bool IsMinimized() const

Properties:

- int qualifiers (readonly)
- IntVector2 mousePosition (readonly)
- const IntVector2& mouseMove (readonly)
- int mouseMoveX (readonly)
- int mouseMoveY (readonly)
- int mouseMoveWheel (readonly)
- unsigned numTouches (readonly)
- unsigned numJoysticks (readonly)
- bool toggleFullscreen
- bool screenKeyboardSupport (readonly)
- bool screenKeyboardVisible
- bool touchEmulation
- bool mouseVisible
- bool mouseGrabbed (readonly)
- bool mouseLocked (readonly)
- MouseMode mouseMode (readonly)
- bool focus (readonly)
- bool minimized (readonly)

<a name="Class_IntRect"></a>
### IntRect
- IntRect()
- IntRect(int left, int top, int right, int bottom)

Methods:

- bool operator ==(const IntRect& rhs) const
- Vector2 Size() const
- int Width() const
- IntVector2 Size() const
- Intersection IsInside(const Vector2& point) const
- String ToString() const

Properties:

- Vector2 size (readonly)
- int width (readonly)
- IntVector2 Size() cons height (readonly)

Fields:

- float left
- float top
- float right
- float bottom

StaticConstants:

- IntRect ZERO

<a name="Class_IntVector2"></a>
### IntVector2
- IntVector2()
- Vector2(int x, int y)
- IntVector2(const IntVector2& vector)

Methods:

- String ToString() const

Fields:

- int x
- int y

StaticConstants:

- IntVector2 ONE

<a name="Class_JSONFile"></a>
### JSONFile : Resource
Methods:

- JSONFile()
- bool Save(const String& fileName, const String& indentation) const
- bool FromString(const String& source)
- JSONValue& CreateRoot()
- JSONValue& GetRoot() const

Properties:

- JSONValue& root

<a name="Class_JSONValue"></a>
### JSONValue
- JSONValue()
- JSONValue(bool value)
- JSONValue(int value)
- JSONValue(unsigned value)
- JSONValue(float value)
- JSONValue(double value)
- JSONValue(const char* value),
- JSONValue(const JSONValue& value)

Methods:

- JSONValueType GetValueType() const
- JSONNumberType GetNumberType() const
- bool IsNull() const
- bool IsBool() const
- bool IsNumber() const
- bool IsString() const
- bool IsArray() const
- bool IsObject() const
- void SetBool(bool value)
- void SetInt(int value)
- void SetUInt(unsigned value)
- void SetFloat(float value)
- void SetDouble(double value)
- void SetString(const char* value)
- void SetArray(const JSONArray& value)
- void SetObject(const JSONObject& value)
- bool GetBool() const
- int GetInt() const
- unsigned GetUInt() const
- float GetFloat() const
- double GetDouble() const
- const char* GetString() const
- const JSONArray& GetArray() const
- const JSONObject& GetObject() const
- const JSONValue& __index(unsigned index) const
- const JSONValue& __index(const String& key) const
- JSONValue& __newindex(unsigned index)
- JSONValue& __newindex(const String& key)
- void Push(const JSONValue& value)
- void Pop()
- void Insert(unsigned pos, const JSONValue& value)
- void Erase(unsigned pos, unsigned length)
- bool Erase(const String& key)
- void Resize(unsigned newSize)
- unsigned Size() const
- void Set(const String& key, const JSONValue& value)
- const JSONValue& Get(const String& key) const
- bool Contains(const String& key) const
- void Clear()

Properties:

- JSONValueType valueType (readonly)
- JSONNumberType numberType (readonly)
- bool isNull (readonly)
- bool isBool (readonly)
- bool isNumber (readonly)
- bool isString (readonly)
- bool isArray (readonly)
- bool isObject (readonly)

StaticConstants:

- JSONValue EMPTY

<a name="Class_JoystickState"></a>
### JoystickState
Methods:

- bool IsController() const
- unsigned GetNumButtons() const
- unsigned GetNumAxes() const
- unsigned GetNumHats() const
- bool GetButtonDown(unsigned index) const
- bool GetButtonPress(unsigned index) const
- float GetAxisPosition(unsigned index) const
- int GetHatPosition(unsigned index) const

Properties:

- bool controller (readonly)
- unsigned numButtons (readonly)
- unsigned numAxes (readonly)
- unsigned numHats (readonly)

Fields:

- String name
- int joystickID

<a name="Class_Light"></a>
### Light : Drawable
- Light()

Methods:

- void SetLightType(LightType type)
- void SetPerVertex(bool enable)
- void SetColor(const Color& color)
- void SetSpecularIntensity(float intensity)
- void SetBrightness(float brightness)
- void SetRange(float range)
- void SetFov(float fov)
- void SetAspectRatio(float aspectRatio)
- void SetFadeDistance(float distance)
- void SetShadowFadeDistance(float distance)
- void SetShadowBias(const BiasParameters& parameters)
- void SetShadowCascade(const CascadeParameters& parameters)
- void SetShadowFocus(const FocusParameters& parameters)
- void SetShadowIntensity(float intensity)
- void SetShadowResolution(float resolution)
- void SetShadowNearFarRatio(float nearFarRatio)
- void SetRampTexture(Texture* texture)
- void SetShapeTexture(Texture* texture)
- LightType GetLightType() const
- bool GetPerVertex() const
- const Color& GetColor() const
- float GetSpecularIntensity() const
- float GetBrightness() const
- Color GetEffectiveColor() const
- float GetEffectiveSpecularIntensity() const
- float GetRange() const
- float GetFov() const
- float GetAspectRatio() const
- float GetFadeDistance() const
- float GetShadowFadeDistance() const
- const BiasParameters& GetShadowBias() const
- const CascadeParameters& GetShadowCascade() const
- const FocusParameters& GetShadowFocus() const
- float GetShadowIntensity() const
- float GetShadowResolution() const
- float GetShadowNearFarRatio() const
- Texture* GetRampTexture() const
- Texture* GetShapeTexture() const
- Frustum GetFrustum() const
- Frustum GetViewSpaceFrustum(const Matrix3x4& view) const
- int GetNumShadowSplits() const
- bool IsNegative() const

Properties:

- LightType lightType
- bool perVertex
- const Color& color
- float specularIntensity
- float brightness
- Color effectiveColor (readonly)
- float effectiveSpecularIntensity (readonly)
- float range
- float fov
- float aspectRatio
- float fadeDistance
- float shadowFadeDistance
- const BiasParameters& shadowBias
- const CascadeParameters& shadowCascade
- const FocusParameters& shadowFocus
- float shadowIntensity
- float shadowResolution
- float shadowNearFarRatio
- Texture* rampTexture
- Texture* shapeTexture
- Frustum frustum (readonly)
- int numShadowSplits (readonly)
- bool negative (readonly)

<a name="Class_LineEdit"></a>
### LineEdit : BorderImage
- LineEdit()

Methods:

- void SetText(const String& text)
- void SetCursorPosition(unsigned position)
- void SetCursorBlinkRate(float rate)
- void SetMaxLength(unsigned length)
- void SetEchoCharacter(unsigned c)
- void SetCursorMovable(bool enable)
- void SetTextSelectable(bool enable)
- void SetTextCopyable(bool enable)
- const String& GetText() const
- unsigned GetCursorPosition() const
- float GetCursorBlinkRate() const
- unsigned GetMaxLength() const
- unsigned GetEchoCharacter() const
- bool IsCursorMovable() const
- bool IsTextSelectable() const
- bool IsTextCopyable() const
- Text* GetTextElement() const
- BorderImage* GetCursor() const

Properties:

- const String& text
- unsigned cursorPosition
- float cursorBlinkRate
- unsigned maxLength
- unsigned echoCharacter
- bool cursorMovable
- bool textSelectable
- bool textCopyable
- Text* textElement (readonly)
- BorderImage* cursor (readonly)

<a name="Class_ListView"></a>
### ListView : ScrollView
- ListView()

Methods:

- void AddItem(UIElement* item)
- void InsertItem(unsigned index, UIElement* item, UIElement* parentItem = 0)
- void RemoveItem(UIElement* item, unsigned index = 0)
- void RemoveItem(unsigned index)
- void RemoveAllItems()
- void SetSelection(unsigned index)
- void SetSelections(const PODVector<unsigned>& indices)
- void AddSelection(unsigned index)
- void RemoveSelection(unsigned index)
- void ToggleSelection(unsigned index)
- void ChangeSelection(int delta, bool additive = false)
- void ClearSelection()
- void SetHighlightMode(HighlightMode mode)
- void SetMultiselect(bool enable)
- void SetHierarchyMode(bool enable)
- void SetBaseIndent(int baseIndent)
- void SetClearSelectionOnDefocus(bool enable)
- void SetSelectOnClickEnd(bool enable)
- void Expand(unsigned index, bool enable, bool recursive = false)
- void ToggleExpand(unsigned index, bool recursive = false)
- unsigned GetNumItems() const
- PODVector<UIElement*> GetItems() const
- unsigned FindItem(UIElement* item) const
- unsigned GetSelection() const
- PODVector<UIElement*> GetSelections() const
- void CopySelectedItemsToClipboard() const
- PODVector<UIElement*> GetSelectedItems() const
- bool IsSelected(unsigned index) const
- bool IsExpanded(unsigned index) const
- HighlightMode GetHighlightMode() const
- bool GetMultiselect() const
- bool GetClearSelectionOnDefocus() const
- bool GetSelectOnClickEnd() const
- bool GetHierarchyMode() const
- int GetBaseIndent() const

Properties:

- unsigned numItems (readonly)
- unsigned selection
- HighlightMode highlightMode
- bool multiselect
- bool clearSelectionOnDefocus
- bool selectOnClickEnd
- bool hierarchyMode
- int baseIndent

<a name="Class_Localization"></a>
### Localization : Object
Methods:

- int GetNumLanguages() const
- int GetLanguageIndex() const
- int GetLanguageIndex(const String& language)
- String GetLanguage()
- String GetLanguage(int index)
- void SetLanguage(int index)
- void SetLanguage(const String& language)
- String Get(const String& id)
- void Reset()
- void LoadJSON(const JSONValue& source)
- void LoadJSONFile(const String& name)

Properties:

- int numLanguages (readonly)
- int languageIndex (readonly)
- String language (readonly)

<a name="Class_Log"></a>
### Log : Object
Methods:

- void Open(const String& fileName)
- void Close()
- void SetLevel(int level)
- void SetTimeStamp(bool enable)
- void SetQuiet(bool quiet)
- int GetLevel() const
- bool GetTimeStamp() const
- String GetLastMessage() const
- bool IsQuiet() const

Properties:

- int level
- bool timeStamp
- bool quiet

<a name="Class_LogicComponent"></a>
### LogicComponent : Component
- LogicComponent()

Methods:

- void SetUpdateEventMask(unsigned char mask)
- unsigned char GetUpdateEventMask() const
- bool IsDelayedStartCalled() const

Properties:

- unsigned char updateEventMask
- bool delayedStartCalled (readonly)

<a name="Class_LuaScriptInstance"></a>
### LuaScriptInstance : Component
Methods:

- bool CreateObject(const String& scriptObjectType)
- bool CreateObject(LuaFile* scriptFile, const String& scriptObjectType)
- void SetScriptFile(LuaFile* scriptFile)
- void SetScriptObjectType(const String& scriptObjectType)
- void SubscribeToEvent(StringHash eventType, int functionIndex)
- void SubscribeToEvent(StringHash eventType, const String& functionName)
- void SubscribeToEvent(Object* sender, StringHash eventType, int functionIndex)
- void SubscribeToEvent(Object* sender, StringHash eventType, const String& functionName)
- void UnsubscribeFromEvent(StringHash eventType)
- void UnsubscribeFromEvent(Object* sender, StringHash eventType)
- void RemoveEventHandlers(Object* sender)
- void RemoveAllEventHandlers()
- void RemoveEventHandlersExcept(const PODVector<StringHash>& exceptionTypes)
- bool HasEventHandler(StringHash eventType) const
- bool HasEventHandler(Object* sender, StringHash eventType) const
- LuaFile* GetScriptFile() const
- const String& GetScriptObjectType() const

Properties:

- LuaFile* scriptFile (readonly)
- const String& scriptObjectType (readonly)

<a name="Class_Material"></a>
### Material : Resource
- Material()

Methods:

- void SetNumTechniques(unsigned num)
- void SetTechnique(unsigned index, Technique* tech, unsigned qualityLevel = 0, float lodDistance = 0.0f)
- void SetShaderParameter(const String& name, const Variant& value)
- void SetShaderParameterAnimation(const String& name, ValueAnimation* animation, WrapMode wrapMode = WM_LOOP, float speed = 1.0f)
- void SetShaderParameterAnimationWrapMode(const String& name, WrapMode wrapMode)
- void SetShaderParameterAnimationSpeed(const String& name, float speed)
- void SetTexture(TextureUnit unit, Texture* texture)
- void SetUVTransform(const Vector2& offset, float rotation, const Vector2& repeat)
- void SetUVTransform(const Vector2& offset, float rotation, float repeat)
- void SetCullMode(CullMode mode)
- void SetShadowCullMode(CullMode mode)
- void SetFillMode(FillMode mode)
- void SetDepthBias(const BiasParameters& parameters)
- void SetRenderOrder(unsigned char order)
- void SetScene(Scene* scene)
- void RemoveShaderParameter(const String& name)
- void ReleaseShaders()
- SharedPtr<Material> Clone(const String& cloneName = String::EMPTY) const
- void SortTechniques()
- void MarkForAuxView(unsigned frameNumber)
- unsigned GetNumTechniques() const
- const Vector<TechniqueEntry>& GetTechniques() const
- Technique* GetTechnique(unsigned index) const
- Pass* GetPass(unsigned index, const String& passName) const
- Texture* GetTexture(TextureUnit unit) const
- const Variant& GetShaderParameter(const String& name) const
- ValueAnimation* GetShaderParameterAnimation(const String& name) const
- WrapMode GetShaderParameterAnimationWrapMode(const String& name) const
- float GetShaderParameterAnimationSpeed(const String& name) const
- CullMode GetCullMode() const
- CullMode GetShadowCullMode() const
- FillMode GetFillMode() const
- const BiasParameters& GetDepthBias() const
- unsigned char GetRenderOrder() const
- unsigned GetAuxViewFrameNumber() const
- bool GetOcclusion() const
- bool GetSpecular() const
- Scene* GetScene() const

Properties:

- CullMode cullMode
- CullMode shadowCullMode
- FillMode fillMode
- const BiasParameters& depthBias
- unsigned char renderOrder
- bool occlusion (readonly)
- bool specular (readonly)
- Scene* scene

<a name="Class_Matrix2"></a>
### Matrix2
- Matrix2()
- Matrix2(const Matrix2& matrix)
- Matrix2(float v00, float v01, float v10, float v11)

Methods:

- bool operator ==(const Matrix2& rhs) const
- Vector2 operator *(const Vector2& rhs) const
- Matrix2 operator *(float rhs) const
- Matrix2 operator *(const Matrix2& rhs) const
- Matrix2 operator +(const Matrix2& rhs) const
- Matrix2 operator -(const Matrix2& rhs) const
- void SetScale(const Vector2& scale)
- void SetScale(float scale)
- Vector2 Scale() const
- Matrix2 Transpose() const
- Matrix2 Scaled(const Vector2& scale) const
- bool Equals(const Matrix2& rhs) const
- Matrix2 Inverse() const
- String ToString() const

Fields:

- float m00
- float m01
- float m10
- float m11

StaticConstants:

- Matrix2 ZERO
- Matrix2 IDENTITY

<a name="Class_Matrix3"></a>
### Matrix3
- Matrix3()
- Matrix3(const Matrix3& matrix)
- Matrix3(float, float, float, float, float, float, float, float, float)

Methods:

- bool operator ==(const Matrix3& rhs) const
- Vector3 operator *(const Vector3& rhs) const
- Matrix3 operator *(float rhs) const
- Matrix3 operator *(const Matrix3& rhs) const
- Matrix3 operator +(const Matrix3& rhs) const
- Matrix3 operator -(const Matrix3& rhs) const
- void SetScale(const Vector3& scale)
- void SetScale(float scale)
- Vector3 Scale() const
- Matrix3 Transpose() const
- Matrix3 Scaled(const Vector3& scale) const
- bool Equals(const Matrix3& rhs) const
- Matrix3 Inverse() const
- String ToString() const

Fields:

- float m00
- float m01
- float m02
- float m10
- float m11
- float m12
- float m20
- float m21
- float m22

StaticConstants:

- Matrix3 ZERO
- Matrix3 IDENTITY

<a name="Class_Matrix3x4"></a>
### Matrix3x4
- Matrix3x4()
- Matrix3x4(const Matrix3x4& matrix)
- Matrix3x4(const Matrix3& matrix)
- Matrix3x4(const Matrix4& matrix)
- Matrix3x4(const Vector3& translation, const Quaternion& rotation, float scale)
- Matrix3x4(const Vector3& translation, const Quaternion& rotation, const Vector3& scale)

Methods:

- bool operator ==(const Matrix3x4& rhs) const
- Vector3 operator *(const Vector3& rhs) const
- Vector3 operator *(const Vector4& rhs) const
- Matrix3x4 operator *(float rhs) const
- Matrix3x4 operator *(const Matrix3x4& rhs) const
- Matrix4 operator *(const Matrix4& rhs) const
- Matrix3x4 operator +(const Matrix3x4& rhs) const
- Matrix3x4 operator -(const Matrix3x4& rhs) const
- void SetTranslation(const Vector3& translation)
- void SetRotation(const Matrix3& rotation)
- void SetScale(const Vector3& scale)
- void SetScale(float scale)
- Matrix3 ToMatrix3() const
- Matrix4 ToMatrix4() const
- Matrix3 RotationMatrix() const
- Vector3 Translation() const
- Quaternion Rotation() const
- Vector3 Scale() const
- bool Equals(const Matrix3x4& rhs) const
- tuple<Vector3, Quaternion, Vector3> Decompose() const
- Matrix3x4 Inverse() const
- String ToString() const

Fields:

- float m00
- float m01
- float m02
- float m03
- float m10
- float m11
- float m12
- float m13
- float m20
- float m21
- float m22
- float m23

StaticConstants:

- Matrix3x4ZERO
- Matrix3x4IDENTITY

<a name="Class_Matrix4"></a>
### Matrix4
- Matrix4()
- Matrix4(const Matrix4& matrix)
- Matrix4(const Matrix3& matrix)

Methods:

- bool operator ==(const Matrix4& rhs) const
- Vector3 operator *(const Vector3& rhs) const
- Vector4 operator *(const Vector4& rhs) const
- Matrix4 operator *(float rhs) const
- Matrix4 operator *(const Matrix4& rhs) const
- Matrix4 operator *(const Matrix3x4& rhs) const;
- void SetTranslation(const Vector3& translation)
- void SetRotation(const Matrix3& rotation)
- void SetScale(const Vector3& scale)
- void SetScale(float scale)
- Matrix3 ToMatrix3() const
- Matrix3 RotationMatrix() const
- Vector3 Translation() const
- Quaternion Rotation() const
- Vector3 Scale() const
- Matrix4 Transpose() const
- bool Equals(const Matrix4& rhs) const
- tuple<Vector3, Quaternion, Vector3> Decompose() const
- Matrix4 Inverse() const
- String ToString() const

Fields:

- float m00
- float m01
- float m02
- float m03
- float m10
- float m11
- float m12
- float m13
- float m20
- float m21
- float m22
- float m23
- float m30
- float m31
- float m32
- float m33

StaticConstants:

- Matrix4 ZERO
- Matrix4 IDENTITY

<a name="Class_Menu"></a>
### Menu : Button
- Menu()

Methods:

- void SetPopup(UIElement* element)
- void SetPopupOffset(const IntVector2& offset)
- void SetPopupOffset(int x, int y)
- void ShowPopup(bool enable)
- void SetAccelerator(int key, int qualifiers)
- SharedPtr<UIElement> GetPopup() const
- const IntVector2& GetPopupOffset() const
- bool GetShowPopup() const
- int GetAcceleratorKey() const
- int GetAcceleratorQualifiers() const

Properties:

- const IntVector2& popupOffset
- bool showPopup (readonly)
- int acceleratorKey (readonly)
- int acceleratorQualifiers (readonly)

<a name="Class_MessageBox"></a>
### MessageBox : Object
- MessageBox(const String& messageString, const String& titleString = "", XMLFile* layoutFile = 0, XMLFile* styleFile = 0)

Methods:

- void SetTitle(const String& text)
- void SetMessage(const String& text)
- const String& GetTitle() const
- const String& GetMessage() const
- SharedPtr<UIElement> GetWindow() const

Properties:

- const String& title
- const String& message

<a name="Class_Model"></a>
### Model : Resource
- Model()

Methods:

- void SetBoundingBox(const BoundingBox& box)
- void SetNumGeometries(unsigned num)
- bool SetNumGeometryLodLevels(unsigned index, unsigned num)
- bool SetGeometry(unsigned index, unsigned lodLevel, Geometry* geometry)
- bool SetGeometryCenter(unsigned index, const Vector3& center)
- void SetSkeleton(const Skeleton& skeleton)
- SharedPtr<Model> Clone(const String& cloneName = String::EMPTY) const
- const BoundingBox& GetBoundingBox() const
- Skeleton& GetSkeleton()
- unsigned GetNumGeometries() const
- unsigned GetNumGeometryLodLevels(unsigned index) const
- const Vector<Vector<SharedPtr<Geometry> > >& GetGeometries() const
- const PODVector<Vector3>& GetGeometryCenters() const
- Geometry* GetGeometry(unsigned index, unsigned lodLevel) const
- const Vector3& GetGeometryCenter(unsigned index) const
- unsigned GetNumMorphs() const
- const ModelMorph* GetMorph(unsigned index) const
- const ModelMorph* GetMorph(const String& name) const
- const ModelMorph* GetMorph(StringHash nameHash) const
- unsigned GetMorphRangeStart(unsigned bufferIndex) const
- unsigned GetMorphRangeCount(unsigned bufferIndex) const

Properties:

- const BoundingBox& boundingBox
- Skeleton& skeleton (readonly)
- unsigned numGeometries
- unsigned numMorphs (readonly)

<a name="Class_NamedPipe"></a>
### NamedPipe : MultipleBase<Object, Deserializer, Serializer>
Methods:

- bool Open(const String& pipeName, bool isServer)
- void Close()
- bool IsOpen() const

<a name="Class_NavArea"></a>
### NavArea : Component
- NavArea()

Methods:

- unsigned GetAreaID() const
- void SetAreaID(unsigned newID)
- BoundingBox GetBoundingBox() const
- void SetBoundingBox(const BoundingBox& bnds)
- BoundingBox GetWorldBoundingBox() const

Properties:

- unsigned areaID
- BoundingBox boundingBox
- BoundingBox worldBoundingBox (readonly)

<a name="Class_Navigable"></a>
### Navigable : Component
- Navigable()

Methods:

- void SetRecursive(bool enable)
- bool IsRecursive() const

Properties:

- bool recursive

<a name="Class_NavigationGeometryInfo"></a>
### NavigationGeometryInfo
Fields:

- Component* component
- unsigned lodLevel
- Matrix3x4 transform
- BoundingBox boundingBox

<a name="Class_NavigationMesh"></a>
### NavigationMesh : Component
- NavigationMesh()

Methods:

- void SetTileSize(int size)
- void SetCellSize(float size)
- void SetCellHeight(float height)
- void SetAgentHeight(float height)
- void SetAgentRadius(float radius)
- void SetAgentMaxClimb(float maxClimb)
- void SetAgentMaxSlope(float maxSlope)
- void SetRegionMinSize(float size)
- void SetRegionMergeSize(float size)
- void SetEdgeMaxLength(float length)
- void SetEdgeMaxError(float error)
- void SetDetailSampleDistance(float distance)
- void SetDetailSampleMaxError(float error)
- void SetPadding(const Vector3& padding)
- void SetAreaCost(unsigned areaID, float cost)
- bool Build()
- bool Build(const BoundingBox& boundingBox)
- void SetPartitionType(NavmeshPartitionType aType)
- void SetDrawOffMeshConnections(bool enable)
- void SetDrawNavAreas(bool enable)
- Vector3 MoveAlongSurface(const Vector3& start, const Vector3& end, const Vector3& extents = Vector3::ONE, int maxVisited = 3,
- PODVector<Vector3> FindPath(const Vector3& start, const Vector3& end, const Vector3& extents = Vector3::ONE, const dtQueryFilter* filter = 0)
- Vector3 GetRandomPoint(const dtQueryFilter* filter = 0, dtPolyRef* randomRef = 0)

<a name="Class_Network"></a>
### Network : Object
Methods:

- bool Connect(const String& address, unsigned short port, Scene* scene, const VariantMap& identity = Variant::emptyVariantMap)
- void Disconnect(int waitMSec = 0)
- bool StartServer(unsigned short port)
- void StopServer()
- void BroadcastMessage(int msgID, bool reliable, bool inOrder, const VectorBuffer& msg, unsigned contentID = 0)
- void BroadcastMessage(int msgID, bool reliable, bool inOrder, const unsigned char* data, unsigned numBytes, unsigned contentID = 0)
- void BroadcastRemoteEvent(StringHash eventType, bool inOrder, const VariantMap& eventData = Variant::emptyVariantMap)
- void BroadcastRemoteEvent(Scene* scene, StringHash eventType, bool inOrder, const VariantMap& eventData = Variant::emptyVariantMap)
- void BroadcastRemoteEvent(Node* node, StringHash eventType, bool inOrder, const VariantMap& eventData = Variant::emptyVariantMap)
- void SetUpdateFps(int fps)
- void SetSimulatedLatency(int ms)
- void SetSimulatedPacketLoss(float probability)
- void RegisterRemoteEvent(StringHash eventType)
- void UnregisterRemoteEvent(StringHash eventType)
- void UnregisterAllRemoteEvents()
- void SetPackageCacheDir(const String& path)
- void SendPackageToClients(Scene* scene, PackageFile* package)
- int GetUpdateFps() const
- int GetSimulatedLatency() const
- float GetSimulatedPacketLoss() const
- Connection* GetConnection(kNet::MessageConnection* connection) const
- Connection* GetServerConnection() const
- bool IsServerRunning() const
- bool CheckRemoteEvent(StringHash eventType) const
- const String& GetPackageCacheDir() const

Properties:

- int updateFps
- int simulatedLatency
- float simulatedPacketLoss
- Connection* serverConnection (readonly)
- bool serverRunning (readonly)
- const String& packageCacheDir

<a name="Class_NetworkPriority"></a>
### NetworkPriority : Component
- NetworkPriority()

Methods:

- void SetBasePriority(float priority)
- void SetDistanceFactor(float factor)
- void SetMinPriority(float priority)
- void SetAlwaysUpdateOwner(bool enable)
- float GetBasePriority() const
- float GetDistanceFactor() const
- float GetMinPriority() const
- bool GetAlwaysUpdateOwner() const
- bool CheckUpdate(float distance, float& accumulator)

Properties:

- float basePriority
- float distanceFactor
- float minPriority
- bool alwaysUpdateOwner

<a name="Class_Node"></a>
### Node : Animatable
- Node()

Methods:

- bool SaveXML(const String& fileName, const String& indentation = "\t") const
- bool SaveJSON(const String& fileName, const String& indentation = "\t") const
- void SetID(unsigned id)
- void SetName(const String& name)
- void SetTags(const StringVector& tags)
- void AddTag(const String& tag)
- void AddTags(const String& tags, char separator = ';')
- void AddTags(const StringVector& tags)
- bool RemoveTag(const String& tag)
- void RemoveAllTags()
- void SetPosition(const Vector3& position)
- void SetRotation(const Quaternion& rotation)
- void SetRotation2D(float rotation)
- void SetDirection(const Vector3& direction)
- void SetScale(float scale)
- void SetScale(const Vector3& scale)
- void SetScale2D(const Vector2& scale)
- void SetScale2D(float x, float y)
- void SetTransform(const Vector3& position, const Quaternion& rotation)
- void SetTransform(const Vector3& position, const Quaternion& rotation, float scale)
- void SetTransform(const Vector3& position, const Quaternion& rotation, const Vector3& scale)
- void SetTransform2D(const Vector2& position, float rotation)
- void SetTransform2D(const Vector2& position, float rotation, float scale)
- void SetTransform2D(const Vector2& position, float rotation, const Vector2& scale)
- void SetWorldPosition(const Vector3& position)
- void SetWorldPosition2D(const Vector2& position)
- void SetWorldPosition2D(float x, float y)
- void SetWorldRotation(const Quaternion& rotation)
- void SetWorldRotation2D(float rotation)
- void SetWorldDirection(const Vector3& direction)
- void SetWorldScale(float scale)
- void SetWorldScale(const Vector3& scale)
- void SetWorldScale2D(const Vector2& scale)
- void SetWorldScale2D(float x, float y)
- void SetWorldTransform(const Vector3& position, const Quaternion& rotation)
- void SetWorldTransform(const Vector3& position, const Quaternion& rotation, float scale)
- void SetWorldTransform(const Vector3& position, const Quaternion& rotation, const Vector3& scale)
- void SetWorldTransform2D(const Vector2& position, float rotation)
- void SetWorldTransform2D(const Vector2& position, float rotation, float scale)
- void SetWorldTransform2D(const Vector2& position, float rotation, const Vector2& scale)
- void Translate(const Vector3& delta, TransformSpace space = TS_LOCAL)
- void Translate2D(const Vector2& delta, TransformSpace space = TS_LOCAL)
- void Rotate(const Quaternion& delta, TransformSpace space = TS_LOCAL)
- void Rotate2D(float delta, TransformSpace space = TS_LOCAL)
- void RotateAround(const Vector3& point, const Quaternion& delta, TransformSpace space = TS_LOCAL)
- void RotateAround2D(const Vector2& point, float delta, TransformSpace space = TS_LOCAL)
- void Pitch(float angle, TransformSpace space = TS_LOCAL)
- void Yaw(float angle, TransformSpace space = TS_LOCAL)
- void Roll(float angle, TransformSpace space = TS_LOCAL)
- bool LookAt(const Vector3& target, const Vector3& up = Vector3::UP, TransformSpace space = TS_WORLD)
- void Scale(float scale)
- void Scale(const Vector3& scale)
- void Scale2D(const Vector2& scale)
- void SetEnabled(bool enable)
- void SetDeepEnabled(bool enable)
- void ResetDeepEnabled()
- void SetEnabledRecursive(bool enable)
- void MarkDirty()
- SharedPtr<Node> CreateChild(const String& name = String::EMPTY, CreateMode mode = REPLICATED, unsigned id = 0)
- void AddChild(Node* node, unsigned index = M_MAX_UNSIGNED)
- void RemoveChild(Node* node)
- void RemoveAllChildren()
- void RemoveChildren(bool removeReplicated, bool removeLocal, bool recursive)
- SharedPtr<Component> CreateComponent(StringHash type, CreateMode mode = REPLICATED, unsigned id = 0)
- SharedPtr<Component> GetOrCreateComponent(StringHash type, CreateMode mode = REPLICATED, unsigned id = 0)
- LuaTable CreateScriptObject(const char* scriptObjectType)
- LuaTable CreateScriptObject(const char* fileName, const char* scriptObjectType)
- LuaTable GetScriptObject()
- SharedPtr<Component> CloneComponent(Component* component, unsigned id = 0)
- SharedPtr<Component> CloneComponent(Component* component, CreateMode mode, unsigned id = 0)
- void RemoveComponent(Component* component)
- void RemoveComponent(StringHash type)
- void RemoveComponents(bool removeReplicated, bool removeLocal)
- void RemoveComponents(StringHash type)
- void RemoveAllComponents()
- void ReorderComponent(Component* component, unsigned index)
- SharedPtr<Node> Clone()
- void Remove()
- void SetParent(Node* parent)
- void SetVar(StringHash key, const Variant& value)
- void AddListener(Component* component)
- void RemoveListener(Component* component)
- unsigned GetID() const
- const String& GetName() const
- StringHash GetNameHash() const
- const StringVector& GetTags() const
- bool HasTag(const String& tag) const
- Node* GetParent() const
- Scene* GetScene() const
- bool IsEnabled() const
- bool IsEnabledSelf() const
- const Vector3& GetPosition() const
- Vector2 GetPosition2D() const
- const Quaternion& GetRotation() const
- float GetRotation2D() const
- Vector3 GetDirection() const
- Vector3 GetUp() const
- Vector3 GetRight() const
- const Vector3& GetScale() const
- Vector2 GetScale2D() const
- Matrix3x4 GetTransform() const
- Vector3 GetWorldPosition() const
- Vector2 GetWorldPosition2D() const
- Quaternion GetWorldRotation() const
- float GetWorldRotation2D() const
- Vector3 GetWorldDirection() const
- Vector3 GetWorldUp() const
- Vector3 GetWorldRight() const
- Vector3 GetWorldScale() const
- Vector2 GetWorldScale2D() const
- const Matrix3x4& GetWorldTransform() const
- Vector3 LocalToWorld(const Vector3& position) const
- Vector3 LocalToWorld(const Vector4& vector) const
- Vector2 LocalToWorld2D(const Vector2& vector) const
- Vector3 WorldToLocal(const Vector3& position) const
- Vector3 WorldToLocal(const Vector4& vector) const
- Vector2 WorldToLocal2D(const Vector2& vector) const
- bool IsDirty() const
- unsigned GetNumChildren(bool recursive = false) const
- PODVector<Node*> GetChildren(bool recursive = false) const
- PODVector<Node*> GetChildrenWithComponent(StringHash type, bool recursive = false) const
- PODVector<Node*> GetChildrenWithTag(const String& tag, bool recursive = false) const
- Node* GetChild(unsigned index) const
- Node* GetChild(const String& name, bool recursive = false) const
- unsigned GetNumComponents() const
- unsigned GetNumNetworkComponents() const
- const Vector<SharedPtr<Component> >& GetComponents() const
- PODVector<Component*> GetComponents(const Node* self, StringHash type, bool recursive = false)
- SharedPtr<Component> GetComponent(StringHash type, bool recursive = false)
- SharedPtr<Component> GetParentComponent(StringHash type, bool fullTraversal = false) const
- bool HasComponent(StringHash type) const
- const Variant& GetVar(StringHash key) const
- const VariantMap& GetVars() const

Properties:

- unsigned id (readonly)
- const String& name
- StringHash nameHash (readonly)
- const StringVector& tags
- Node* parent
- Scene* scene (readonly)
- bool enabled
- bool enabledSelf (readonly)
- const Vector3& position
- Vector2 position2D
- const Quaternion& rotation
- float rotation2D
- Vector3 direction
- Vector3 up (readonly)
- Vector3 right (readonly)
- const Vector3& scale
- Vector2 scale2D
- Matrix3x4 transform (readonly)
- Vector3 worldPosition
- Vector2 worldPosition2D
- Quaternion worldRotation
- float worldRotation2D
- Vector3 worldDirection
- Vector3 worldUp (readonly)
- Vector3 worldRight (readonly)
- Vector3 worldScale (readonly)
- Vector2 worldScale2D (readonly)
- const Matrix3x4& worldTransform (readonly)
- bool dirty (readonly)
- unsigned numComponents (readonly)
- unsigned numNetworkComponents (readonly)

<a name="Class_Object"></a>
### Object : RefCounted
Methods:

- StringHash GetType() const
- const String& GetTypeName() const
- const String& GetCategory() const
- void SendEvent(StringHash eventType)
- void SendEvent(StringHash eventType, VariantMap& eventData)
- bool HasSubscribedToEvent(StringHash eventType) const
- bool HasSubscribedToEvent(Object* sender, StringHash eventType) const

Properties:

- StringHash type (readonly)
- const String& typeName (readonly)
- const String& category (readonly)

<a name="Class_ObjectAnimation"></a>
### ObjectAnimation : Resource
- ObjectAnimation()

Methods:

- void AddAttributeAnimation(const String& name, ValueAnimation* attributeAnimation, WrapMode wrapMode = WM_LOOP, float speed = 1.0f)
- void RemoveAttributeAnimation(const String& name)
- void RemoveAttributeAnimation(ValueAnimation* attributeAnimation)
- ValueAnimation* GetAttributeAnimation(const String& name) const
- WrapMode GetAttributeAnimationWrapMode(const String& name) const
- float GetAttributeAnimationSpeed(const String& name) const

<a name="Class_Obstacle"></a>
### Obstacle : Component
- Obstacle()

Methods:

- float GetHeight() const
- void SetHeight(float)
- float GetRadius() const
- void SetRadius(float)

Properties:

- float height
- float radius

<a name="Class_Octree"></a>
### Octree : Component
- Octree()

Methods:

- void DrawDebugGeometry(DebugRenderer* debug, bool depthTest)
- void DrawDebugGeometry(bool depthTest)
- void SetSize(const BoundingBox& box, unsigned numLevels)
- void Update(const FrameInfo& frame)
- void AddManualDrawable(Drawable* drawable)
- void RemoveManualDrawable(Drawable* drawable)
- PODVector<RayQueryResult> Raycast(const Octree* self, const Ray& ray, RayQueryLevel level = RAY_TRIANGLE, float maxDistance = M_INFINITY, unsigned char drawableFlags = DRAWABLE_ANY, unsigned viewMask = DEFAULT_VIEWMASK)
- RayQueryResult RaycastSingle(const Octree* self, const Ray& ray, RayQueryLevel level = RAY_TRIANGLE, float maxDistance = M_INFINITY, unsigned char drawableFlags = DRAWABLE_ANY, unsigned viewMask = DEFAULT_VIEWMASK)
- unsigned GetNumLevels() const
- void QueueUpdate(Drawable* drawable)

Properties:

- unsigned numLevels (readonly)

<a name="Class_OctreeQueryResult"></a>
### OctreeQueryResult
- OctreeQueryResult()

Fields:

- Drawable* drawable
- Node* node

<a name="Class_OffMeshConnection"></a>
### OffMeshConnection : Component
- OffMeshConnection()

Methods:

- void SetEndPoint(Node* node)
- void SetRadius(float radius)
- void SetBidirectional(bool enabled)
- void SetMask(unsigned newMask)
- void SetAreaID(unsigned newAreaID)
- Node* GetEndPoint() const
- float GetRadius() const
- bool IsBidirectional() const
- unsigned GetMask() const
- unsigned GetAreaID() const

Properties:

- Node* endPoint
- float radius
- bool bidirectional
- unsigned mask
- unsigned areaID

<a name="Class_PackageEntry"></a>
### PackageEntry
Fields:

- unsigned offset
- unsigned size
- unsigned checksum

<a name="Class_PackageFile"></a>
### PackageFile : Object
- PackageFile()
- PackageFile(const String& fileName, unsigned startOffset = 0)

Methods:

- bool Open(const String& fileName, unsigned startOffset = 0)
- bool Exists(const String& fileName) const
- const PackageEntry* GetEntry(const String& fileName) const
- const HashMap<String, PackageEntry>& GetEntries() const
- const String& GetName() const
- StringHash GetNameHash() const
- unsigned GetNumFiles() const
- unsigned GetTotalSize() const
- unsigned GetTotalDataSize() const
- unsigned GetChecksum() const
- bool IsCompressed() const

Properties:

- const String& name (readonly)
- StringHash nameHash (readonly)
- unsigned numFiles (readonly)
- unsigned totalSize (readonly)
- unsigned totalDataSize (readonly)
- unsigned checksum (readonly)
- bool compressed (readonly)

<a name="Class_ParticleEffect"></a>
### ParticleEffect : Resource
- ParticleEffect()

Methods:

- void SetMaterial(Material* material)
- void SetNumParticles(unsigned num)
- void SetUpdateInvisible(bool enable)
- void SetRelative(bool enable)
- void SetScaled(bool enable)
- void SetSorted(bool enable)
- void SetFixedScreenSize(bool enable)
- void SetAnimationLodBias(float lodBias)
- void SetEmitterType(EmitterType type)
- void SetEmitterSize(const Vector3& size)
- void SetMinDirection(const Vector3& direction)
- void SetMaxDirection(const Vector3& direction)
- void SetConstantForce(const Vector3& force)
- void SetDampingForce(float force)
- void SetActiveTime(float time)
- void SetInactiveTime(float time)
- void SetMinEmissionRate(float rate)
- void SetMaxEmissionRate(float rate)
- void SetMinParticleSize(const Vector2& size)
- void SetMaxParticleSize(const Vector2& size)
- void SetMinTimeToLive(float time)
- void SetMaxTimeToLive(float time)
- void SetMinVelocity(float velocity)
- void SetMaxVelocity(float velocity)
- void SetMinRotation(float rotation)
- void SetMaxRotation(float rotation)
- void SetMinRotationSpeed(float speed)
- void SetMaxRotationSpeed(float speed)
- void SetSizeAdd(float sizeAdd)
- void SetSizeMul(float sizeMul)
- void SetFaceCameraMode(FaceCameraMode mode)
- void AddColorTime(const Color& color, const float time)
- void AddColorFrame(const ColorFrame& colorFrame)
- void RemoveColorFrame(unsigned index)
- void SetColorFrames(const Vector<ColorFrame>& colorFrames)
- void SetColorFrame(unsigned index, const ColorFrame& colorFrame)
- void SetNumColorFrames(unsigned number)
- void SortColorFrames()
- void AddTextureTime(const Rect& uv, const float time)
- void AddTextureFrame(const TextureFrame& textureFrame)
- void RemoveTextureFrame(unsigned index)
- void SetTextureFrames(const Vector<TextureFrame>& animation)
- void SetTextureFrame(unsigned index, const TextureFrame& textureFrame)
- void SetNumTextureFrames(unsigned number)
- void SortTextureFrames()
- SharedPtr<ParticleEffect> Clone(const String& cloneName = String::EMPTY) const
- Material* GetMaterial() const
- unsigned GetNumParticles() const
- bool GetUpdateInvisible() const
- bool IsRelative() const
- bool IsScaled() const
- bool IsSorted() const
- bool IsFixedScreenSize() const
- float GetAnimationLodBias() const
- EmitterType GetEmitterType() const
- const Vector3& GetEmitterSize() const
- const Vector3& GetMinDirection() const
- const Vector3& GetMaxDirection() const
- const Vector3& GetConstantForce() const
- float GetDampingForce() const
- float GetActiveTime() const
- float GetInactiveTime() const
- float GetMinEmissionRate() const
- float GetMaxEmissionRate() const
- const Vector2& GetMinParticleSize() const
- const Vector2& GetMaxParticleSize() const
- float GetMinTimeToLive() const
- float GetMaxTimeToLive() const
- float GetMinVelocity() const
- float GetMaxVelocity() const
- float GetMinRotation() const
- float GetMaxRotation() const
- float GetMinRotationSpeed() const
- float GetMaxRotationSpeed() const
- float GetSizeAdd() const
- float GetSizeMul() const
- const Vector<ColorFrame>& GetColorFrames() const
- unsigned GetNumColorFrames() const
- const ColorFrame* GetColorFrame(unsigned index) const
- const Vector<TextureFrame>& GetTextureFrames() const
- unsigned GetNumTextureFrames() const
- const TextureFrame* GetTextureFrame(unsigned index) const
- FaceCameraMode GetFaceCameraMode() const

Properties:

- Material* material
- unsigned numParticles
- bool updateInvisible
- bool relative
- bool scaled
- bool sorted
- bool fixedScreenSize
- float animationLodBias
- EmitterType emitterType
- const Vector3& emitterSize
- const Vector3& minDirection
- const Vector3& maxDirection
- const Vector3& constantForce
- float dampingForce
- float activeTime
- float inactiveTime
- float minEmissionRate
- float maxEmissionRate
- const Vector2& minParticleSize
- const Vector2& maxParticleSize
- float minTimeToLive
- float maxTimeToLive
- float minVelocity
- float maxVelocity
- float minRotation
- float maxRotation
- float minRotationSpeed
- float maxRotationSpeed
- float sizeAdd
- float sizeMul
- const Vector<ColorFrame>& colorFrames
- unsigned numColorFrames
- const Vector<TextureFrame>& textureFrames
- unsigned numTextureFrames
- FaceCameraMode faceCameraMode

<a name="Class_ParticleEffect2D"></a>
### ParticleEffect2D : Resource
- ParticleEffect2D()

Methods:

- SharedPtr<ParticleEffect2D> Clone(const String& cloneName = String::EMPTY) const

<a name="Class_ParticleEmitter"></a>
### ParticleEmitter : BillboardSet
- ParticleEmitter()

Methods:

- void SetEffect(ParticleEffect* effect)
- void SetNumParticles(unsigned num)
- void SetEmitting(bool enable)
- void SetSerializeParticles(bool enable)
- void ResetEmissionTimer()
- void RemoveAllParticles()
- void Reset()
- void ApplyEffect()
- ParticleEffect* GetEffect() const
- unsigned GetNumParticles() const
- bool IsEmitting() const
- bool GetSerializeParticles() const

Properties:

- ParticleEffect* effect
- unsigned numParticles
- bool emitting
- bool serializeParticles

<a name="Class_ParticleEmitter2D"></a>
### ParticleEmitter2D : Drawable2D
- ParticleEmitter2D()

Methods:

- void SetEffect(ParticleEffect2D* effect)
- void SetSprite(Sprite2D* sprite)
- void SetBlendMode(BlendMode blendMode)
- void SetMaxParticles(unsigned maxParticles)
- ParticleEffect2D* GetEffect() const
- Sprite2D* GetSprite() const
- BlendMode GetBlendMode() const
- unsigned GetMaxParticles() const

Properties:

- ParticleEffect2D* effect
- Sprite2D* sprite
- BlendMode blendMode
- unsigned maxParticles

<a name="Class_Pass"></a>
### Pass : RefCounted
- Pass(const String& passName)

Methods:

- void SetBlendMode(BlendMode mode)
- void SetCullMode(CullMode mode)
- void SetDepthTestMode(CompareMode mode)
- void SetLightingMode(PassLightingMode mode)
- void SetDepthWrite(bool enable)
- void SetAlphaMask(bool enable)
- void SetIsDesktop(bool enable)
- void SetVertexShader(const String& name)
- void SetPixelShader(const String& name)
- void SetVertexShaderDefines(const String& defines)
- void SetPixelShaderDefines(const String& defines)
- void ReleaseShaders()
- const String& GetName() const
- unsigned GetIndex() const
- BlendMode GetBlendMode() const
- CullMode GetCullMode() const
- CompareMode GetDepthTestMode() const
- PassLightingMode GetLightingMode() const
- unsigned GetShadersLoadedFrameNumber() const
- bool GetDepthWrite() const
- bool GetAlphaMask() const
- bool IsDesktop() const
- const String& GetVertexShader() const
- const String& GetPixelShader() const
- const String& GetVertexShaderDefines() const
- const String& GetPixelShaderDefines() const

Properties:

- const String& name (readonly)
- unsigned index (readonly)
- BlendMode blendMode
- CullMode cullMode
- CompareMode depthTestMode
- PassLightingMode lightingMode
- unsigned shadersLoadedFrameNumber (readonly)
- bool depthWrite
- bool alphaMask
- bool desktop (readonly)
- const String& vertexShader
- const String& pixelShader
- const String& vertexShaderDefines
- const String& pixelShaderDefines

<a name="Class_PhysicsRaycastResult"></a>
### PhysicsRaycastResult
- PhysicsRaycastResult()

Fields:

- Vector3 position_;
- Vector3 normal_;
- float distance_;
- float hitFraction_;
- RigidBody* body_;

<a name="Class_PhysicsRaycastResult2D"></a>
### PhysicsRaycastResult2D
- PhysicsRaycastResult2D()

Fields:

- Vector3 position
- Vector3 normal
- float distance
- RigidBody2D* body

<a name="Class_PhysicsWorld"></a>
### PhysicsWorld : Component
Methods:

- void DrawDebugGeometry(DebugRenderer* debug, bool depthTest)
- void SetFps(int fps)
- void SetGravity(const Vector3& gravity)
- void SetMaxSubSteps(int num)
- void SetNumIterations(int num)
- void SetUpdateEnabled(bool enable)
- void SetInterpolation(bool enable)
- void SetInternalEdge(bool enable)
- void SetSplitImpulse(bool enable)
- void SetMaxNetworkAngularVelocity(float velocity)
- PODVector<PhysicsRaycastResult> Raycast(const Ray& ray, float maxDistance, unsigned int collisionMask = M_MAX_UNSIGNED)
- PhysicsRaycastResult RaycastSingle(const Ray& ray, float maxDistance, unsigned int collisionMask = M_MAX_UNSIGNED)
- PhysicsRaycastResult RaycastSingleSegmented(const Ray& ray, float maxDistance, float segmentDistance, unsigned int collisionMask = M_MAX_UNSIGNED)
- PhysicsRaycastResult SphereCast(const Ray& ray, float radius, float maxDistance, unsigned int collisionMask = M_MAX_UNSIGNED)
- PhysicsRaycastResult ConvexCast(CollisionShape* shape, const Vector3& startPos, const Quaternion& startRot, const Vector3& endPos, const Quaternion& endRot, unsigned int collisionMask = M_MAX_UNSIGNED)
- void RemoveCachedGeometry(Model* model)
- PODVector<RigidBody*> GetRigidBodies(const Sphere& sphere, unsigned int collisionMask = M_MAX_UNSIGNED)
- PODVector<RigidBody*> GetRigidBodies(const BoundingBox& box, unsigned int collisionMask = M_MAX_UNSIGNED)
- PODVector<RigidBody*> GetCollidingBodies(const RigidBody* body)
- Vector3 GetGravity() const
- int GetMaxSubSteps() const
- int GetNumIterations() const
- bool IsUpdateEnabled() const
- bool GetInterpolation() const
- bool GetInternalEdge() const
- bool GetSplitImpulse() const
- int GetFps() const
- float GetMaxNetworkAngularVelocity() const

Properties:

- Vector3 gravity
- int maxSubSteps
- int numIterations
- bool updateEnabled
- bool interpolation
- bool internalEdge
- bool splitImpulse
- int fps
- float maxNetworkAngularVelocity

<a name="Class_PhysicsWorld2D"></a>
### PhysicsWorld2D : Component
- PhysicsWorld2D()

Methods:

- void DrawDebugGeometry(DebugRenderer* debug, bool depthTest)
- void SetUpdateEnabled(bool enable)
- void SetDrawShape(bool drawShape)
- void SetDrawJoint(bool drawJoint)
- void SetDrawAabb(bool drawAabb)
- void SetDrawPair(bool drawPair)
- void SetDrawCenterOfMass(bool drawCenterOfMass)
- void SetAllowSleeping(bool enable)
- void SetWarmStarting(bool enable)
- void SetContinuousPhysics(bool enable)
- void SetSubStepping(bool enable)
- void SetGravity(const Vector2& gravity)
- void SetAutoClearForces(bool enable)
- void SetVelocityIterations(int velocityIterations)
- void SetPositionIterations(int positionIterations)
- PODVector<PhysicsRaycastResult2D> Raycast(const Vector2& startPoint, const Vector2& endPoint, unsigned int collisionMask = M_MAX_UNSIGNED)
- PhysicsRaycastResult2D RaycastSingle(const Vector2& startPoint, const Vector2& endPoint, unsigned int collisionMask = M_MAX_UNSIGNED)
- RigidBody2D* GetRigidBody(const Vector2& point, unsigned collisionMask = M_MAX_UNSIGNED)
- RigidBody2D* GetRigidBody(int screenX, int screenY, unsigned collisionMask = M_MAX_UNSIGNED)
- PODVector<RigidBody2D*> GetRigidBodies(const Rect& aabb, unsigned int collisionMask = M_MAX_UNSIGNED)
- bool IsUpdateEnabled() const
- bool GetDrawShape() const
- bool GetDrawJoint() const
- bool GetDrawAabb() const
- bool GetDrawPair() const
- bool GetDrawCenterOfMass() const
- bool GetAllowSleeping() const
- bool GetWarmStarting() const
- bool GetContinuousPhysics() const
- bool GetSubStepping() const
- bool GetAutoClearForces() const
- const Vector2& GetGravity() const
- int GetVelocityIterations() const
- int GetPositionIterations() const

Properties:

- bool updateEnabled
- bool drawShape
- bool drawJoint
- bool drawAabb
- bool drawPair
- bool drawCenterOfMass
- bool allowSleeping
- bool warmStarting
- bool continuousPhysics
- bool subStepping
- bool autoClearForces
- const Vector2& gravity
- int velocityIterations
- int positionIterations

<a name="Class_Plane"></a>
### Plane
- Plane()
- Plane(const Plane& plane)
- Plane(const Vector3& v0, const Vector3& v1, const Vector3& v2)
- Plane(const Vector3& normal, const Vector3& point)
- Plane(const Vector4& plane)

Methods:

- void Define(const Vector3& v0, const Vector3& v1, const Vector3& v2)
- void Define(const Vector3& normal, const Vector3& point)
- void Define(const Vector4& plane)
- void Transform(const Matrix3& transform)
- void Transform(const Matrix3x4& transform)
- void Transform(const Matrix4& transform)
- Vector3 Project(const Vector3& point) const
- float Distance(const Vector3& point) const
- Vector3 Reflect(const Vector3& direction) const
- Matrix3x4 ReflectionMatrix() const
- Plane Transformed(const Matrix3& transform) const
- Plane Transformed(const Matrix3x4& transform) const
- Plane Transformed(const Matrix4& transform) const
- Vector4 ToVector4() const

Properties:

- Vector3 normal
- float d

Fields:

- Vector3 absNormal

StaticConstants:

- Plane UP

<a name="Class_Polyhedron"></a>
### Polyhedron
- Polyhedron(const Polyhedron& polyhedron)
- Polyhedron(const Frustum& frustum)

Methods:

- void Define(const BoundingBox& box)
- void Define(const Frustum& frustum)
- void AddFace(const Vector3& v0, const Vector3& v1, const Vector3& v2)
- void AddFace(const Vector3& v0, const Vector3& v1, const Vector3& v2, const Vector3& v3)
- void Clip(const Plane& plane)
- void Clip(const BoundingBox& box)
- void Clip(const Frustum& box)
- void Clear()
- void Transform(const Matrix3& transform)
- void Transform(const Matrix3x4& transform)
- Polyhedron Transformed(const Matrix3& transform) const
- Polyhedron Transformed(const Matrix3x4& transform) const
- bool Empty() const

Properties:

- bool empty (readonly)

<a name="Class_PropertySet2D"></a>
### PropertySet2D : RefCounted
- PropertySet2D()

Methods:

- bool HasProperty(const String& name) const
- const String& GetProperty(const String& name) const

<a name="Class_Quaternion"></a>
### Quaternion
- Quaternion()
- Quaternion(const Quaternion& quat)
- Quaternion(float w, float x, float y, float z)
- Quaternion(float angle, const Vector3& axis)
- Quaternion(float angle)
- Quaternion(float x, float y, float z)
- Quaternion(const Vector3& start, const Vector3& end)
- Quaternion(const Vector3& xAxis, const Vector3& yAxis, const Vector3& zAxis)
- Quaternion(const Matrix3& matrix)

Methods:

- bool operator ==(const Quaternion& rhs) const
- Quaternion operator *(float rhs) const
- Quaternion operator *(const Quaternion& rhs) const
- Vector3 operator *(const Vector3& rhs) const
- Quaternion operator -() const
- Quaternion operator -(const Quaternion& rhs) const
- Quaternion operator +(const Quaternion& rhs) const
- void FromAngleAxis(float angle, const Vector3& axis)
- void FromEulerAngles(float x, float y, float z)
- void FromRotationTo(const Vector3& start, const Vector3& end)
- void FromAxes(const Vector3& xAxis, const Vector3& yAxis, const Vector3& zAxis)
- void FromRotationMatrix(const Matrix3& matrix)
- bool FromLookRotation(const Vector3& direction, const Vector3& up = Vector3::UP)
- void Normalize()
- Quaternion Normalized() const
- Quaternion Inverse() const
- float lenSquared = LengthSquared()
- float DotProduct(const Quaternion& rhs) const
- bool Equals(const Quaternion& rhs) const
- bool IsNaN() const
- return Conjugate()
- Vector3 EulerAngles() const
- float YawAngle() const
- float PitchAngle() const
- float RollAngle() const
- Matrix3 RotationMatrix() const
- Quaternion Slerp(Quaternion rhs, float t) const
- Quaternion Nlerp(Quaternion rhs, float t, bool shortestPath = false) const
- String ToString() const

Fields:

- float w
- float x
- float y
- float z

StaticConstants:

- Quaternion IDENTITY

<a name="Class_Ray"></a>
### Ray
- Ray()
- Ray(const Vector3& origin, const Vector3& direction)
- Ray(const Ray& ray)

Methods:

- bool operator ==(const Ray& rhs) const
- void Define(const Vector3& origin, const Vector3& direction)
- Vector3 Project(const Vector3& point) const
- float Distance(const Vector3& point) const
- Vector3 ClosestPoint(const Ray& ray) const
- float HitDistance(const Plane& plane) const
- float HitDistance(const BoundingBox& box) const
- float HitDistance(const Frustum& frustum, bool solidInside = true) const
- float HitDistance(const Sphere& sphere) const
- tuple<float, Vector3, Vector3> HitDistance(const Vector3& v0, const Vector3& v1, const Vector3& v2) const
- Ray Transformed(const Matrix3x4& transform) const

Fields:

- Vector3 origin
- Vector3 direction

<a name="Class_RayQueryResult"></a>
### RayQueryResult
- RayQueryResult()

Fields:

- Vector3 position;
- Vector3 normal;
- Vector2 textureUV;
- float distance;
- Drawable* drawable;
- Node* node;
- unsigned subObject;

<a name="Class_Rect"></a>
### Rect
- Rect()
- Rect(const Vector2& min, const Vector2& max)
- Rect(float left, float top, float right, float bottom)
- Rect(const Vector4& vector)
- Rect(const Rect& rect)

Methods:

- bool operator ==(const Rect& rhs) const
- void Define(const Rect& rect)
- void Define(const Vector2& min, const Vector2& max)
- void Define(const Vector2& point)
- void Merge(const Vector2& point)
- void Merge(const Rect& rect)
- void Clear()
- void Clip(const Rect& rect)
- bool Defined() const
- Vector2 Center() const
- Vector2 Size() const
- Vector2 HalfSize() const
- bool Equals(const Rect& rhs) const
- Intersection IsInside(const Vector2& point) const
- Vector4 ToVector4() const
- String ToString() const

Properties:

- Vector2 center (readonly)
- Vector2 size (readonly)
- Vector2 halfSize (readonly)

StaticConstants:

- Rect FULL
- Rect POSITIVE
- Rect ZERO

<a name="Class_RemoteEvent"></a>
### RemoteEvent
Fields:

- unsigned senderID
- StringHash eventType
- VariantMap eventData
- bool inOrder

<a name="Class_RenderPath"></a>
### RenderPath : RefCounted
Methods:

- SharedPtr<RenderPath> Clone()
- void Load(const XMLElement& element)
- bool Append(XMLFile* file)
- void SetEnabled(const String& tag, bool active)
- void ToggleEnabled(const String& tag)
- void SetRenderTarget(unsigned index, const RenderTargetInfo& info)
- void AddRenderTarget(const RenderTargetInfo& info)
- void RemoveRenderTarget(unsigned index)
- void RemoveRenderTarget(const String& name)
- void RemoveRenderTargets(const String& tag)
- void SetCommand(unsigned index, const RenderPathCommand& command)
- void AddCommand(const RenderPathCommand& command)
- void InsertCommand(unsigned index, const RenderPathCommand& command)
- void RemoveCommand(unsigned index)
- void RemoveCommands(const String& tag)
- void SetShaderParameter(const String& name, const Variant& value)
- unsigned GetNumRenderTargets() const
- unsigned GetNumCommands() const
- RenderPathCommand* GetCommand(unsigned index)
- const Variant& GetShaderParameter(const String& name) const

<a name="Class_RenderPathCommand"></a>
### RenderPathCommand
- RenderPathCommand()

Methods:

- void Load(const XMLElement& element)
- void SetTextureName(TextureUnit unit, const String& name)
- void SetShaderParameter(const String& name, const Variant& value)
- void RemoveShaderParameter(const String& name)
- void SetNumOutputs(unsigned num)
- void SetOutput(unsigned index, const String& name, CubeMapFace face = FACE_POSITIVE_X)
- void SetOutputName(unsigned index, const String& name)
- void SetOutputFace(unsigned index, CubeMapFace face)
- void SetDepthStencilName(const String& name)
- const String& GetTextureName(TextureUnit unit) const
- const Variant& GetShaderParameter(const String& name) const
- unsigned GetNumOutputs() const
- const String& GetOutputName(unsigned index) const
- CubeMapFace GetOutputFace(unsigned index) const
- const String& GetDepthStencilName() const

Fields:

- String tag
- RenderCommandType type
- RenderCommandSortMode sortMode
- String pass
- unsigned passIndex
- String metadata
- String vertexShaderName
- String pixelShaderName
- String vertexShaderDefines
- String pixelShaderDefines
- unsigned clearFlags
- Color clearColor
- float clearDepth
- unsigned clearStencil
- BlendMode blendMode
- bool enabled
- bool useFogColor
- bool markToStencil
- bool useLitBase
- bool vertexLights
- String eventName

<a name="Class_RenderSurface"></a>
### RenderSurface : RefCounted
- RenderSurface(Texture* texture)

Methods:

- void SetNumViewports(unsigned num)
- void SetViewport(unsigned index, Viewport* viewport)
- void SetUpdateMode(RenderSurfaceUpdateMode mode)
- void SetLinkedRenderTarget(RenderSurface* renderTarget)
- void SetLinkedDepthStencil(RenderSurface* depthStencil)
- void QueueUpdate()
- void Release()
- Texture* GetParentTexture() const
- int GetWidth() const
- int GetHeight() const
- TextureUsage GetUsage() const
- unsigned GetNumViewports() const
- Viewport* GetViewport(unsigned index) const
- RenderSurfaceUpdateMode GetUpdateMode() const
- RenderSurface* GetLinkedRenderTarget() const
- RenderSurface* GetLinkedDepthStencil() const

Properties:

- Texture* parentTexture (readonly)
- int width (readonly)
- int height (readonly)
- TextureUsage usage (readonly)
- unsigned numViewports
- RenderSurfaceUpdateMode updateMode
- RenderSurface* linkedRenderTarget
- RenderSurface* linkedDepthStencil

<a name="Class_RenderTargetInfo"></a>
### RenderTargetInfo
- RenderTargetInfo()

Methods:

- void Load(const XMLElement& element)

Fields:

- String name
- String tag
- unsigned format
- Vector2 size
- RenderTargetSizeMode sizeMode
- bool enabled
- bool cubemap
- bool filtered
- bool sRGB
- bool persistent

<a name="Class_Renderer"></a>
### Renderer : Object
Methods:

- void SetNumViewports(unsigned num)
- void SetViewport(unsigned index, Viewport* viewport)
- void SetDefaultRenderPath(RenderPath* renderPath)
- void SetDefaultRenderPath(XMLFile* xmlFile)
- void SetDefaultTechnique(Technique* tech)
- void SetHDRRendering(bool enable)
- void SetSpecularLighting(bool enable)
- void SetTextureAnisotropy(int level)
- void SetTextureFilterMode(TextureFilterMode mode)
- void SetTextureQuality(int quality)
- void SetMaterialQuality(int quality)
- void SetDrawShadows(bool enable)
- void SetShadowMapSize(int size)
- void SetShadowQuality(ShadowQuality quality)
- void SetShadowSoftness(float shadowSoftness)
- void SetShadowMapFilter(Object* instance, ShadowMapFilter functionPtr)
- void SetReuseShadowMaps(bool enable)
- void SetMaxShadowMaps(int shadowMaps)
- void SetDynamicInstancing(bool enable)
- void SetNumExtraInstancingBufferElements(int elements)
- void SetMinInstances(int instances)
- void SetMaxSortedInstances(int instances)
- void SetMaxOccluderTriangles(int triangles)
- void SetOcclusionBufferSize(int size)
- void SetOccluderSizeThreshold(float screenSize)
- void SetThreadedOcclusion(bool enable)
- void SetMobileShadowBiasMul(float mul)
- void SetMobileShadowBiasAdd(float add)
- void SetMobileNormalOffsetMul(float mul)
- void ReloadShaders()
- unsigned GetNumViewports() const
- Viewport* GetViewport(unsigned index) const
- RenderPath* GetDefaultRenderPath() const
- Technique* GetDefaultTechnique() const
- bool GetHDRRendering() const
- bool GetSpecularLighting() const
- bool GetDrawShadows() const
- int GetTextureAnisotropy() const
- TextureFilterMode GetTextureFilterMode() const
- int GetTextureQuality() const
- int GetMaterialQuality() const
- int GetShadowMapSize() const
- ShadowQuality GetShadowQuality() const
- float GetShadowSoftness() const
- bool GetReuseShadowMaps() const
- int GetMaxShadowMaps() const
- bool GetDynamicInstancing() const
- int GetNumExtraInstancingBufferElements() const
- int GetMinInstances() const
- int GetMaxSortedInstances() const
- int GetMaxOccluderTriangles() const
- int GetOcclusionBufferSize() const
- float GetOccluderSizeThreshold() const
- bool GetThreadedOcclusion() const
- float GetMobileShadowBiasMul() const
- float GetMobileShadowBiasAdd() const
- float GetMobileNormalOffsetMul() const
- unsigned GetNumViews() const
- unsigned GetNumPrimitives() const
- unsigned GetNumBatches() const
- unsigned GetNumGeometries(bool allViews = false) const
- unsigned GetNumLights(bool allViews = false) const
- unsigned GetNumShadowMaps(bool allViews = false) const
- unsigned GetNumOccluders(bool allViews = false) const
- Zone* GetDefaultZone() const
- Material* GetDefaultMaterial() const
- Texture2D* GetDefaultLightRamp() const
- Texture2D* GetDefaultLightSpot() const
- void DrawDebugGeometry(bool depthTest)

Properties:

- unsigned numViewports
- RenderPath* defaultRenderPath
- Technique* defaultTechnique
- bool hdrRendering
- bool specularLighting
- bool drawShadows
- int textureAnisotropy
- TextureFilterMode textureFilterMode
- int textureQuality
- int materialQuality
- int shadowMapSize
- ShadowQuality shadowQuality
- float shadowSoftness
- bool reuseShadowMaps
- int maxShadowMaps
- bool dynamicInstancing
- int numExtraInstancingBufferElements
- int minInstances
- int maxSortedInstances
- int maxOccluderTriangles
- int occlusionBufferSize
- float occluderSizeThreshold
- bool threadedOcclusion
- float mobileShadowBiasMul
- float mobileShadowBiasAdd
- float mobileNormalOffsetMul
- unsigned numViews (readonly)
- unsigned numPrimitives (readonly)
- unsigned numBatches (readonly)
- Zone* defaultZone (readonly)
- Material* defaultMaterial (readonly)
- Texture2D* defaultLightRamp (readonly)
- Texture2D* defaultLightSpot (readonly)

<a name="Class_Resource"></a>
### Resource : Object
- Resource()

Methods:

- bool Load(const String& fileName)
- bool Load(Deserializer& source)
- bool Save(const String& fileName) const
- bool Save(Serializer& dest) const
- void SetName(const String& name)
- void SetMemoryUse(unsigned size)
- void ResetUseTimer()
- void SetAsyncLoadState(AsyncLoadState newState)
- const String& GetName() const
- StringHash GetNameHash() const
- unsigned GetMemoryUse() const
- unsigned GetUseTimer()
- AsyncLoadState GetAsyncLoadState() const

Properties:

- const String& name
- StringHash nameHash (readonly)
- unsigned memoryUse
- unsigned useTimer (readonly)
- AsyncLoadState asyncLoadState

<a name="Class_ResourceCache"></a>
### ResourceCache : Object
Methods:

- bool AddResourceDir(const String& pathName, unsigned priority = PRIORITY_LAST)
- bool AddPackageFile(PackageFile* package, unsigned priority = PRIORITY_LAST)
- bool AddPackageFile(const String& fileName, unsigned priority = PRIORITY_LAST)
- bool AddManualResource(Resource* resource)
- void RemoveResourceDir(const String& pathName)
- void RemovePackageFile(PackageFile* package, bool releaseResources = true, bool forceRelease = false)
- void RemovePackageFile(const String& fileName, bool releaseResources = true, bool forceRelease = false)
- void ReleaseResource(StringHash type, const String& name, bool force = false)
- void ReleaseResources(StringHash type, bool force = false)
- void ReleaseResources(StringHash type, const String& partialName, bool force = false)
- void ReleaseResources(const String& partialName, bool force = false)
- void ReleaseAllResources(bool force = false)
- bool ReloadResource(Resource* resource)
- void ReloadResourceWithDependencies(const String& fileName)
- void SetMemoryBudget(StringHash type, unsigned long long budget)
- void SetAutoReloadResources(bool enable)
- void SetReturnFailedResources(bool enable)
- void SetSearchPackagesFirst(bool value)
- void SetFinishBackgroundResourcesMs(int ms)
- SharedPtr<File> GetFile(const String& name, bool sendEventOnFailure = true)
- SharedPtr<Resource> GetResource(StringHash type, const String& name, bool sendEventOnFailure = true)
- SharedPtr<Resource> GetTempResource(StringHash type, const String& name, bool sendEventOnFailure = true)
- PODVector<Resource*> GetResources(StringHash type)
- SharedPtr<Resource> GetExistingResource(StringHash type, const String& name)
- const Vector<String>& GetResourceDirs() const
- const Vector<SharedPtr<PackageFile> >& GetPackageFiles() const
- bool Exists(const String& name) const
- unsigned long long GetMemoryBudget(StringHash type) const
- unsigned long long GetMemoryUse(StringHash type) const
- unsigned long long GetTotalMemoryUse() const
- String GetResourceFileName(const String& name) const
- bool GetAutoReloadResources() const
- bool GetReturnFailedResources() const
- bool GetSearchPackagesFirst() const
- String GetPreferredResourceDir(const String& path) const
- String SanitateResourceName(const String& name) const
- String SanitateResourceDirName(const String& name) const
- void StoreResourceDependency(Resource* resource, const String& dependency)
- void ResetDependencies(Resource* resource)
- String PrintMemoryUsage() const

Properties:

- unsigned long long totalMemoryUse (readonly)
- bool autoReloadResources
- bool returnFailedResources
- bool searchPackagesFirst

<a name="Class_ResourceRef"></a>
### ResourceRef
- ResourceRef()
- ResourceRef(StringHash type)
- ResourceRef(StringHash type, const String& name)
- ResourceRef(const char* type, const char* name)

Methods:

- bool ==(const ResourceRef& rhs) const

Fields:

- StringHash type
- String name

<a name="Class_ResourceRefList"></a>
### ResourceRefList
- ResourceRefList()
- ResourceRefList(StringHash type)

Methods:

- bool ==(const ResourceRefList& rhs) const

Fields:

- StringHash type

<a name="Class_RibbonTrail"></a>
### RibbonTrail : Drawable
- RibbonTrail()

Methods:

- void SetMaterial(Material* material)
- void SetVertexDistance(float length)
- void SetWidth(float width)
- void SetStartColor(const Color& color)
- void SetEndColor(const Color& color)
- void SetStartScale(float startScale)
- void SetEndScale(float endScale)
- void SetTrailType(TrailType type)
- void SetSorted(bool enable)
- void SetLifetime(float time)
- void SetEmitting(bool emitting)
- void SetUpdateInvisible(bool enable)
- void SetTailColumn(unsigned tailColumn)
- void SetAnimationLodBias(float bias)
- void Commit()
- Material* GetMaterial() const
- float GetVertexDistance() const
- float GetWidth() const
- const Color& GetStartColor() const
- const Color& GetEndColor() const
- float GetStartScale() const
- float GetEndScale() const
- bool IsSorted() const
- float GetLifetime() const
- float GetAnimationLodBias() const
- TrailType GetTrailType() const
- unsigned GetTailColumn() const
- bool IsEmitting() const
- bool GetUpdateInvisible() const

Properties:

- Material* material
- float vertexDistance
- float width
- const Color& startColor
- const Color& endColor
- float startScale
- float endScale
- bool sorted
- float lifetime
- float animationLodBias
- TrailType trailType
- unsigned tailColumn
- bool emitting
- bool updateInvisible

<a name="Class_RigidBody"></a>
### RigidBody : Component
- RigidBody()

Methods:

- void SetMass(float mass)
- void SetPosition(const Vector3& position)
- void SetRotation(const Quaternion& rotation)
- void SetTransform(const Vector3& position, const Quaternion& rotation)
- void SetLinearVelocity(const Vector3& velocity)
- void SetLinearFactor(const Vector3& factor)
- void SetLinearRestThreshold(float threshold)
- void SetLinearDamping(float damping)
- void SetAngularVelocity(const Vector3& angularVelocity)
- void SetAngularFactor(const Vector3& factor)
- void SetAngularRestThreshold(float threshold)
- void SetAngularDamping(float factor)
- void SetFriction(float friction)
- void SetAnisotropicFriction(const Vector3& friction)
- void SetRollingFriction(float friction)
- void SetRestitution(float restitution)
- void SetContactProcessingThreshold(float threshold)
- void SetCcdRadius(float radius)
- void SetCcdMotionThreshold(float threshold)
- void SetUseGravity(bool enable)
- void SetGravityOverride(const Vector3& gravity)
- void SetKinematic(bool enable)
- void SetTrigger(bool enable)
- void SetCollisionLayer(unsigned layer)
- void SetCollisionMask(unsigned mask)
- void SetCollisionLayerAndMask(unsigned layer, unsigned mask)
- void SetCollisionEventMode(CollisionEventMode mode)
- void ApplyForce(const Vector3& force)
- void ApplyForce(const Vector3& force, const Vector3& position)
- void ApplyTorque(const Vector3& torque)
- void ApplyImpulse(const Vector3& impulse)
- void ApplyImpulse(const Vector3& impulse, const Vector3& position)
- void ApplyTorqueImpulse(const Vector3& torque)
- void ResetForces()
- void Activate()
- void ReAddBodyToWorld()
- void DisableMassUpdate()
- void EnableMassUpdate()
- PhysicsWorld* GetPhysicsWorld() const
- btRigidBody* GetBody() const
- btCompoundShape* GetCompoundShape() const
- float GetMass() const
- Vector3 GetPosition() const
- Quaternion GetRotation() const
- Vector3 GetLinearVelocity() const
- Vector3 GetLinearFactor() const
- Vector3 GetVelocityAtPoint(const Vector3& position) const
- float GetLinearRestThreshold() const
- float GetLinearDamping() const
- Vector3 GetAngularVelocity() const
- Vector3 GetAngularFactor() const
- float GetAngularRestThreshold() const
- float GetAngularDamping() const
- float GetFriction() const
- Vector3 GetAnisotropicFriction() const
- float GetRollingFriction() const
- float GetRestitution() const
- float GetContactProcessingThreshold() const
- float GetCcdRadius() const
- float GetCcdMotionThreshold() const
- bool GetUseGravity() const
- const Vector3& GetGravityOverride() const
- const Vector3& GetCenterOfMass() const
- bool IsKinematic() const
- bool IsTrigger() const
- bool IsActive() const
- unsigned GetCollisionLayer() const
- unsigned GetCollisionMask() const
- CollisionEventMode GetCollisionEventMode() const
- PODVector<RigidBody*> GetCollidingBodies()

Properties:

- PhysicsWorld* physicsWorld (readonly)
- btRigidBody* body (readonly)
- btCompoundShape* compoundShape (readonly)
- float mass
- Vector3 position
- Quaternion rotation
- Vector3 linearVelocity
- Vector3 linearFactor
- float linearRestThreshold
- float linearDamping
- Vector3 angularVelocity
- Vector3 angularFactor
- float angularRestThreshold
- float angularDamping
- float friction
- Vector3 anisotropicFriction
- float rollingFriction
- float restitution
- float contactProcessingThreshold
- float ccdRadius
- float ccdMotionThreshold
- bool useGravity
- const Vector3& gravityOverride
- const Vector3& centerOfMass (readonly)
- bool kinematic
- bool trigger
- bool active (readonly)
- unsigned collisionLayer
- unsigned collisionMask
- CollisionEventMode collisionEventMode

<a name="Class_RigidBody2D"></a>
### RigidBody2D : Component
- RigidBody2D()

Methods:

- void SetBodyType(BodyType2D bodyType)
- void SetMass(float mass)
- void SetInertia(float inertia)
- void SetMassCenter(const Vector2& center)
- void SetUseFixtureMass(bool useFixtureMass)
- void SetLinearDamping(float linearDamping)
- void SetAngularDamping(float angularDamping)
- void SetAllowSleep(bool allowSleep)
- void SetFixedRotation(bool fixedRotation)
- void SetBullet(bool bullet)
- void SetGravityScale(float gravityScale)
- void SetAwake(bool awake)
- void SetLinearVelocity(const Vector2& linearVelocity)
- void SetAngularVelocity(float angularVelocity)
- void ApplyForce(const Vector2& force, const Vector2& point, bool wake)
- void ApplyForceToCenter(const Vector2& force, bool wake)
- void ApplyTorque(float torque, bool wake)
- void ApplyLinearImpulse(const Vector2& impulse, const Vector2& point, bool wake)
- void ApplyAngularImpulse(float impulse, bool wake)
- BodyType2D GetBodyType() const
- float GetMass() const
- float GetInertia() const
- Vector2 GetMassCenter() const
- bool GetUseFixtureMass() const
- float GetLinearDamping() const
- float GetAngularDamping() const
- bool IsAllowSleep() const
- bool IsFixedRotation() const
- bool IsBullet() const
- float GetGravityScale() const
- bool IsAwake() const
- Vector2 GetLinearVelocity() const
- float GetAngularVelocity() const

Properties:

- BodyType2D bodyType
- float mass
- float inertia
- Vector2 massCenter
- bool useFixtureMass
- float linearDamping
- float angularDamping
- bool allowSleep
- bool fixedRotation
- bool bullet
- float gravityScale
- bool awake
- Vector2 linearVelocity
- float angularVelocity

<a name="Class_Scene"></a>
### Scene : Node
- Scene()

Methods:

- bool LoadXML(const String& fileName)
- bool LoadXML(Deserializer& source)
- bool LoadJSON(const String& fileName)
- bool LoadJSON(Deserializer& source)
- bool SaveXML(const String& fileName, const String& indentation = "\t") const
- bool SaveXML(Serializer& dest, const String& indentation = "\t") const
- bool SaveJSON(const String& fileName, const String& indentation = "\t") const
- bool SaveJSON(Serializer& dest, const String& indentation = "\t") const
- bool LoadAsync(const String& fileName, LoadMode mode = LOAD_SCENE_AND_RESOURCES)
- bool LoadAsyncXML(const String& fileName, LoadMode mode = LOAD_SCENE_AND_RESOURCES)
- bool LoadAsyncJSON(const String& fileName, LoadMode mode = LOAD_SCENE_AND_RESOURCES)
- void StopAsyncLoading()
- SharedPtr<Node> Instantiate(const String& fileName, const Vector3& position, const Quaternion& rotation, CreateMode mode = REPLICATED)
- SharedPtr<Node> InstantiateXML(const String& fileName, const Vector3& position, const Quaternion& rotation, CreateMode mode = REPLICATED)
- SharedPtr<Node> InstantiateJSON(const String& fileName, const Vector3& position, const Quaternion& rotation, CreateMode mode = REPLICATED)
- void Clear(bool clearReplicated = true, bool clearLocal = true)
- void SetUpdateEnabled(bool enable)
- void SetTimeScale(float scale)
- void SetElapsedTime(float time)
- void SetSmoothingConstant(float constant)
- void SetSnapThreshold(float threshold)
- void SetAsyncLoadingMs(int ms)
- void AddRequiredPackageFile(PackageFile* package)
- void ClearRequiredPackageFiles()
- void RegisterVar(const String& name)
- void UnregisterVar(const String& name)
- void UnregisterAllVars()
- Node* GetNode(unsigned id) const
- bool GetNodesWithTag(PODVector<Node*>& dest, const String& tag)  const
- bool IsUpdateEnabled() const
- bool IsAsyncLoading() const
- float GetAsyncProgress() const
- LoadMode GetAsyncLoadMode() const
- const String& GetFileName() const
- unsigned GetChecksum() const
- float GetTimeScale() const
- float GetElapsedTime() const
- float GetSmoothingConstant() const
- float GetSnapThreshold() const
- int GetAsyncLoadingMs() const
- const Vector<SharedPtr<PackageFile> >& GetRequiredPackageFiles() const

Properties:

- bool updateEnabled
- bool asyncLoading (readonly)
- float asyncProgress (readonly)
- LoadMode asyncLoadMode (readonly)
- const String& fileName (readonly)
- unsigned checksum (readonly)
- float timeScale
- float elapsedTime
- float smoothingConstant
- float snapThreshold
- int asyncLoadingMs

<a name="Class_ScriptObject"></a>
### ScriptObject
- ScriptObject()

Methods:

- Node* GetNode()
- void SubscribeToEvent(StringHash eventType, const String& luaFunctionName)
- void SubscribeToEvent(StringHash eventType, LuaFunction luaFunction)
- void SubscribeToEvent(Object* sender, StringHash eventType, const String& luaFunctionName)
- void SubscribeToEvent(Object* sender, StringHash eventType, LuaFunction luaFunction)
- void UnsubscribeFromEvent(StringHash eventType)
- void UnsubscribeFromEvent(Object* sender, StringHash eventType)
- void UnsubscribeFromEvents(Object* sender)
- void UnsubscribeFromAllEvents()
- void UnsubscribeFromAllEventsExcept(const PODVector<StringHash>& eventTypes)
- bool HasSubscribedToEvent(StringHash eventType)
- bool HasSubscribedToEvent(Object* sender, StringHash eventType)

<a name="Class_ScrollBar"></a>
### ScrollBar : BorderImage
- ScrollBar()

Methods:

- void SetOrientation(Orientation orientation)
- void SetRange(float range)
- void SetValue(float value)
- void ChangeValue(float delta)
- void SetScrollStep(float step)
- void SetStepFactor(float factor)
- void StepBack()
- void StepForward()
- Orientation GetOrientation() const
- float GetRange() const
- float GetValue() const
- float GetScrollStep() const
- float GetStepFactor() const
- float GetEffectiveScrollStep() const
- Button* GetBackButton() const
- Button* GetForwardButton() const
- Slider* GetSlider() const

Properties:

- Orientation orientation
- float range
- float value
- float scrollStep
- float stepFactor
- float effectiveScrollStep (readonly)
- Button* backButton (readonly)
- Button* forwardButton (readonly)
- Slider* slider (readonly)

<a name="Class_ScrollView"></a>
### ScrollView : UIElement
- ScrollView()

Methods:

- void SetContentElement(UIElement* element)
- void SetViewPosition(const IntVector2& position)
- void SetViewPosition(int x, int y)
- void SetScrollBarsVisible(bool horizontal, bool vertical)
- void SetScrollBarsAutoVisible(bool enable)
- void SetScrollStep(float step)
- void SetPageStep(float step)
- void SetScrollDeceleration(float deceleration)
- void SetScrollSnapEpsilon(float snap)
- void SetAutoDisableChildren(bool disable)
- void SetAutoDisableThreshold(float amount)
- const IntVector2& GetViewPosition() const
- SharedPtr<UIElement> GetContentElement() const
- ScrollBar* GetHorizontalScrollBar() const
- ScrollBar* GetVerticalScrollBar() const
- BorderImage* GetScrollPanel() const
- bool GetScrollBarsAutoVisible() const
- float GetScrollStep() const
- float GetPageStep() const
- float GetScrollDeceleration() const
- float GetScrollSnapEpsilon() const
- bool GetAutoDisableChildren() const
- float GetAutoDisableThreshold() const

Properties:

- const IntVector2& viewPosition
- UIElement* contentElement
- ScrollBar* horizontalScrollBar (readonly)
- ScrollBar* verticalScrollBar (readonly)
- BorderImage* scrollPanel (readonly)
- bool scrollBarsAutoVisible
- float scrollStep
- float pageStep
- float scrollDeceleration
- float scrollSnapEpsilon

<a name="Class_Serializable"></a>
### Serializable : Object
Methods:

- bool Load(const String& fileName, bool setInstanceDefault = false)
- bool Load(Deserializer& source, bool setInstanceDefault = false)
- bool Save(const String& fileName)
- bool Save(Serializer& dest) const
- bool LoadXML(const XMLElement& source, bool setInstanceDefault = false)
- bool SaveXML(XMLElement& dest) const
- bool LoadJSON(const JSONValue& source, bool setInstanceDefault = false)
- bool SaveJSON(JSONValue& dest) const
- bool SetAttribute(unsigned index, const Variant& value)
- bool SetAttribute(const String& name, const Variant& value)
- Variant GetAttribute(unsigned index) const
- Variant GetAttribute(const String& name) const
- Variant GetAttributeDefault(unsigned index) const
- Variant GetAttributeDefault(const String& name) const
- unsigned GetNumAttributes() const
- unsigned GetNumNetworkAttributes() const

<a name="Class_Serializer"></a>
### Serializer
Methods:

- unsigned Write(const VectorBuffer& buffer)
- bool WriteInt(int value)
- bool WriteInt64(long long value)
- bool WriteShort(short value)
- bool WriteByte(signed char value)
- bool WriteUInt(unsigned value)
- bool WriteUInt64(unsigned long long value)
- bool WriteUShort(unsigned short value)
- bool WriteUByte(unsigned char value)
- bool WriteBool(bool value)
- bool WriteFloat(float value)
- bool WriteDouble(double value)
- bool WriteIntRect(const IntRect& value)
- bool WriteIntVector2(const IntVector2& value)
- bool WriteRect(const Rect& value)
- bool WriteVector2(const Vector2& value)
- bool WriteVector3(const Vector3& value)
- bool WritePackedVector3(const Vector3& value, float maxAbsCoord)
- bool WriteVector4(const Vector4& value)
- bool WriteQuaternion(const Quaternion& value)
- bool WritePackedQuaternion(const Quaternion& value)
- bool WriteMatrix3(const Matrix3& value)
- bool WriteMatrix3x4(const Matrix3x4& value)
- bool WriteMatrix4(const Matrix4& value)
- bool WriteColor(const Color& value)
- bool WriteBoundingBox(const BoundingBox& value)
- bool WriteString(const String& value)
- bool WriteFileID(const String& value)
- bool WriteStringHash(const StringHash& value)
- bool WriteBuffer(const VectorBuffer& buffer)
- bool WriteResourceRef(const ResourceRef& value)
- bool WriteResourceRefList(const ResourceRefList& value)
- bool WriteVariant(const Variant& value)
- bool WriteVariantData(const Variant& value)
- bool WriteVariantVector(const VariantVector& value)
- bool WriteStringVector(const StringVector& value)
- bool WriteVariantMap(const VariantMap& value)
- bool WriteVLE(unsigned value)
- bool WriteNetID(unsigned value)
- bool WriteLine(const String& value)

<a name="Class_Skeleton"></a>
### Skeleton
Methods:

- unsigned GetNumBones() const
- Bone* GetRootBone()
- Bone* GetBone(unsigned index)
- Bone* GetBone(const char* name)
- Bone* GetBone(StringHash nameHash)

Properties:

- unsigned numBones (readonly)
- Bone* rootBone (readonly)

<a name="Class_Skybox"></a>
### Skybox : StaticModel
- Skybox()

<a name="Class_Slider"></a>
### Slider : BorderImage
- Slider()

Methods:

- void SetOrientation(Orientation orientation)
- void SetRange(float range)
- void SetValue(float value)
- void ChangeValue(float delta)
- void SetRepeatRate(float rate)
- Orientation GetOrientation() const
- float GetRange() const
- float GetValue() const
- BorderImage* GetKnob() const
- float GetRepeatRate() const

Properties:

- Orientation orientation
- float range
- float value
- BorderImage* knob (readonly)
- float repeatRate

<a name="Class_SmoothedTransform"></a>
### SmoothedTransform : Component
- SmoothedTransform()

Methods:

- void SetTargetPosition(const Vector3& position)
- void SetTargetRotation(const Quaternion& rotation)
- void SetTargetWorldPosition(const Vector3& position)
- void SetTargetWorldRotation(const Quaternion& rotation)
- const Vector3& GetTargetPosition() const
- const Quaternion& GetTargetRotation() const
- Vector3 GetTargetWorldPosition() const
- Quaternion GetTargetWorldRotation() const
- bool IsInProgress() const

Properties:

- const Vector3& targetPosition
- const Quaternion& targetRotation
- Vector3 targetWorldPosition
- Quaternion targetWorldRotation
- bool inProgress (readonly)

<a name="Class_Sound"></a>
### Sound : Resource
- Sound()

Methods:

- bool LoadRaw(Deserializer& source)
- bool LoadRaw(Deserializer& source)
- bool LoadWav(Deserializer& source)
- bool LoadWav(const String& fileName)
- bool LoadOggVorbis(Deserializer& source)
- bool LoadOggVorbis(const String& fileName)
- void SetSize(unsigned dataSize)
- void SetData(const void* data, unsigned dataSize)
- void SetFormat(unsigned frequency, bool sixteenBit, bool stereo)
- void SetLooped(bool enable)
- void SetLoop(unsigned repeatOffset, unsigned endOffset)
- float GetLength() const
- unsigned GetDataSize() const
- unsigned GetSampleSize() const
- float GetFrequency() const
- unsigned GetIntFrequency() const
- bool IsLooped() const
- bool IsSixteenBit() const
- bool IsStereo() const
- bool IsCompressed() const
- void FixInterpolation()

Properties:

- float length (readonly)
- unsigned dataSize (readonly)
- unsigned sampleSize (readonly)
- float frequency (readonly)
- unsigned intFrequency (readonly)
- bool looped
- bool sixteenBit (readonly)
- bool stereo (readonly)
- bool compressed (readonly)

<a name="Class_SoundListener"></a>
### SoundListener : Component
- SoundListener()

<a name="Class_SoundSource"></a>
### SoundSource : Component
- SoundSource()

Methods:

- void Play(Sound* sound)
- void Play(Sound* sound, float frequency)
- void Play(Sound* sound, float frequency, float gain)
- void Play(Sound* sound, float frequency, float gain, float panning)
- void Stop()
- void SetSoundType(const String& type)
- void SetFrequency(float frequency)
- void SetGain(float gain)
- void SetAttenuation(float attenuation)
- void SetPanning(float panning)
- Sound* GetSound() const
- String GetSoundType() const
- float GetTimePosition() const
- float GetFrequency() const
- float GetGain() const
- float GetAttenuation() const
- float GetPanning() const
- bool IsPlaying() const

Properties:

- Sound* sound (readonly)
- String soundType
- float timePosition (readonly)
- float frequency
- float gain
- float attenuation
- float panning
- bool playing (readonly)

<a name="Class_SoundSource3D"></a>
### SoundSource3D : SoundSource
- SoundSource3D()

Methods:

- void SetDistanceAttenuation(float nearDistance, float farDistance, float rolloffFactor)
- void SetAngleAttenuation(float innerAngle, float outerAngle)
- void SetNearDistance(float distance)
- void SetFarDistance(float distance)
- void SetInnerAngle(float angle)
- void SetOuterAngle(float angle)
- void SetRolloffFactor(float factor)
- void CalculateAttenuation()
- float GetNearDistance() const
- float GetFarDistance() const
- float GetInnerAngle() const
- float GetOuterAngle() const
- float RollAngleoffFactor() const

Properties:

- float nearDistance
- float farDistance
- float innerAngle
- float outerAngle
- float rolloffFactor (writeonly)

<a name="Class_Sphere"></a>
### Sphere
- Sphere()
- Sphere(const Sphere& sphere)
- Sphere(const Vector3& center, float radius)
- Sphere(const BoundingBox& box)
- Sphere(const Frustum& frustum)
- Sphere(const Polyhedron& poly)

Methods:

- void Define(const Sphere& sphere)
- void Define(const Vector3& center, float radius)
- void Define(const BoundingBox& box)
- void Define(const Frustum& frustum)
- void Define(const Polyhedron& poly)
- void Merge(const Vector3& point)
- void Merge(const BoundingBox& box)
- void Merge(const Frustum& frustum)
- void Merge(const Polyhedron& poly)
- void Merge(const Sphere& sphere)
- void Clear()
- bool Defined() const
- Intersection IsInside(const Vector3& point) const
- Intersection IsInside(const Sphere& sphere) const
- Intersection IsInside(const BoundingBox& box) const
- Intersection IsInsideFast(const Sphere& sphere) const
- Intersection IsInsideFast(const BoundingBox& box) const

Fields:

- Vector3 center
- float radius

<a name="Class_Spline"></a>
### Spline
- Spline()
- Spline(InterpolationMode mode)

Methods:

- bool ==(const Spline& rhs) const
- void SetInterpolationMode(InterpolationMode interpolationMode)
- void SetKnot(const Variant& knot, unsigned index)
- void AddKnot(const Variant& knot)
- void AddKnot(const Variant& knot, unsigned index)
- void RemoveKnot()
- void RemoveKnot(unsigned index)
- void Clear()
- InterpolationMode GetInterpolationMode() const
- Variant GetKnot(unsigned index) const
- Variant GetPoint(float f) const

Properties:

- InterpolationMode interpolationMode

<a name="Class_SplinePath"></a>
### SplinePath : Component
- SplinePath()

Methods:

- void AddControlPoint(Node* point, unsigned index = M_MAX_UNSIGNED)
- void RemoveControlPoint(Node* point)
- void ClearControlPoints()
- void SetInterpolationMode(InterpolationMode interpolationMode)
- void SetSpeed(float speed)
- void SetPosition(float factor)
- void SetControlledNode(Node* controlled)
- InterpolationMode GetInterpolationMode() const
- float GetSpeed() const
- float GetLength() const
- Vector3 GetPosition() const
- Node* GetControlledNode() const
- Vector3 GetPosition() const
- void Move(float timeStep)
- void Reset()
- bool IsFinished() const

Properties:

- InterpolationMode interpolationMode
- float speed
- float length (readonly)
- Vector3 position
- Node* controlledNode
- bool finished (readonly)

<a name="Class_Sprite"></a>
### Sprite : UIElement
- Sprite()

Methods:

- void SetPosition(const Vector2& position)
- void SetPosition(float x, float y)
- void SetHotSpot(const IntVector2& hotSpot)
- void SetHotSpot(int x, int y)
- void SetScale(const Vector2& scale)
- void SetScale(float x, float y)
- void SetScale(float scale)
- void SetRotation(float angle)
- void SetTexture(Texture* texture)
- void SetImageRect(const IntRect& rect)
- void SetFullImageRect()
- void SetBlendMode(BlendMode mode)
- const Vector2& GetPosition() const
- const IntVector2& GetHotSpot() const
- const Vector2& GetScale() const
- float GetRotation() const
- Texture* GetTexture() const
- const IntRect& GetImageRect() const
- BlendMode GetBlendMode() const
- const Matrix3x4& GetTransform() const

Properties:

- const Vector2& position
- const IntVector2& hotSpot
- const Vector2& scale
- float rotation
- Texture* texture
- const IntRect& imageRect
- BlendMode blendMode
- const Matrix3x4& transform (readonly)

<a name="Class_Sprite2D"></a>
### Sprite2D : Resource
- Sprite2D()

Methods:

- void SetTexture(Texture2D* texture)
- void SetRectangle(const IntRect& rectangle)
- void SetHotSpot(const Vector2& hotSpot)
- void SetOffset(const IntVector2& offset)
- void SetTextureEdgeOffset(float offset)
- void SetSpriteSheet(SpriteSheet2D* spriteSheet)
- Texture2D* GetTexture() const
- const IntRect& GetRectangle() const
- const Vector2& GetHotSpot() const
- const IntVector2& GetOffset() const
- float GetTextureEdgeOffset() const
- SpriteSheet2D* GetSpriteSheet() const

Properties:

- Texture2D* texture
- const IntRect& rectangle
- const Vector2& hotSpot
- const IntVector2& offset
- float textureEdgeOffset
- SpriteSheet2D* spriteSheet

<a name="Class_SpriteSheet2D"></a>
### SpriteSheet2D : Resource
- SpriteSheet2D()

Methods:

- void SetTexture(Texture2D* texture)
- void DefineSprite(const String& name, const IntRect& rectangle, const Vector2& hotSpot = Vector2(0.5f, 0.5f),
- Texture2D* GetTexture() const
- Sprite2D* GetSprite(const String& name) const

Properties:

- Texture2D* texture

<a name="Class_StaticModel"></a>
### StaticModel : Drawable
- StaticModel()

Methods:

- void SetModel(Model* model)
- void SetMaterial(Material* material)
- bool SetMaterial(unsigned index, Material* material)
- void SetOcclusionLodLevel(unsigned level)
- void ApplyMaterialList(const String& fileName = String::EMPTY)
- Model* GetModel() const
- unsigned GetNumGeometries() const
- Material* GetMaterial(unsigned index = 0) const
- unsigned GetOcclusionLodLevel() const
- bool IsInside(const Vector3& point) const
- bool IsInsideLocal(const Vector3& point) const

Properties:

- Model* model
- Material* material
- unsigned numGeometries (readonly)
- unsigned occlusionLodLevel

<a name="Class_StaticModelGroup"></a>
### StaticModelGroup : StaticModel
- StaticModelGroup()

Methods:

- void AddInstanceNode(Node* node)
- void RemoveInstanceNode(Node* node)
- void RemoveAllInstanceNodes()
- unsigned GetNumInstanceNodes() const
- Node* GetInstanceNode(unsigned index) const

Properties:

- unsigned numInstanceNodes (readonly)

<a name="Class_StaticSprite2D"></a>
### StaticSprite2D : Drawable2D
- StaticSprite2D()

Methods:

- void SetSprite(Sprite2D* sprite)
- void SetBlendMode(BlendMode blendMode)
- void SetFlip(bool flipX, bool flipY)
- void SetFlipX(bool flipX)
- void SetFlipY(bool flipY)
- void SetColor(const Color& color)
- void SetAlpha(float alpha)
- void SetUseHotSpot(bool useHotSpot)
- void SetHotSpot(const Vector2& hotspot)
- void SetCustomMaterial(Material* customMaterial)
- Sprite2D* GetSprite() const
- BlendMode GetBlendMode() const
- bool GetFlipX() const
- bool GetFlipY() const
- const Color& GetColor() const
- float GetAlpha() const
- bool GetUseHotSpot() const
- const Vector2& GetHotSpot() const
- Material* GetCustomMaterial() const

Properties:

- Sprite2D* sprite
- BlendMode blendMode
- bool flipX
- bool flipY
- const Color& color
- float alpha
- bool useHotSpot
- const Vector2& hotSpot
- Material* customMaterial

<a name="Class_StringHash"></a>
### StringHash
- StringHash()
- StringHash(const StringHash& rhs)
- StringHash(unsigned value)
- StringHash(const char* str)

Methods:

- StringHash operator +(const StringHash& rhs) const
- bool operator ==(const StringHash& rhs) const
- bool operator <(const StringHash& rhs) const
- unsigned Value() const
- String ToString() const
- unsigned ToHash() const

Properties:

- unsigned value (readonly)

StaticConstants:

- StringHash ZERO

<a name="Class_Technique"></a>
### Technique : Resource
- Technique()

Methods:

- void SetIsDesktop(bool enable)
- Pass* CreatePass(const String& passName)
- void RemovePass(const String& passName)
- void ReleaseShaders()
- SharedPtr<Technique> Clone(const String& cloneName = String::EMPTY) const
- bool IsDesktop() const
- bool IsSupported() const
- bool HasPass(unsigned passIndex) const
- bool HasPass(const String& name) const
- Pass* GetPass(unsigned passIndex) const
- Pass* GetPass(const String& passName) const
- Pass* GetSupportedPass(unsigned passIndex) const
- Pass* GetSupportedPass(const String& passName) const
- unsigned GetNumPasses() const
- Vector<String> GetPassNames() const
- PODVector<Pass*> GetPasses() const

Properties:

- bool desktop (readonly)
- bool supported (readonly)
- unsigned numPasses (readonly)

<a name="Class_Terrain"></a>
### Terrain : Component
- Terrain()

Methods:

- void SetPatchSize(int size)
- void SetSpacing(const Vector3& spacing)
- void SetMaxLodLevels(unsigned levels)
- void SetOcclusionLodLevel(unsigned level)
- void SetSmoothing(bool enable)
- bool SetHeightMap(Image* image)
- void SetMaterial(Material* material)
- void SetDrawDistance(float distance)
- void SetShadowDistance(float distance)
- void SetLodBias(float bias)
- void SetViewMask(unsigned mask)
- void SetLightMask(unsigned mask)
- void SetShadowMask(unsigned mask)
- void SetZoneMask(unsigned mask)
- void SetMaxLights(unsigned num)
- void SetCastShadows(bool enable)
- void SetOccluder(bool enable)
- void SetOccludee(bool enable)
- void ApplyHeightMap()
- int GetPatchSize() const
- const Vector3& GetSpacing() const
- const IntVector2& GetNumVertices() const
- const IntVector2& GetNumPatches() const
- unsigned GetMaxLodLevels() const
- unsigned GetOcclusionLodLevel() const
- bool GetSmoothing() const
- Image* GetHeightMap() const
- Material* GetMaterial() const
- TerrainPatch* GetPatch(unsigned index) const
- TerrainPatch* GetPatch(int x, int z) const
- float GetHeight(const Vector3& worldPosition) const
- Vector3 GetNormal(const Vector3& worldPosition) const
- IntVector2 WorldToHeightMap(const Vector3& worldPosition) const
- void UpdatePatchLod(TerrainPatch* patch)

Properties:

- int patchSize
- const Vector3& spacing
- const IntVector2& numVertices (readonly)
- const IntVector2& numPatches (readonly)
- unsigned maxLodLevels
- unsigned occlusionLodLevel
- bool smoothing
- Image* heightMap
- Material* material
- float drawDistance (writeonly)
- float shadowDistance (writeonly)
- float lodBias (writeonly)
- unsigned viewMask (writeonly)
- unsigned lightMask (writeonly)
- unsigned shadowMask (writeonly)
- unsigned zoneMask (writeonly)
- unsigned maxLights (writeonly)
- void castShadows (writeonly)
- bool occluder (writeonly)
- bool occludee (writeonly)

<a name="Class_TerrainPatch"></a>
### TerrainPatch : Drawable
- TerrainPatch()

Methods:

- void SetOwner(Terrain* terrain)
- void SetNeighbors(TerrainPatch* north, TerrainPatch* south, TerrainPatch* west, TerrainPatch* east)
- void SetMaterial(Material* material)
- void SetBoundingBox(const BoundingBox& box)
- void SetCoordinates(const IntVector2& coordinates)
- void ResetLod()
- Geometry* GetGeometry() const
- Geometry* GetMaxLodGeometry() const
- Geometry* GetOcclusionGeometry() const
- VertexBuffer* GetVertexBuffer() const
- Terrain* GetOwner() const
- TerrainPatch* GetNorthPatch() const
- TerrainPatch* GetSouthPatch() const
- TerrainPatch* GetWestPatch() const
- TerrainPatch* GetEastPatch() const
- const IntVector2& GetCoordinates() const
- unsigned GetLodLevel() const

Properties:

- Geometry* geometry (readonly)
- Geometry* maxLodGeometry (readonly)
- Geometry* occlusionGeometry (readonly)
- Terrain* owner
- TerrainPatch* northPatch (readonly)
- TerrainPatch* southPatch (readonly)
- TerrainPatch* westPatch (readonly)
- TerrainPatch* eastPatch (readonly)
- const IntVector2& coordinates
- unsigned lodLevel (readonly)
- void boundingBox (writeonly)

<a name="Class_Text"></a>
### Text : UIElement
- Text()

Methods:

- bool SetFont(const String& fontName, int size = DEFAULT_FONT_SIZE)
- bool SetFont(Font* font, int size = DEFAULT_FONT_SIZE)
- bool SetFontSize(int size)
- void SetText(const String& text)
- void SetTextAlignment(HorizontalAlignment align)
- void SetRowSpacing(float spacing)
- void SetWordwrap(bool enable)
- void SetAutoLocalizable(bool enable)
- void SetSelection(unsigned start, unsigned length = M_MAX_UNSIGNED)
- void ClearSelection()
- void SetSelectionColor(const Color& color)
- void SetHoverColor(const Color& color)
- void SetTextEffect(TextEffect textEffect)
- void SetEffectShadowOffset(const IntVector2& offset)
- void SetEffectStrokeThickness(int thickness)
- void SetEffectRoundStroke(bool roundStroke)
- void SetEffectColor(const Color& effectColor)
- Font* GetFont() const
- int GetFontSize() const
- const String& GetText() const
- HorizontalAlignment GetTextAlignment() const
- float GetRowSpacing() const
- bool GetWordwrap() const
- bool GetAutoLocalizable() const
- unsigned GetSelectionStart() const
- unsigned GetSelectionLength() const
- const Color& GetSelectionColor() const
- const Color& GetHoverColor() const
- TextEffect GetTextEffect() const
- const IntVector2& GetEffectShadowOffset() const
- int GetEffectStrokeThickness() const
- bool GetEffectRoundStroke() const
- const Color& GetEffectColor() const
- int GetRowHeight() const
- unsigned GetNumRows() const
- unsigned GetNumChars() const
- int GetRowWidth(unsigned index) const
- IntVector2 GetCharPosition(unsigned index)
- IntVector2 GetCharSize(unsigned index)
- void SetEffectDepthBias(float bias)
- float GetEffectDepthBias() const

Properties:

- Font* font (readonly)
- int fontSize
- const String& text
- HorizontalAlignment textAlignment
- float rowSpacing
- bool wordwrap
- bool autoLocalizable
- unsigned selectionStart (readonly)
- unsigned selectionLength (readonly)
- const Color& selectionColor
- const Color& hoverColor
- TextEffect textEffect
- const IntVector2& effectShadowOffset
- int effectStrokeThickness
- bool effectRoundStroke
- const Color& effectColor
- int rowHeight (readonly)
- unsigned numRows (readonly)
- unsigned numChars (readonly)
- float effectDepthBias

<a name="Class_Text3D"></a>
### Text3D : Drawable
- Text3D()

Methods:

- bool SetFont(const String& fontName, int size = DEFAULT_FONT_SIZE)
- bool SetFont(Font* font, int size = DEFAULT_FONT_SIZE)
- bool SetFontSize(int size)
- void SetMaterial(Material* material)
- void SetText(const String& text)
- void SetAlignment(HorizontalAlignment hAlign, VerticalAlignment vAlign)
- void SetHorizontalAlignment(HorizontalAlignment align)
- void SetVerticalAlignment(VerticalAlignment align)
- void SetTextAlignment(HorizontalAlignment align)
- void SetRowSpacing(float spacing)
- void SetWordwrap(bool enable)
- void SetTextEffect(TextEffect textEffect)
- void SetEffectShadowOffset(const IntVector2& offset)
- void SetEffectStrokeThickness(int thickness)
- void SetEffectRoundStroke(bool roundStroke)
- void SetEffectColor(const Color& effectColor)
- void SetEffectDepthBias(float bias)
- void SetWidth(int width)
- void SetColor(const Color& color)
- void SetColor(Corner corner, const Color& color)
- void SetOpacity(float opacity)
- void SetFixedScreenSize(bool enable)
- void SetFaceCameraMode(FaceCameraMode mode)
- Font* GetFont() const
- int GetFontSize() const
- Material* GetMaterial() const
- const String& GetText() const
- HorizontalAlignment GetTextAlignment() const
- HorizontalAlignment GetHorizontalAlignment() const
- VerticalAlignment GetVerticalAlignment() const
- float GetRowSpacing() const
- bool GetWordwrap() const
- TextEffect GetTextEffect() const
- const IntVector2& GetEffectShadowOffset() const
- int GetEffectStrokeThickness() const
- bool GetEffectRoundStroke() const
- const Color& GetEffectColor() const
- float GetEffectDepthBias() const
- int GetWidth() const
- int GetRowHeight() const
- unsigned GetNumRows() const
- unsigned GetNumChars() const
- int GetRowWidth(unsigned index) const
- IntVector2 GetCharPosition(unsigned index)
- IntVector2 GetCharSize(unsigned index)
- float GetOpacity() const
- bool IsFixedScreenSize() const
- FaceCameraMode GetFaceCameraMode() const

Properties:

- Font* font (readonly)
- int fontSize
- Material* material
- const String& text
- HorizontalAlignment textAlignment
- HorizontalAlignment horizontalAlignment
- VerticalAlignment verticalAlignment
- float rowSpacing
- bool wordwrap
- TextEffect textEffect
- const IntVector2& effectShadowOffset
- int effectStrokeThickness
- bool effectRoundStroke
- const Color& effectColor
- float effectDepthBias
- int width
- int rowHeight (readonly)
- unsigned numRows (readonly)
- unsigned numChars (readonly)
- float opacity
- bool fixedScreenSize
- FaceCameraMode faceCameraMode

<a name="Class_Texture"></a>
### Texture : Resource
- Texture()

Methods:

- void SetNumLevels(unsigned levels)
- void SetFilterMode(TextureFilterMode filter)
- void SetAddressMode(TextureCoordinate coord, TextureAddressMode address)
- void SetBorderColor(const Color& color)
- void SetSRGB(bool enable)
- void SetBackupTexture(Texture* texture)
- void SetMipsToSkip(int quality, int toSkip)
- unsigned GetFormat() const
- bool IsCompressed() const
- unsigned GetLevels() const
- int GetWidth() const
- int GetHeight() const
- int GetDepth() const
- TextureFilterMode GetFilterMode() const
- TextureAddressMode GetAddressMode(TextureCoordinate coord) const
- const Color& GetBorderColor() const
- bool GetSRGB() const
- Texture* GetBackupTexture() const
- int GetMipsToSkip(int quality) const
- int GetLevelWidth(unsigned level) const
- int GetLevelHeight(unsigned level) const
- int GetLevelDepth(unsigned level) const
- TextureUsage GetUsage() const
- unsigned GetDataSize(int width, int height) const
- unsigned GetDataSize(int width, int height, int depth) const
- unsigned GetRowDataSize(int width) const
- unsigned GetComponents() const

Properties:

- unsigned format (readonly)
- bool compressed (readonly)
- unsigned levels (readonly)
- int width (readonly)
- int height (readonly)
- int depth (readonly)
- TextureFilterMode filterMode
- const Color& borderColor
- bool sRGB
- Texture* backupTexture
- TextureUsage usage (readonly)
- unsigned components (readonly)

<a name="Class_Texture2D"></a>
### Texture2D : Texture
- Texture2D()

Methods:

- bool SetSize(int width, int height, unsigned format, TextureUsage usage = TEXTURE_STATIC)
- bool SetData(unsigned level, int x, int y, int width, int height, const void* data)
- RenderSurface* GetRenderSurface() const

Properties:

- RenderSurface* renderSurface (readonly)

<a name="Class_Texture2DArray"></a>
### Texture2DArray : Texture
- Texture2DArray()

Methods:

- void SetLayers(unsigned layers)
- bool SetSize(unsigned layers, int width, int height, unsigned format, TextureUsage usage = TEXTURE_STATIC)
- bool SetData(unsigned layer, unsigned level, int x, int y, int width, int height, const void* data)
- unsigned GetLayers() const
- RenderSurface* GetRenderSurface() const

Properties:

- unsigned layers
- RenderSurface* renderSurface (readonly)

<a name="Class_Texture3D"></a>
### Texture3D : Texture
- Texture3D()

Methods:

- bool SetSize(int width, int height, int depth, unsigned format, TextureUsage usage = TEXTURE_STATIC)
- bool SetData(unsigned level, int x, int y, int z, int width, int height, int depth, const void* data)

<a name="Class_TextureCube"></a>
### TextureCube : Texture
- TextureCube()

Methods:

- bool SetSize(int size, unsigned format, TextureUsage usage = TEXTURE_STATIC)
- bool SetData(CubeMapFace face, unsigned level, int x, int y, int width, int height, const void* data)
- RenderSurface* GetRenderSurface(CubeMapFace face) const

<a name="Class_TextureFrame"></a>
### TextureFrame
- TextureFrame()

Fields:

- Vector2 uv
- float time

<a name="Class_Tile2D"></a>
### Tile2D : RefCounted
- Tile2D()

Methods:

- int GetGid() const
- Sprite2D* GetSprite() const
- bool HasProperty(const String& name) const
- const String& GetProperty(const String& name) const

Properties:

- int gid (readonly)
- Sprite2D* sprite (readonly)

<a name="Class_TileMap2D"></a>
### TileMap2D : Component
- TileMap2D()

Methods:

- void DrawDebugGeometry(DebugRenderer* debug, bool depthTest)
- void SetTmxFile(TmxFile2D* tmxFile)
- TmxFile2D* GetTmxFile() const
- const TileMapInfo2D& GetInfo() const
- unsigned GetNumLayers() const
- TileMapLayer2D* GetLayer(unsigned index) const
- Vector2 TileIndexToPosition(int x, int y) const
- tuple<bool success, int x, int y> PositionToTileIndex(const TileMap2D* self, const Vector2& position)

Properties:

- TmxFile2D* tmxFile
- const TileMapInfo2D& info (readonly)
- unsigned numLayers (readonly)

<a name="Class_TileMapInfo2D"></a>
### TileMapInfo2D
Methods:

- float GetMapWidth() const
- float GetMapHeight() const
- Vector2 ConvertPosition(const Vector2& position) const
- Vector2 TileIndexToPosition(int x, int y) const
- bool PositionToTileIndex(int& x, int& y, const Vector2& positon) const

Properties:

- float mapWidth (readonly)
- float mapHeight (readonly)

Fields:

- Orientation2D orientation
- int width
- int height
- float tileWidth
- float tileHeight

<a name="Class_TileMapLayer2D"></a>
### TileMapLayer2D : Component
- TileMapLayer2D()

Methods:

- void SetDrawOrder(int drawOrder)
- void SetVisible(bool visible)
- TileMap2D* GetTileMap() const
- int GetDrawOrder() const
- bool IsVisible() const
- bool HasProperty(const String& name) const
- const String& GetProperty(const String& name) const
- TileMapLayerType2D GetLayerType() const
- int GetWidth() const
- int GetHeight() const
- Node* GetTileNode(int x, int y) const
- Tile2D* GetTile(int x, int y) const
- unsigned GetNumObjects() const
- TileMapObject2D* GetObject(unsigned index) const
- Node* GetObjectNode(unsigned index) const
- Node* GetImageNode() const

Properties:

- TileMap2D* tileMap (readonly)
- int drawOrder
- bool visible
- TileMapLayerType2D layerType (readonly)
- int width (readonly)
- int height (readonly)
- unsigned numObjects (readonly)
- Node* imageNode (readonly)

<a name="Class_TileMapObject2D"></a>
### TileMapObject2D : RefCounted
- TileMapObject2D()

Methods:

- TileMapObjectType2D GetObjectType() const
- const String& GetName() const
- const String& GetType() const
- const Vector2& GetPosition() const
- const Vector2& GetSize() const
- unsigned GetNumPoints() const
- const Vector2& GetPoint(unsigned index) const
- int GetTileGid() const
- Sprite2D* GetTileSprite() const
- bool HasProperty(const String& name) const
- const String& GetProperty(const String& name) const

Properties:

- TileMapObjectType2D objectType (readonly)
- const String& name (readonly)
- const String& type (readonly)
- const Vector2& position (readonly)
- const Vector2& size (readonly)
- unsigned numPoints (readonly)
- int tileGid (readonly)
- Sprite2D* tileSprite (readonly)

<a name="Class_Time"></a>
### Time : Object
Methods:

- unsigned GetFrameNumber() const
- float GetTimeStep() const
- unsigned GetTimerPeriod() const
- float GetElapsedTime()

Properties:

- unsigned frameNumber (readonly)
- float timeStep (readonly)
- unsigned timerPeriod (readonly)
- float elapsedTime (readonly)

<a name="Class_TmxFile2D"></a>
### TmxFile2D : Resource
- TmxFile2D()

<a name="Class_ToolTip"></a>
### ToolTip : UIElement
- ToolTip()

Methods:

- void SetDelay(float delay)
- float GetDelay() const

Properties:

- float delay

<a name="Class_TouchState"></a>
### TouchState
Methods:

- SharedPtr<UIElement> GetTouchedElement()

Properties:

- UIElement* touchedElement (readonly)

Fields:

- int touchID
- IntVector2 position
- IntVector2 lastPosition
- IntVector2 delta
- float pressure

<a name="Class_UI"></a>
### UI : Object
Methods:

- void SetCursor(Cursor* cursor)
- void SetFocusElement(UIElement* element, bool byKey = false)
- bool SetModalElement(UIElement* modalElement, bool enable)
- void Clear()
- void DebugDraw(UIElement* element)
- SharedPtr<UIElement> LoadLayout(const String& fileName, XMLFile* styleFile = 0)
- SharedPtr<UIElement> LoadLayout(XMLFile* file, XMLFile* styleFile = 0)
- bool SaveLayout(const String& fileName, UIElement* element)
- void SetClipboardText(const String& text)
- void SetDoubleClickInterval(float interval)
- void SetDragBeginInterval(float interval)
- void SetDragBeginDistance(int pixels)
- void SetDefaultToolTipDelay(float delay)
- void SetMaxFontTextureSize(int size)
- void SetNonFocusedMouseWheel(bool nonFocusedMouseWheel)
- void SetUseSystemClipboard(bool enable)
- void SetUseScreenKeyboard(bool enable)
- void SetUseMutableGlyphs(bool enable)
- void SetForceAutoHint(bool enable)
- void SetScale(float scale)
- void SetWidth(float size)
- void SetHeight(float size)
- SharedPtr<UIElement> GetRoot() const
- SharedPtr<UIElement> GetRootModalElement() const
- Cursor* GetCursor() const
- IntVector2 GetCursorPosition() const
- SharedPtr<UIElement> GetFocusElement() const
- SharedPtr<UIElement> GetFrontElement() const
- unsigned GetNumDragElements() const
- SharedPtr<UIElement> GetDragElement(unsigned index)
- const String& GetClipboardText() const
- float GetDoubleClickInterval() const
- float GetDragBeginInterval() const
- int GetDragBeginDistance() const
- float GetDefaultToolTipDelay() const
- int GetMaxFontTextureSize() const
- bool IsNonFocusedMouseWheel() const
- bool GetUseSystemClipboard() const
- bool GetUseScreenKeyboard() const
- bool GetUseMutableGlyphs() const
- bool GetForceAutoHint() const
- bool HasModalElement() const
- bool IsDragging() const
- float GetScale() const

Properties:

- SharedPtr<UIElement> root (readonly)
- SharedPtr<UIElement> rootModalElement (readonly)
- Cursor* cursor
- IntVector2 cursorPosition (readonly)
- SharedPtr<UIElement> focusElement (readonly)
- SharedPtr<UIElement> frontElement (readonly)
- unsigned numDragElements (readonly)
- const String& clipboardText
- float doubleClickInterval
- float dragBeginInterval
- int dragBeginDistance
- float defaultToolTipDelay
- int maxFontTextureSize
- bool nonFocusedMouseWheel
- bool useSystemClipboard
- bool useScreenKeyboard
- bool useMutableGlyphs
- bool forceAutoHint
- bool hasModalElement (readonly)
- bool dragging (readonly)
- float scale

<a name="Class_UIElement"></a>
### UIElement : Animatable
- UIElement()

Methods:

- IntVector2 ScreenToElement(const IntVector2& screenPosition)
- IntVector2 ElementToScreen(const IntVector2& position)
- bool LoadXML(const String& fileName)
- bool SaveXML(const String& fileName, const String& indentation = "\t") const
- void SetName(const String& name)
- void SetPosition(const IntVector2& position)
- void SetPosition(int x, int y)
- void SetSize(const IntVector2& size)
- void SetSize(int width, int height)
- void SetWidth(int width)
- void SetHeight(int height)
- void SetMinSize(const IntVector2& minSize)
- void SetMinSize(int width, int height)
- void SetMinWidth(int width)
- void SetMinHeight(int height)
- void SetMaxSize(const IntVector2& maxSize)
- void SetMaxSize(int width, int height)
- void SetMaxWidth(int width)
- void SetMaxHeight(int height)
- void SetFixedSize(const IntVector2& size)
- void SetFixedSize(int width, int height)
- void SetFixedWidth(int width)
- void SetFixedHeight(int height)
- void SetAlignment(HorizontalAlignment hAlign, VerticalAlignment vAlign)
- void SetHorizontalAlignment(HorizontalAlignment align)
- void SetVerticalAlignment(VerticalAlignment align)
- void SetClipBorder(const IntRect& rect)
- void SetColor(const Color& color)
- void SetColor(Corner corner, const Color& color)
- void SetPriority(int priority)
- void SetOpacity(float opacity)
- void SetBringToFront(bool enable)
- void SetBringToBack(bool enable)
- void SetClipChildren(bool enable)
- void SetSortChildren(bool enable)
- void SetUseDerivedOpacity(bool enable)
- void SetEnabled(bool enable)
- void SetDeepEnabled(bool enable)
- void ResetDeepEnabled()
- void SetEnabledRecursive(bool enable)
- void SetEditable(bool enable)
- void SetFocus(bool enable)
- void SetSelected(bool enable)
- void SetVisible(bool enable)
- void SetFocusMode(FocusMode mode)
- void SetDragDropMode(unsigned mode)
- bool SetStyle(const String& styleName, XMLFile* file = 0)
- bool SetStyle(const XMLElement& element)
- bool SetStyleAuto(XMLFile* file = 0)
- void SetDefaultStyle(XMLFile* style)
- void SetLayout(LayoutMode mode, int spacing = 0, const IntRect& border = IntRect::ZERO)
- void SetLayoutMode(LayoutMode mode)
- void SetLayoutSpacing(int spacing)
- void SetLayoutBorder(const IntRect& border)
- void SetLayoutFlexScale(const Vector2& scale)
- void SetIndent(int indent)
- void SetIndentSpacing(int indentSpacing)
- void UpdateLayout()
- void DisableLayoutUpdate()
- void EnableLayoutUpdate()
- void BringToFront()
- SharedPtr<UIElement> CreateChild(StringHash type, const String& name = String::EMPTY, unsigned index = M_MAX_UNSIGNED)
- void AddChild(UIElement* element)
- void InsertChild(unsigned index, UIElement* element)
- void RemoveChild(UIElement* element, unsigned index = 0)
- void RemoveChildAtIndex(unsigned index)
- void RemoveAllChildren()
- void Remove()
- unsigned FindChild(UIElement* element) const
- void SetParent(UIElement* parent, unsigned index = M_MAX_UNSIGNED)
- void SetVar(StringHash key, const Variant& value)
- void SetInternal(bool enable)
- void SetTraversalMode(TraversalMode traversalMode)
- void SetElementEventSender(bool flag)
- void SetTags(const StringVector& tags)
- void AddTag(const String& tag)
- void AddTags(const String& tags, char separator = ';')
- void AddTags(const StringVector& tags)
- bool RemoveTag(const String& tag)
- void RemoveAllTags()
- const String& GetName() const
- const IntVector2& GetPosition() const
- const IntVector2& GetSize() const
- int GetWidth() const
- int GetHeight() const
- const IntVector2& GetMinSize() const
- int GetMinWidth() const
- int GetMinHeight() const
- const IntVector2& GetMaxSize() const
- int GetMaxWidth() const
- int GetMaxHeight() const
- bool IsFixedSize() const
- bool IsFixedWidth() const
- bool IsFixedHeight() const
- const IntVector2& GetChildOffset() const
- HorizontalAlignment GetHorizontalAlignment() const
- VerticalAlignment GetVerticalAlignment() const
- const IntRect& GetClipBorder() const
- const Color& GetColor() const
- const Color& GetColor(Corner corner) const
- int GetPriority() const
- float GetOpacity() const
- float GetDerivedOpacity() const
- bool GetBringToFront() const
- bool GetBringToBack() const
- bool GetClipChildren() const
- bool GetSortChildren() const
- bool GetUseDerivedOpacity() const
- bool HasFocus() const
- bool IsEnabled() const
- bool IsEnabledSelf() const
- bool IsEditable() const
- bool IsSelected() const
- bool IsVisible() const
- bool IsVisibleEffective() const
- bool IsHovering() const
- bool IsInternal() const
- bool HasColorGradient() const
- FocusMode GetFocusMode() const
- unsigned GetDragDropMode() const
- const String& GetAppliedStyle() const
- XMLFile* GetDefaultStyle(bool recursiveUp = true) const
- LayoutMode GetLayoutMode() const
- int GetLayoutSpacing() const
- const IntRect& GetLayoutBorder() const
- const Vector2& GetLayoutFlexScale() const
- unsigned GetNumChildren(bool recursive = false) const
- UIElement* GetChild(unsigned index) const
- SharedPtr<UIElement> GetChild(const String& name, bool recursive = false) const
- SharedPtr<UIElement> GetChild(const StringHash& key, const Variant& value = Variant::EMPTY, bool recursive = false) const
- PODVector<UIElement*> GetChildren(const UIElement* self, bool recursive = false)
- UIElement* GetParent() const
- UIElement* GetRoot() const
- const Color& GetDerivedColor() const
- const Variant& GetVar(const StringHash& key) const
- const VariantMap& GetVars() const
- bool HasTag(const String& tag) const
- const StringVector& GetTags() const
- PODVector<UIElement*> GetChildrenWithTag(const char* tag, bool recursive = false) const
- int GetDragButtonCombo() const
- unsigned GetDragButtonCount() const
- bool IsInside(IntVector2 position, bool isScreen)
- bool IsInsideCombined(IntVector2 position, bool isScreen)
- IntRect GetCombinedScreenRect()
- void SortChildren()
- int GetLayoutElementMaxSize() const
- int GetIndent() const
- int GetIndentSpacing() const
- int GetIndentWidth() const

Properties:

- const IntVector2& screenPosition (readonly)
- const String& name
- const IntVector2& position
- const IntVector2& size
- int width
- int height
- const IntVector2& minSize
- int minWidth
- int minHeight
- const IntVector2& maxSize
- int maxWidth
- int maxHeight
- bool fixedSize
- bool fixedWidth
- bool fixedHeight
- const IntVector2& childOffset
- HorizontalAlignment horizontalAlignment
- VerticalAlignment verticalAlignment
- const IntRect& clipBorder
- int priority
- Color color
- float opacity
- float derivedOpacity (readonly)
- bool bringToFront
- bool bringToBack
- bool clipChildren
- bool sortChildren
- bool useDerivedOpacity
- bool enabled
- bool enabledSelf (readonly)
- bool editable
- bool selected
- bool visible
- bool visibleEffective (readonly)
- bool hovering
- bool internal
- FocusMode focusMode
- unsigned dragDropMode
- const String& appliedStyle (readonly)
- XMLFile* defaultStyle
- LayoutMode layoutMode
- int layoutSpacing
- const IntRect& layoutBorder
- const Vector2& layoutFlexScale
- UIElement* parent (readonly)
- UIElement* root (readonly)
- const Color& derivedColor (readonly)
- int dragButtonCombo (readonly)
- unsigned dragButtonCount (readonly)
- IntRect combinedScreenRect (readonly)
- int layoutElementMaxSize (readonly)
- int indent
- int indentSpacing
- int indentWidth (readonly)

<a name="Class_ValueAnimation"></a>
### ValueAnimation : Resource
- ValueAnimation()

Methods:

- void SetInterpolationMethod(InterpMethod method)
- void SetSplineTension(float tension)
- void SetValueType(VariantType valueType)
- bool SetKeyFrame(float time, const Variant& value)
- void SetEventFrame(float time, const StringHash& eventType, const VariantMap& eventData = VariantMap())
- bool IsValid() const
- InterpMethod GetInterpolationMethod() const
- float GetSplineTension() const
- VariantType GetValueType() const
- float GetBeginTime() const
- float GetEndTime() const
- Variant GetAnimationValue(float scaledTime)
- bool HasEventFrames() const

Properties:

- bool valid (readonly)
- InterpMethod interpolationMethod
- float splineTension
- VariantType valueType

<a name="Class_Variant"></a>
### Variant
- Variant(const StringHash& value)
- Variant(bool value)
- Variant(float value)
- Variant(double value)
- Variant(const Vector2& value)
- Variant(const Vector3& value)
- Variant(const Vector4& value)
- Variant(const Quaternion& value)
- Variant(const Color& value)
- Variant(const String& value)
- Variant(const ResourceRef& value)
- Variant(const ResourceRefList& value)
- Variant(const VariantVector& value)
- Variant(const VariantMap& value)
- Variant(const StringVector& value)
- Variant(const IntRect& value)
- Variant(const IntVector2& value)
- Variant(RefCounted* value)
- Variant(const Matrix3& value)
- Variant(const Matrix3x4& value)
- Variant(const Matrix4& value)

Methods:

- void Clear()
- bool ==(const Variant& rhs) const
- int GetInt() const
- unsigned GetUInt() const
- StringHash GetStringHash() const
- bool GetBool() const
- float GetFloat() const
- double GetDouble() const
- const Vector2& GetVector2() const
- const Vector3& GetVector3() const
- const Vector4& GetVector4() const
- const Quaternion& GetQuaternion() const
- const Color& GetColor() const
- const String& GetString() const
- const PODVector<unsigned char>& GetRawBuffer() const
- VectorBuffer GetBuffer() const
- void* GetVoidPtr() const
- const ResourceRef& GetResourceRef() const
- const ResourceRefList& GetResourceRefList() const
- const VariantVector& GetVariantVector() const
- const StringVector& GetStringVector() const
- const VariantMap& GetVariantMap() const
- const IntRect& GetIntRect() const
- const IntVector2& GetIntVector2() const
- SharedPtr<RefCounted> GetPtr() const
- const Matrix3& GetMatrix3() const
- const Matrix3x4& GetMatrix3x4() const
- const Matrix4& GetMatrix4() const
- VariantType GetType() const
- String GetTypeName() const
- String ToString() const
- bool IsZero() const
- bool IsEmpty() const

Properties:

- VariantType type (readonly)
- String typeName (readonly)
- bool zero (readonly)
- bool empty (readonly)

<a name="Class_VariantMap"></a>
### VariantMap
- VariantMap()

Methods:

- const Variant& __index(StringHash key)
- void __newindex(StringHash key, const Variant& value)

<a name="Class_Vector2"></a>
### Vector2
- Vector2()
- Vector2(const Vector2& vector)
- Vector2(float x, float y)

Methods:

- bool operator==(const Vector2& rhs) const
- Vector2 operator+(const Vector2& rhs) const
- Vector2 operator-() const
- Vector2 operator-(const Vector2& rhs) const
- Vector2 operator*(float rhs) const
- Vector2 operator*(const Vector2& rhs) const
- Vector2 operator/(float rhs) const
- Vector2 operator/(const Vector2& rhs) const
- void Normalize()
- float Length() const
- float lenSquared = LengthSquared()
- float DotProduct(const Vector2& rhs) const
- float AbsDotProduct(const Vector2& rhs) const
- float Angle(const Vector2& rhs) const
- Vector2 Abs() const
- Vector2 Lerp(const Vector2& rhs, float t) const
- bool Equals(const Vector2& rhs) const
- bool IsNaN() const
- Vector2 Normalized() const
- String ToString() const

Fields:

- float x
- float y

StaticConstants:

- Vector2 ZERO
- Vector2 LEFT
- Vector2 RIGHT
- Vector2 UP
- Vector2 DOWN
- Vector2 ONE

<a name="Class_Vector3"></a>
### Vector3
- Vector3()
- Vector3(const Vector3& vector)
- Vector3(const Vector2& vector, float z)
- Vector3(const Vector2& vector)
- Vector3(float x, float y, float z)
- Vector3(float x, float y)

Methods:

- bool operator==(const Vector3& rhs) const
- Vector3 operator+(const Vector3&) const
- Vector3 operator-() const
- Vector3 operator-(const Vector3&) const
- Vector3 operator*(float) const
- Vector3 operator*(const Vector3&) const
- Vector3 operator/(float) const
- Vector3 operator/(const Vector3&) const
- void Normalize()
- float Length() const
- float lenSquared = LengthSquared()
- float DotProduct(const Vector3& rhs) const
- float AbsDotProduct(const Vector3& rhs) const
- Vector3 CrossProduct(const Vector3& rhs) const
- Vector3 Abs() const
- Vector3 Lerp(const Vector3& rhs, float t) const
- bool Equals(const Vector3& rhs) const
- float Angle(const Vector3& rhs) const
- bool IsNaN() const
- Vector3 Normalized() const
- String ToString() const

Fields:

- float x
- float y
- float z

StaticConstants:

- Vector3 ZERO
- Vector3 LEFT
- Vector3 RIGHT
- Vector3 UP
- Vector3 DOWN
- Vector3 FORWARD
- Vector3 BACK
- Vector3 ONE

<a name="Class_Vector4"></a>
### Vector4
- Vector4()
- Vector4(const Vector4& vector)
- Vector4(const Vector3& vector, float w)
- Vector4(float x, float y, float z, float w)

Methods:

- bool operator==(const Vector4& rhs) const
- Vector4 operator+(const Vector4& rhs) const
- Vector4 operator-() const
- Vector4 operator-(const Vector4& rhs) const
- Vector4 operator*(float rhs) const
- Vector4 operator*(const Vector4& rhs) const
- Vector4 operator/(float rhs) const
- Vector4 operator/(const Vector4& rhs) const
- float DotProduct(const Vector4& rhs) const
- float AbsDotProduct(const Vector4& rhs) const
- Vector4 Abs() const
- Vector4 Lerp(const Vector4& rhs, float t) const
- bool Equals(const Vector4& rhs) const
- bool IsNaN() const
- String ToString() const

Fields:

- float x
- float y
- float z
- float w

StaticConstants:

- Vector4 ZERO
- Vector4 ONE

<a name="Class_VectorBuffer"></a>
### VectorBuffer : MultipleBase<Deserializer, Serializer>
- VectorBuffer()

Methods:

- void SetData(const PODVector<unsigned char>& data)
- void Clear()
- void Resize(unsigned size)
- const unsigned char* GetData() const
- unsigned char* GetModifiableData()

<a name="Class_VertexBuffer"></a>
### VertexBuffer : GPUObject
- VertexBuffer(bool forceHeadless = false)

Methods:

- void SetShadowed(bool enable)
- bool SetSize(unsigned vertexCount, const PODVector<VertexElement>& elements, bool dynamic = false)
- bool SetSize(unsigned vertexCount, unsigned elementMask, bool dynamic = false)
- bool SetData(VectorBuffer& src)
- VectorBuffer GetData()
- bool SetDataRange(const void* data, unsigned start, unsigned count, bool discard = false)
- bool IsShadowed() const
- bool IsDynamic() const
- unsigned GetVertexCount() const
- unsigned GetVertexSize() const
- const VertexElement* GetElement(VertexElementSemantic semantic, unsigned char index = 0) const
- const VertexElement* GetElement(VertexElementType type, VertexElementSemantic semantic, unsigned char index = 0) const
- bool HasElement(VertexElementSemantic semantic, unsigned char index = 0) const
- bool HasElement(VertexElementType type, VertexElementSemantic semantic, unsigned char index = 0) const
- unsigned GetElementMask() const

Properties:

- bool shadowed
- bool dynamic (readonly)
- unsigned vertexCount (readonly)
- unsigned vertexSize (readonly)
- unsigned elementMask (readonly)

<a name="Class_VertexElement"></a>
### VertexElement
- VertexElement()
- VertexElement(VertexElementType type, VertexElementSemantic semantic, unsigned char index = 0, bool perInstance = false)

Methods:

- bool ==(const VertexElement& rhs) const

Fields:

- VertexElementType type
-  VertexElementSemantic semantic
-  unsigned char index
-  bool perInstance
- unsigned offset

<a name="Class_View3D"></a>
### View3D : Window
- View3D()

Methods:

- void SetView(Scene* scene, Camera* camera, bool ownScene = true)
- void SetFormat(unsigned format)
- void SetAutoUpdate(bool enable)
- void QueueUpdate()
- unsigned GetFormat() const
- bool GetAutoUpdate() const
- Scene* GetScene() const
- Node* GetCameraNode() const
- Texture2D* GetRenderTexture() const
- Texture2D* GetDepthTexture() const
- Viewport* GetViewport() const

Properties:

- unsigned format
- bool autoUpdate

<a name="Class_Viewport"></a>
### Viewport : Object
- Viewport()
- Viewport(Scene* scene, Camera* camera, RenderPath* renderPath = 0)
- Viewport(Scene* scene, Camera* camera, const IntRect& rect, RenderPath* renderPath = 0)

Methods:

- void SetScene(Scene* scene)
- void SetCamera(Camera* camera)
- void SetRect(const IntRect& rect)
- void SetRenderPath(RenderPath* renderPath)
- void SetRenderPath(XMLFile* file)
- void SetDrawDebug(bool enable)
- void SetCullCamera(Camera* camera)
- Scene* GetScene() const
- Camera* GetCamera() const
- const IntRect& GetRect() const
- RenderPath* GetRenderPath() const
- bool GetDrawDebug() const
- Camera* GetCullCamera() const
- Ray GetScreenRay(int x, int y) const
- IntVector2 WorldToScreenPoint(const Vector3& worldPos) const
- Vector3 ScreenToWorldPoint(int x, int y, float depth) const

Properties:

- Scene* scene
- Camera* camera
- const IntRect& rect
- RenderPath* renderPath
- bool drawDebug
- Camera* cullCamera

<a name="Class_Window"></a>
### Window : BorderImage
- Window()

Methods:

- void SetMovable(bool enable)
- void SetResizable(bool enable)
- void SetFixedWidthResizing(bool enable)
- void SetFixedHeightResizing(bool enable)
- void SetResizeBorder(const IntRect& rect)
- void SetModal(bool modal)
- void SetModalShadeColor(const Color& color)
- void SetModalFrameColor(const Color& color)
- void SetModalFrameSize(const IntVector2& size)
- void SetModalAutoDismiss(bool enable)
- bool IsMovable() const
- bool IsResizable() const
- bool GetFixedWidthResizing() const
- bool GetFixedHeightResizing() const
- const IntRect& GetResizeBorder() const
- bool IsModal() const
- const Color& GetModalShadeColor() const
- const Color& GetModalFrameColor() const
- const IntVector2& GetModalFrameSize() const
- bool GetModalAutoDismiss() const

Properties:

- bool movable
- bool resizable
- bool fixedWidthResizing
- bool fixedHeightResizing
- const IntRect& resizeBorder
- bool modal
- const Color& modalShadeColor
- const Color& modalFrameColor
- const IntVector2& modalFrameSize
- bool modalAutoDismiss

<a name="Class_XMLElement"></a>
### XMLElement
- XMLElement()
- XMLElement(const XMLElement& element)

Methods:

- XMLElement CreateChild(const String& name)
- bool RemoveChild(const XMLElement& element)
- bool RemoveChild(const String& name)
- bool RemoveChildren(const String& name = String::EMPTY)
- bool RemoveAttribute(const String& name = String::EMPTY)
- XMLElement SelectSinglePrepared(const XPathQuery& query) const
- XPathResultSet SelectPrepared(const XPathQuery& query) const
- bool SetValue(const String& value)
- bool SetAttribute(const String& name, const String& value)
- bool SetAttribute(const String& value)
- bool SetBool(const String& name, bool value)
- bool SetBoundingBox(const BoundingBox& value)
- bool SetColor(const String& name, const Color& value)
- bool SetFloat(const String& name, float value)
- bool SetDouble(const String& name, double value)
- bool SetUInt(const String& name, unsigned value)
- bool SetInt(const String& name, int value)
- bool SetIntRect(const String& name, const IntRect& value)
- bool SetIntVector2(const String& name, const IntVector2& value)
- bool SetRect(const String& name, const Rect& value)
- bool SetQuaternion(const String& name, const Quaternion& value)
- bool SetString(const String& name, const String& value)
- bool SetVariant(const Variant& value)
- bool SetVariantValue(const Variant& value)
- bool SetResourceRef(const ResourceRef& value)
- bool SetResourceRefList(const ResourceRefList& value)
- bool SetVariantVector(const VariantVector& value)
- bool SetStringVector(const StringVector& value)
- bool SetVariantMap(const VariantMap& value)
- bool SetVector2(const String& name, const Vector2& value)
- bool SetVector3(const String& name, const Vector3& value)
- bool SetVector4(const String& name, const Vector4& value)
- bool SetVectorVariant(const String& name, const Variant& value)
- bool SetMatrix3(const String& name, const Matrix3& value)
- bool SetMatrix3x4(const String& name, const Matrix3x4& value)
- bool SetMatrix4(const String& name, const Matrix4& value)
- bool IsNull() const
- bool NotNull() const
- String GetName() const
- bool HasChild(const String& name) const
- XMLElement GetChild(const String& name = String::EMPTY) const
- XMLElement GetNext(const String& name = String::EMPTY) const
- XMLElement GetParent() const
- unsigned GetNumAttributes() const
- bool HasAttribute(const String& name) const
- String GetValue() const
- String GetAttribute(const String& name = String::EMPTY) const
- String GetAttributeLower(const String& name) const
- String GetAttributeUpper(const String& name) const
- Vector<String> GetAttributeNames() const
- bool GetBool(const String& name) const
- BoundingBox GetBoundingBox() const
- Color GetColor(const String& name) const
- float GetFloat(const String& name) const
- double GetDouble(const String& name) const
- unsigned GetUInt(const String& name) const
- int GetInt(const String& name) const
- IntRect GetIntRect(const String& name) const
- IntVector2 GetIntVector2(const String& name) const
- Rect GetRect(const String& name) const
- Quaternion GetQuaternion(const String& name) const
- Variant GetVariant() const
- Variant GetVariantValue(VariantType type) const
- ResourceRef GetResourceRef() const
- ResourceRefList GetResourceRefList() const
- VariantVector GetVariantVector() const
- StringVector GetStringVector() const
- VariantMap GetVariantMap() const
- Vector2 GetVector2(const String& name) const
- Vector3 GetVector3(const String& name) const
- Vector4 GetVector4(const String& name) const
- Vector4 GetVector(const String& name) const
- Variant GetVectorVariant(const String& name) const
- Matrix3 GetMatrix3(const String& name) const
- Matrix3x4 GetMatrix3x4(const String& name) const
- Matrix4 GetMatrix4(const String& name) const
- XMLFile* GetFile() const

Properties:

- bool null (readonly)
- String name (readonly)
- XMLElement parent (readonly)
- unsigned numAttributes (readonly)
- String value (readonly)

StaticConstants:

- XMLElement EMPTY

<a name="Class_XMLFile"></a>
### XMLFile : Resource
- XMLFile()

Methods:

- bool FromString(const String& source)
- XMLElement CreateRoot(const String& name)
- XMLElement GetRoot(const String& name = String::EMPTY)
- String ToString(const String& indentation = "\t") const
- void Patch(XMLFile* patchFile)
- void Patch(XMLElement patchElement)

<a name="Class_XPathQuery"></a>
### XPathQuery
- XPathQuery()
- XPathQuery(const String& queryString, const String& variableString = String::EMPTY)

Methods:

- void Bind()
- bool SetVariable(const String& name, bool value)
- bool SetVariable(const String& name, float value)
- bool SetVariable(const String& name, const String& value)
- bool SetVariable(const String& name, const XPathResultSet& value)
- bool SetQuery(const String& queryString, const String& variableString = String::EMPTY, bool bind = true)
- void Clear()
- bool EvaluateToBool(XMLElement element) const
- float EvaluateToFloat(XMLElement element) const
- String EvaluateToString(XMLElement element) const
- XPathResultSet Evaluate(XMLElement element) const
- String GetQuery() const

Properties:

- String query (readonly)

<a name="Class_XPathResultSet"></a>
### XPathResultSet
- XPathResultSet()
- XPathResultSet(const XPathResultSet& rhs)

Methods:

- XMLElement operator [](unsigned index) const
- XMLElement FirstResult()
- unsigned Size() const
- bool Empty() const

<a name="Class_Zone"></a>
### Zone : Drawable
- Zone()

Methods:

- void SetBoundingBox(const BoundingBox& box)
- void SetAmbientColor(const Color& color)
- void SetFogColor(const Color& color)
- void SetFogStart(float start)
- void SetFogEnd(float end)
- void SetFogHeight(float height)
- void SetFogHeightScale(float scale)
- void SetPriority(int priority)
- void SetHeightFog(bool enable)
- void SetOverride(bool enable)
- void SetAmbientGradient(bool enable)
- void SetZoneTexture(Texture* texture)
- const Matrix3x4& GetInverseWorldTransform() const
- const Color& GetAmbientColor() const
- const Color& GetAmbientStartColor()
- const Color& GetAmbientEndColor()
- const Color& GetFogColor() const
- float GetFogStart() const
- float GetFogEnd() const
- float GetFogHeight() const
- float GetFogHeightScale() const
- int GetPriority() const
- bool GetHeightFog() const
- bool GetOverride() const
- bool GetAmbientGradient() const
- Texture* GetZoneTexture() const
- bool IsInside(const Vector3& point) const

Properties:

- const Matrix3x4& inverseWorldTransform (readonly)
- const Color& ambientColor
- const Color& ambientStartColor (readonly)
- const Color& ambientEndColor (readonly)
- const Color& fogColor
- float fogStart
- float fogEnd
- float fogHeight
- float fogHeightScale
- int priority
- bool heightFog
- bool override
- bool ambientGradient
- Texture* zoneTexture
- void boundingBox (writeonly)


\section LuaScriptAPI_Enums Enumerations


### AnimationBlendMode

- int ABM_LERP
- int ABM_ADDITIVE

### AsyncLoadState

- int ASYNC_DONE
- int ASYNC_QUEUED
- int ASYNC_LOADING
- int ASYNC_SUCCESS
- int ASYNC_FAIL

### BlendMode

- int BLEND_REPLACE
- int BLEND_ADD
- int BLEND_MULTIPLY
- int BLEND_ALPHA
- int BLEND_ADDALPHA
- int BLEND_PREMULALPHA
- int BLEND_INVDESTALPHA
- int BLEND_SUBTRACT
- int BLEND_SUBTRACTALPHA
- int MAX_BLENDMODES

### BodyType2D

- int BT_STATIC
- int BT_KINEMATIC
- int BT_DYNAMIC

### CollisionEventMode

- int COLLISION_NEVER
- int COLLISION_ACTIVE
- int COLLISION_ALWAYS

### CompareMode

- int CMP_ALWAYS
- int CMP_EQUAL
- int CMP_NOTEQUAL
- int CMP_LESS
- int CMP_LESSEQUAL
- int CMP_GREATER
- int CMP_GREATEREQUAL
- int MAX_COMPAREMODES

### CompressedFormat

- int CF_NONE
- int CF_RGBA
- int CF_DXT1
- int CF_DXT3
- int CF_DXT5
- int CF_ETC1
- int CF_PVRTC_RGB_2BPP
- int CF_PVRTC_RGBA_2BPP
- int CF_PVRTC_RGB_4BPP
- int CF_PVRTC_RGBA_4BPP

### ConstraintType

- int CONSTRAINT_POINT
- int CONSTRAINT_HINGE
- int CONSTRAINT_SLIDER
- int CONSTRAINT_CONETWIST

### Corner

- int C_TOPLEFT
- int C_TOPRIGHT
- int C_BOTTOMLEFT
- int C_BOTTOMRIGHT
- int MAX_UIELEMENT_CORNERS

### CreateMode

- int REPLICATED
- int LOCAL

### CrowdAgentRequestedTarget

- int CA_REQUESTEDTARGET_NONE
- int CA_REQUESTEDTARGET_POSITION
- int CA_REQUESTEDTARGET_VELOCITY

### CrowdAgentState

- int CA_STATE_INVALID
- int CA_STATE_WALKING
- int CA_STATE_OFFMESH

### CrowdAgentTargetState

- int CA_TARGET_NONE
- int CA_TARGET_FAILED
- int CA_TARGET_VALID
- int CA_TARGET_REQUESTING
- int CA_TARGET_WAITINGFORQUEUE
- int CA_TARGET_WAITINGFORPATH
- int CA_TARGET_VELOCITY

### CubeMapFace

- int FACE_POSITIVE_X
- int FACE_NEGATIVE_X
- int FACE_POSITIVE_Y
- int FACE_NEGATIVE_Y
- int FACE_POSITIVE_Z
- int FACE_NEGATIVE_Z
- int MAX_CUBEMAP_FACES

### CubeMapLayout

- int CML_HORIZONTAL
- int CML_HORIZONTALNVIDIA
- int CML_HORIZONTALCROSS
- int CML_VERTICALCROSS
- int CML_BLENDER

### CullMode

- int CULL_NONE
- int CULL_CCW
- int CULL_CW
- int MAX_CULLMODES

### CursorShape

- int CS_NORMAL
- int CS_IBEAM
- int CS_CROSS
- int CS_RESIZEVERTICAL
- int CS_RESIZEDIAGONAL_TOPRIGHT
- int CS_RESIZEHORIZONTAL
- int CS_RESIZEDIAGONAL_TOPLEFT
- int CS_RESIZE_ALL
- int CS_ACCEPTDROP
- int CS_REJECTDROP
- int CS_BUSY
- int CS_BUSY_ARROW
- int CS_MAX_SHAPES

### DBAPI

- int DBAPI_SQLITE
- int DBAPI_ODBC

### EmitterType

- int EMITTER_SPHERE
- int EMITTER_BOX

### EmitterType2D

- int EMITTER_TYPE_GRAVITY
- int EMITTER_TYPE_RADIAL

### FaceCameraMode

- int FC_NONE
- int FC_ROTATE_XYZ
- int FC_ROTATE_Y
- int FC_LOOKAT_XYZ
- int FC_LOOKAT_Y
- int FC_DIRECTION

### FileMode

- int FILE_READ
- int FILE_WRITE
- int FILE_READWRITE

### FillMode

- int FILL_SOLID
- int FILL_WIREFRAME
- int FILL_POINT

### FocusMode

- int FM_NOTFOCUSABLE
- int FM_RESETFOCUS
- int FM_FOCUSABLE
- int FM_FOCUSABLE_DEFOCUSABLE

### FrustumPlane

- int PLANE_NEAR
- int PLANE_LEFT
- int PLANE_RIGHT
- int PLANE_UP
- int PLANE_DOWN
- int PLANE_FAR

### GeometryType

- int GEOM_STATIC
- int GEOM_SKINNED
- int GEOM_INSTANCED
- int GEOM_BILLBOARD
- int GEOM_DIRBILLBOARD
- int GEOM_TRAIL_FACE_CAMERA
- int GEOM_TRAIL_BONE
- int GEOM_STATIC_NOINSTANCING
- int MAX_GEOMETRYTYPES

### HighlightMode

- int HM_NEVER
- int HM_FOCUS
- int HM_ALWAYS

### HorizontalAlignment

- int HA_LEFT
- int HA_CENTER
- int HA_RIGHT

### HttpRequestState

- int HTTP_INITIALIZING
- int HTTP_ERROR
- int HTTP_OPEN
- int HTTP_CLOSED

### InterpMethod

- int IM_NONE
- int IM_LINEAR
- int IM_SPLINE

### InterpolationMode

- int BEZIER_CURVE
- int CATMULL_ROM_CURVE
- int LINEAR_CURVE
- int CATMULL_ROM_FULL_CURVE

### Intersection

- int OUTSIDE
- int INTERSECTS
- int INSIDE

### JSONNumberType

- int JSONNT_NAN
- int JSONNT_INT
- int JSONNT_UINT
- int JSONNT_FLOAT_DOUBLE

### JSONValueType

- int JSON_NULL
- int JSON_BOOL
- int JSON_NUMBER
- int JSON_STRING
- int JSON_ARRAY
- int JSON_OBJECT

### LayoutMode

- int LM_FREE
- int LM_HORIZONTAL
- int LM_VERTICAL

### LegacyVertexElement

- int ELEMENT_POSITION
- int ELEMENT_NORMAL
- int ELEMENT_COLOR
- int ELEMENT_TEXCOORD1
- int ELEMENT_TEXCOORD2
- int ELEMENT_CUBETEXCOORD1
- int ELEMENT_CUBETEXCOORD2
- int ELEMENT_TANGENT
- int ELEMENT_BLENDWEIGHTS
- int ELEMENT_BLENDINDICES
- int ELEMENT_INSTANCEMATRIX1
- int ELEMENT_INSTANCEMATRIX2
- int ELEMENT_INSTANCEMATRIX3
- int ELEMENT_OBJECTINDEX
- int MAX_LEGACY_VERTEX_ELEMENTS

### LightType

- int LIGHT_DIRECTIONAL
- int LIGHT_SPOT
- int LIGHT_POINT

### LoadMode

- int LOAD_RESOURCES_ONLY
- int LOAD_SCENE
- int LOAD_SCENE_AND_RESOURCES

### LockState

- int LOCK_NONE
- int LOCK_HARDWARE
- int LOCK_SHADOW
- int LOCK_SCRATCH

### LoopMode2D

- int LM_DEFAULT
- int LM_FORCE_LOOPED
- int LM_FORCE_CLAMPED

### MouseMode

- int MM_ABSOLUTE
- int MM_RELATIVE
- int MM_WRAP
- int MM_FREE
- int MM_INVALID

### NavigationPushiness

- int NAVIGATIONPUSHINESS_LOW
- int NAVIGATIONPUSHINESS_MEDIUM
- int NAVIGATIONPUSHINESS_HIGH

### NavigationQuality

- int NAVIGATIONQUALITY_LOW
- int NAVIGATIONQUALITY_MEDIUM
- int NAVIGATIONQUALITY_HIGH

### NavmeshPartitionType

- int NAVMESH_PARTITION_WATERSHED
- int NAVMESH_PARTITION_MONOTONE

### Orientation

- int O_HORIZONTAL
- int O_VERTICAL

### Orientation2D

- int O_ORTHOGONAL
- int O_ISOMETRIC
- int O_STAGGERED
- int O_HEXAGONAL

### PListValueType

- int PLVT_NONE
- int PLVT_INT
- int PLVT_BOOL
- int PLVT_FLOAT
- int PLVT_STRING
- int PLVT_VALUEMAP
- int PLVT_VALUEVECTOR

### PassLightingMode

- int LIGHTING_UNLIT
- int LIGHTING_PERVERTEX
- int LIGHTING_PERPIXEL

### PrimitiveType

- int TRIANGLE_LIST
- int LINE_LIST
- int POINT_LIST
- int TRIANGLE_STRIP
- int LINE_STRIP
- int TRIANGLE_FAN

### RayQueryLevel

- int RAY_AABB
- int RAY_OBB
- int RAY_TRIANGLE
- int RAY_TRIANGLE_UV

### RenderCommandSortMode

- int SORT_FRONTTOBACK
- int SORT_BACKTOFRONT

### RenderCommandType

- int CMD_NONE
- int CMD_CLEAR
- int CMD_SCENEPASS
- int CMD_QUAD
- int CMD_FORWARDLIGHTS
- int CMD_LIGHTVOLUMES
- int CMD_RENDERUI
- int CMD_SENDEVENT

### RenderSurfaceUpdateMode

- int SURFACE_MANUALUPDATE
- int SURFACE_UPDATEVISIBLE
- int SURFACE_UPDATEALWAYS

### RenderTargetSizeMode

- int SIZE_ABSOLUTE
- int SIZE_VIEWPORTDIVISOR
- int SIZE_VIEWPORTMULTIPLIER

### ResourceRequest

- int RESOURCE_CHECKEXISTS
- int RESOURCE_GETFILE

### ShaderType

- int VS
- int PS

### ShadowQuality

- int SHADOWQUALITY_SIMPLE_16BIT
- int SHADOWQUALITY_SIMPLE_24BIT
- int SHADOWQUALITY_PCF_16BIT
- int SHADOWQUALITY_PCF_24BIT
- int SHADOWQUALITY_VSM
- int SHADOWQUALITY_BLUR_VSM

### ShapeType

- int SHAPE_BOX
- int SHAPE_SPHERE
- int SHAPE_STATICPLANE
- int SHAPE_CYLINDER
- int SHAPE_CAPSULE
- int SHAPE_CONE
- int SHAPE_TRIANGLEMESH
- int SHAPE_CONVEXHULL
- int SHAPE_TERRAIN

### StencilOp

- int OP_KEEP
- int OP_ZERO
- int OP_REF
- int OP_INCR
- int OP_DECR

### TextEffect

- int TE_NONE
- int TE_SHADOW
- int TE_STROKE

### TextureAddressMode

- int ADDRESS_WRAP
- int ADDRESS_MIRROR
- int ADDRESS_CLAMP
- int ADDRESS_BORDER
- int MAX_ADDRESSMODES

### TextureCoordinate

- int COORD_U
- int COORD_V
- int COORD_W
- int MAX_COORDS

### TextureFilterMode

- int FILTER_NEAREST
- int FILTER_BILINEAR
- int FILTER_TRILINEAR
- int FILTER_ANISOTROPIC
- int FILTER_DEFAULT
- int MAX_FILTERMODES

### TextureUnit

- int TU_DIFFUSE
- int TU_ALBEDOBUFFER
- int TU_NORMAL
- int TU_NORMALBUFFER
- int TU_SPECULAR
- int TU_EMISSIVE
- int TU_ENVIRONMENT
- int TU_VOLUMEMAP
- int TU_CUSTOM1
- int TU_CUSTOM2
- int TU_LIGHTRAMP
- int TU_LIGHTSHAPE
- int TU_SHADOWMAP
- int TU_FACESELECT
- int TU_INDIRECTION
- int TU_DEPTHBUFFER
- int TU_LIGHTBUFFER
- int TU_ZONE
- int MAX_MATERIAL_TEXTURE_UNITS
- int MAX_TEXTURE_UNITS

### TextureUsage

- int TEXTURE_STATIC
- int TEXTURE_DYNAMIC
- int TEXTURE_RENDERTARGET
- int TEXTURE_DEPTHSTENCIL

### TileMapLayerType2D

- int LT_TILE_LAYER
- int LT_OBJECT_GROUP
- int LT_IMAGE_LAYER
- int LT_INVALID

### TileMapObjectType2D

- int OT_RECTANGLE
- int OT_ELLIPSE
- int OT_POLYGON
- int OT_POLYLINE
- int OT_TILE
- int OT_INVALID

### TrailType

- int TT_FACE_CAMERA
- int TT_BONE

### TransformSpace

- int TS_LOCAL
- int TS_PARENT
- int TS_WORLD

### TraversalMode

- int TM_BREADTH_FIRST
- int TM_DEPTH_FIRST

### VariantType

- int VAR_NONE
- int VAR_INT
- int VAR_BOOL
- int VAR_FLOAT
- int VAR_VECTOR2
- int VAR_VECTOR3
- int VAR_VECTOR4
- int VAR_QUATERNION
- int VAR_COLOR
- int VAR_STRING
- int VAR_BUFFER
- int VAR_VOIDPTR
- int VAR_RESOURCEREF
- int VAR_RESOURCEREFLIST
- int VAR_VARIANTVECTOR
- int VAR_VARIANTMAP
- int VAR_INTRECT
- int VAR_INTVECTOR2
- int VAR_PTR
- int VAR_MATRIX3
- int VAR_MATRIX3X4
- int VAR_MATRIX4
- int VAR_DOUBLE
- int VAR_STRINGVECTOR
- int MAX_VAR_TYPES

### VertexElementSemantic

- int SEM_POSITION
- int SEM_NORMAL
- int SEM_BINORMAL
- int SEM_TANGENT
- int SEM_TEXCOORD
- int SEM_COLOR
- int SEM_BLENDWEIGHTS
- int SEM_BLENDINDICES
- int SEM_OBJECTINDEX
- int MAX_VERTEX_ELEMENT_SEMANTICS

### VertexElementType

- int TYPE_INT
- int TYPE_FLOAT
- int TYPE_VECTOR2
- int TYPE_VECTOR3
- int TYPE_VECTOR4
- int TYPE_UBYTE4
- int TYPE_UBYTE4_NORM
- int MAX_VERTEX_ELEMENT_TYPES

### VerticalAlignment

- int VA_TOP
- int VA_CENTER
- int VA_BOTTOM

### WindowDragMode

- int DRAG_NONE
- int DRAG_MOVE
- int DRAG_RESIZE_TOPLEFT
- int DRAG_RESIZE_TOP
- int DRAG_RESIZE_TOPRIGHT
- int DRAG_RESIZE_RIGHT
- int DRAG_RESIZE_BOTTOMRIGHT
- int DRAG_RESIZE_BOTTOM
- int DRAG_RESIZE_BOTTOMLEFT
- int DRAG_RESIZE_LEFT

### WrapMode

- int WM_LOOP
- int WM_ONCE
- int WM_CLAMP

\section LuaScriptAPI_GlobalFunctions Global functions

- float Abs(float value)
- float Acos(float x)
- String AddTrailingSlash(const String& pathName)
- float Asin(float x)
- float Atan(float x)
- float Atan2(float y, float x)
- float Clamp(float value, float min, float max)
- VectorBuffer CompressVectorBuffer(VectorBuffer& src)
- float Cos(float angle)
- unsigned CountSetBits(unsigned value)
- VectorBuffer DecompressVectorBuffer(VectorBuffer& src)
- bool Equals(float lhs, float rhs)
- void ErrorDialog(const String& title, const String& message)
- Audio* GetAudio()
- ResourceCache* GetCache()
- Console* GetConsole()
- String GetConsoleInput()
- Context* GetContext()
- Database* GetDatabase()
- DebugHud* GetDebugHud()
- Engine* GetEngine()
- SharedPtr<Object> GetEventSender()
- bool GetExecuteConsoleCommands()
- String GetExtension(const String& fullPath, bool lowercaseExtension = true)
- String GetFileName(const String& fullPath)
- String GetFileNameAndExtension(const String& fullPath, bool lowercaseExtension = false)
- String GetFileSizeString(unsigned long long memorySize)
- FileSyste* GetFileSyste()
- Variant GetGlobalVar(const String& key)
- Graphics* GetGraphics()
- Input* GetInput()
- String GetInternalPath(const String& pathName)
- Localization* GetLocalization()
- Log* GetLog()
- String GetMiniDumpDir()
- String GetNativePath(const String& pathName)
- Network* GetNetwork()
- unsigned GetNumLogicalCPUs()
- unsigned GetNumPhysicalCPUs()
- String GetParentPath(const String& pathName)
- String GetPath(const String& fullPath)
- String GetPlatform()
- unsigned GetRandomSeed()
- Renderer* GetRenderer()
- Time* GetTime()
- UI* GetUI()
- bool HasSubscribedToEvent(Object* sender, StringHash eventType)
- bool HasSubscribedToEvent(StringHash eventType)
- bool IsAbsolutePath(const String& pathName)
- bool IsAlpha(unsigned ch)
- bool IsDigit(unsigned ch)
- bool IsNaN(float value)
- bool IsPowerOfTwo(unsigned value)
- float Lerp(float lhs, float rhs, float t)
- float Max(float lhs, float rhs)
- float Min(float lhs, float rhs)
- unsigned NextPowerOfTwo(unsigned value)
- void OpenConsoleWindow()
- int Rand()
- float RandStandardNormal()
- float Random(float min, float max)
- float Random(float range)
- int RandomInt(int range)
- int RandomInt(int min, int max)
- float RandomNormal(float meanValue, float variance)
- void RegisterEventName()
- String RemoveTrailingSlash(const String& pathName)
- String ReplaceExtension(const String& fullPath, const String& newExtension)
- unsigned SDBMHash(unsigned hash, unsigned char c)
- void SendEvent(StringHash eventType, VariantMap& eventData)
- void SetExecuteConsoleCommands(bool enable)
- void SetGlobalVar(const String& key, Variant value)
- void SetMiniDumpDir(const String& pathName)
- void SetRandomSeed(unsigned seed)
- float Sign(float value)
- float Sin(float angle)
- float SmoothStep(float lhs, float rhs, float t)
- void SubscribeToEvent(Object* sender, StringHash eventType, const kaguya::LuaFunction& function)
- void SubscribeToEvent(Object* sender, StringHash eventType, const String& functionName)
- void SubscribeToEvent(StringHash eventType, const String& functionName)
- void SubscribeToEvent(StringHash eventType, const kaguya::LuaFunction& function)
- float Tan(float angle)
- bool ToBool(const char* source)
- Color ToColor(const char* source)
- double ToDouble(const char* source)
- float ToFloat(const char* source)
- int ToInt(const char* source, int base = 10)
- IntRect ToIntRect(const char* source)
- IntVector2 ToIntVector2(const char* source)
- unsigned ToLower(unsigned ch)
- Matrix3 ToMatrix3(const char* source)
- Matrix3x4 ToMatrix3x4(const char* source)
- Matrix4 ToMatrix4(const char* source)
- Quaternion ToQuaternion(const char* source)
- Rect ToRect(const char* source)
- String ToStringHex(unsigned value)
- int ToUInt(const char* source, int base = 10)
- unsigned ToUpper(unsigned ch)
- Vector2 ToVector2(const char* source)
- Vector3 ToVector3(const char* source)
- Vector4 ToVector4(const char* source, bool allowMissingCoords)
- void UnsubscribeFromAllEvents()
- void UnsubscribeFromAllEventsExcept(const PODVector<StringHash>& exceptionTypes)
- void UnsubscribeFromEvent(StringHash eventType)
- void UnsubscribeFromEvent(Object* sender, StringHash eventType)
- void UnsubscribeFromEvents(Object* sender)
- const VariantMap& GetGlobalVars()
- const Vector<String>& GetArguments()
- void coroutine.sendevent(StringHash eventType)
- void coroutine.sleep(float time)
- void coroutine.start(LuaFunction function)
- void coroutine.waitevent(StringHash eventType)

\section LuaScriptAPI_GlobalProperties Global properties

- Audio* audio
- ResourceCache* cache
- Console* console
- Context* context
- Database* database
- DebugHud* debugHud
- Engine* engine
- FileSyste* fileSyste
- Graphics* graphics
- Input* input
- Localization* localization
- Log* log
- Network* network
- Renderer* renderer
- Time* time
- UI* ui
- float ANIMATION_LOD_BASESCALE (readonly)
- unsigned BONECOLLISION_BOX (readonly)
- unsigned BONECOLLISION_NONE (readonly)
- unsigned BONECOLLISION_SPHERE (readonly)
- unsigned char CHANNEL_POSITION (readonly)
- unsigned char CHANNEL_ROTATION (readonly)
- unsigned char CHANNEL_SCALE (readonly)
- unsigned CLEAR_COLOR (readonly)
- unsigned CLEAR_DEPTH (readonly)
- unsigned CLEAR_STENCIL (readonly)
- int CONTROLLER_AXIS_LEFTX (readonly)
- int CONTROLLER_AXIS_LEFTY (readonly)
- int CONTROLLER_AXIS_RIGHTX (readonly)
- int CONTROLLER_AXIS_RIGHTY (readonly)
- int CONTROLLER_AXIS_TRIGGERLEFT (readonly)
- int CONTROLLER_AXIS_TRIGGERRIGHT (readonly)
- int CONTROLLER_BUTTON_A (readonly)
- int CONTROLLER_BUTTON_B (readonly)
- int CONTROLLER_BUTTON_BACK (readonly)
- int CONTROLLER_BUTTON_DPAD_DOWN (readonly)
- int CONTROLLER_BUTTON_DPAD_LEFT (readonly)
- int CONTROLLER_BUTTON_DPAD_RIGHT (readonly)
- int CONTROLLER_BUTTON_DPAD_UP (readonly)
- int CONTROLLER_BUTTON_GUIDE (readonly)
- int CONTROLLER_BUTTON_LEFTSHOULDER (readonly)
- int CONTROLLER_BUTTON_LEFTSTICK (readonly)
- int CONTROLLER_BUTTON_RIGHTSHOULDER (readonly)
- int CONTROLLER_BUTTON_RIGHTSTICK (readonly)
- int CONTROLLER_BUTTON_START (readonly)
- int CONTROLLER_BUTTON_X (readonly)
- int CONTROLLER_BUTTON_Y (readonly)
- unsigned DD_DISABLED (readonly)
- unsigned DD_SOURCE (readonly)
- unsigned DD_SOURCE_AND_TARGET (readonly)
- unsigned DD_TARGET (readonly)
- unsigned DEBUGHUD_SHOW_ALL (readonly)
- unsigned DEBUGHUD_SHOW_ALL (readonly)
- unsigned DEBUGHUD_SHOW_EVENTPROFILER (readonly)
- unsigned DEBUGHUD_SHOW_MEMORY (readonly)
- unsigned DEBUGHUD_SHOW_MODE (readonly)
- unsigned DEBUGHUD_SHOW_NONE (readonly)
- unsigned DEBUGHUD_SHOW_PROFILER (readonly)
- float DEFAULT_CAMERA_FOV (readonly)
- float DEFAULT_FARCLIP (readonly)
- const int DEFAULT_FONT_SIZE (readonly)
- unsigned DEFAULT_LIGHTMASK (readonly)
- float DEFAULT_MAX_NETWORK_ANGULAR_VELOCITY (readonly)
- float DEFAULT_NEARCLIP (readonly)
- float DEFAULT_ORTHOSIZE (readonly)
- unsigned char DEFAULT_RENDER_ORDER (readonly)
- unsigned DEFAULT_SHADOWMASK (readonly)
- unsigned DEFAULT_VIEWMASK (readonly)
- unsigned DEFAULT_ZONEMASK (readonly)
- unsigned DRAWABLE_ANY (readonly)
- unsigned DRAWABLE_GEOMETRY (readonly)
- unsigned DRAWABLE_GEOMETRY2D (readonly)
- unsigned DRAWABLE_LIGHT (readonly)
- unsigned DRAWABLE_ZONE (readonly)
- unsigned FIRST_LOCAL_ID (readonly)
- unsigned FIRST_REPLICATED_ID (readonly)
- int HAT_CENTER (readonly)
- int HAT_DOWN (readonly)
- int HAT_LEFT (readonly)
- int HAT_RIGHT (readonly)
- int HAT_UP (readonly)
- int KEY_0 (readonly)
- int KEY_1 (readonly)
- int KEY_2 (readonly)
- int KEY_3 (readonly)
- int KEY_4 (readonly)
- int KEY_5 (readonly)
- int KEY_6 (readonly)
- int KEY_7 (readonly)
- int KEY_8 (readonly)
- int KEY_9 (readonly)
- int KEY_A (readonly)
- int KEY_ALT (readonly)
- int KEY_APPLICATION (readonly)
- int KEY_B (readonly)
- int KEY_BACKSPACE (readonly)
- int KEY_C (readonly)
- int KEY_CAPSLOCK (readonly)
- int KEY_CTRL (readonly)
- int KEY_D (readonly)
- int KEY_DELETE (readonly)
- int KEY_DOWN (readonly)
- int KEY_E (readonly)
- int KEY_END (readonly)
- int KEY_ESCAPE (readonly)
- int KEY_F (readonly)
- int KEY_F1 (readonly)
- int KEY_F10 (readonly)
- int KEY_F11 (readonly)
- int KEY_F12 (readonly)
- int KEY_F13 (readonly)
- int KEY_F14 (readonly)
- int KEY_F15 (readonly)
- int KEY_F16 (readonly)
- int KEY_F17 (readonly)
- int KEY_F18 (readonly)
- int KEY_F19 (readonly)
- int KEY_F2 (readonly)
- int KEY_F20 (readonly)
- int KEY_F21 (readonly)
- int KEY_F22 (readonly)
- int KEY_F23 (readonly)
- int KEY_F24 (readonly)
- int KEY_F3 (readonly)
- int KEY_F4 (readonly)
- int KEY_F5 (readonly)
- int KEY_F6 (readonly)
- int KEY_F7 (readonly)
- int KEY_F8 (readonly)
- int KEY_F9 (readonly)
- int KEY_G (readonly)
- int KEY_GUI (readonly)
- int KEY_H (readonly)
- int KEY_HOME (readonly)
- int KEY_I (readonly)
- int KEY_INSERT (readonly)
- int KEY_J (readonly)
- int KEY_K (readonly)
- int KEY_KP_0 (readonly)
- int KEY_KP_1 (readonly)
- int KEY_KP_2 (readonly)
- int KEY_KP_3 (readonly)
- int KEY_KP_4 (readonly)
- int KEY_KP_5 (readonly)
- int KEY_KP_6 (readonly)
- int KEY_KP_7 (readonly)
- int KEY_KP_8 (readonly)
- int KEY_KP_9 (readonly)
- int KEY_KP_DIVIDE (readonly)
- int KEY_KP_ENTER (readonly)
- int KEY_KP_MINUS (readonly)
- int KEY_KP_MULTIPLY (readonly)
- int KEY_KP_PERIOD (readonly)
- int KEY_KP_PLUS (readonly)
- int KEY_L (readonly)
- int KEY_LALT (readonly)
- int KEY_LCTRL (readonly)
- int KEY_LEFT (readonly)
- int KEY_LGUI (readonly)
- int KEY_LSHIFT (readonly)
- int KEY_M (readonly)
- int KEY_N (readonly)
- int KEY_NUMLOCKCLEAR (readonly)
- int KEY_O (readonly)
- int KEY_P (readonly)
- int KEY_PAGEDOWN (readonly)
- int KEY_PAGEUP (readonly)
- int KEY_PAUSE (readonly)
- int KEY_PRINTSCREEN (readonly)
- int KEY_Q (readonly)
- int KEY_R (readonly)
- int KEY_RALT (readonly)
- int KEY_RCTRL (readonly)
- int KEY_RETURN (readonly)
- int KEY_RETURN2 (readonly)
- int KEY_RGUI (readonly)
- int KEY_RIGHT (readonly)
- int KEY_RSHIFT (readonly)
- int KEY_S (readonly)
- int KEY_SCROLLLOCK (readonly)
- int KEY_SELECT (readonly)
- int KEY_SHIFT (readonly)
- int KEY_SPACE (readonly)
- int KEY_T (readonly)
- int KEY_TAB (readonly)
- int KEY_U (readonly)
- int KEY_UP (readonly)
- int KEY_V (readonly)
- int KEY_W (readonly)
- int KEY_X (readonly)
- int KEY_Y (readonly)
- int KEY_Z (readonly)
- unsigned LAST_LOCAL_ID (readonly)
- unsigned LAST_REPLICATED_ID (readonly)
- int LOG_DEBUG (readonly)
- int LOG_ERROR (readonly)
- int LOG_INFO (readonly)
- int LOG_NONE (readonly)
- int LOG_RAW (readonly)
- int LOG_WARNING (readonly)
- unsigned MASK_BLENDINDICES (readonly)
- unsigned MASK_BLENDWEIGHTS (readonly)
- unsigned MASK_COLOR (readonly)
- unsigned MASK_CUBETEXCOORD1 (readonly)
- unsigned MASK_CUBETEXCOORD2 (readonly)
- unsigned MASK_INSTANCEMATRIX1 (readonly)
- unsigned MASK_INSTANCEMATRIX2 (readonly)
- unsigned MASK_INSTANCEMATRIX3 (readonly)
- unsigned MASK_NONE (readonly)
- unsigned MASK_NORMAL (readonly)
- unsigned MASK_OBJECTINDEX (readonly)
- unsigned MASK_POSITION (readonly)
- unsigned MASK_TANGENT (readonly)
- unsigned MASK_TEXCOORD1 (readonly)
- unsigned MASK_TEXCOORD2 (readonly)
- unsigned MAX_CASCADE_SPLITS (readonly)
- int MAX_LIGHT_SPLITS (readonly)
- int MAX_VERTEX_LIGHTS (readonly)
- int MOUSEB_LEFT (readonly)
- int MOUSEB_MIDDLE (readonly)
- int MOUSEB_RIGHT (readonly)
- int MOUSEB_X1 (readonly)
- int MOUSEB_X2 (readonly)
- float M_DEGTORAD (readonly)
- float M_DEGTORAD_2 (readonly)
- float M_EPSILON (readonly)
- float M_HALF_PI (readonly)
- float M_HALF_PI (readonly)
- float M_INFINITY (readonly)
- float M_LARGE_EPSILON (readonly)
- float M_LARGE_VALUE (readonly)
- float M_MAX_FOV (readonly)
- int M_MAX_INT (readonly)
- unsigned M_MAX_UNSIGNED (readonly)
- int M_MIN_INT (readonly)
- float M_MIN_NEARCLIP (readonly)
- unsigned M_MIN_UNSIGNED (readonly)
- float M_RADTODEG (readonly)
- unsigned NUM_FRUSTUM_PLANES (readonly)
- unsigned NUM_FRUSTUM_VERTICES (readonly)
- float PIXEL_SIZE (readonly)
- const unsigned PRIORITY_LAST (readonly)
- int QUALITY_HIGH (readonly)
- int QUALITY_LOW (readonly)
- int QUALITY_MAX (readonly)
- int QUALITY_MEDIUM (readonly)
- int QUAL_ALT (readonly)
- int QUAL_ANY (readonly)
- int QUAL_CTRL (readonly)
- int QUAL_SHIFT (readonly)
- int SCANCODE_0 (readonly)
- int SCANCODE_1 (readonly)
- int SCANCODE_2 (readonly)
- int SCANCODE_3 (readonly)
- int SCANCODE_4 (readonly)
- int SCANCODE_5 (readonly)
- int SCANCODE_6 (readonly)
- int SCANCODE_7 (readonly)
- int SCANCODE_8 (readonly)
- int SCANCODE_9 (readonly)
- int SCANCODE_A (readonly)
- int SCANCODE_AC_BACK (readonly)
- int SCANCODE_AC_BOOKMARKS (readonly)
- int SCANCODE_AC_FORWARD (readonly)
- int SCANCODE_AC_HOME (readonly)
- int SCANCODE_AC_REFRESH (readonly)
- int SCANCODE_AC_SEARCH (readonly)
- int SCANCODE_AC_STOP (readonly)
- int SCANCODE_AGAIN (readonly)
- int SCANCODE_ALT (readonly)
- int SCANCODE_ALTERASE (readonly)
- int SCANCODE_APOSTROPHE (readonly)
- int SCANCODE_APP1 (readonly)
- int SCANCODE_APP2 (readonly)
- int SCANCODE_APPLICATION (readonly)
- int SCANCODE_AUDIOMUTE (readonly)
- int SCANCODE_AUDIONEXT (readonly)
- int SCANCODE_AUDIOPLAY (readonly)
- int SCANCODE_AUDIOPREV (readonly)
- int SCANCODE_AUDIOSTOP (readonly)
- int SCANCODE_B (readonly)
- int SCANCODE_BACKSLASH (readonly)
- int SCANCODE_BACKSPACE (readonly)
- int SCANCODE_BRIGHTNESSDOWN (readonly)
- int SCANCODE_BRIGHTNESSUP (readonly)
- int SCANCODE_C (readonly)
- int SCANCODE_CALCULATOR (readonly)
- int SCANCODE_CANCEL (readonly)
- int SCANCODE_CAPSLOCK (readonly)
- int SCANCODE_CLEAR (readonly)
- int SCANCODE_CLEARAGAIN (readonly)
- int SCANCODE_COMMA (readonly)
- int SCANCODE_COMPUTER (readonly)
- int SCANCODE_COPY (readonly)
- int SCANCODE_CRSEL (readonly)
- int SCANCODE_CTRL (readonly)
- int SCANCODE_CURRENCYSUBUNIT (readonly)
- int SCANCODE_CURRENCYUNIT (readonly)
- int SCANCODE_CUT (readonly)
- int SCANCODE_D (readonly)
- int SCANCODE_DECIMALSEPARATOR (readonly)
- int SCANCODE_DELETE (readonly)
- int SCANCODE_DISPLAYSWITCH (readonly)
- int SCANCODE_DOWN (readonly)
- int SCANCODE_E (readonly)
- int SCANCODE_EJECT (readonly)
- int SCANCODE_END (readonly)
- int SCANCODE_EQUALS (readonly)
- int SCANCODE_ESCAPE (readonly)
- int SCANCODE_EXECUTE (readonly)
- int SCANCODE_EXSEL (readonly)
- int SCANCODE_F (readonly)
- int SCANCODE_F1 (readonly)
- int SCANCODE_F10 (readonly)
- int SCANCODE_F11 (readonly)
- int SCANCODE_F12 (readonly)
- int SCANCODE_F13 (readonly)
- int SCANCODE_F14 (readonly)
- int SCANCODE_F15 (readonly)
- int SCANCODE_F16 (readonly)
- int SCANCODE_F17 (readonly)
- int SCANCODE_F18 (readonly)
- int SCANCODE_F19 (readonly)
- int SCANCODE_F2 (readonly)
- int SCANCODE_F20 (readonly)
- int SCANCODE_F21 (readonly)
- int SCANCODE_F22 (readonly)
- int SCANCODE_F23 (readonly)
- int SCANCODE_F24 (readonly)
- int SCANCODE_F3 (readonly)
- int SCANCODE_F4 (readonly)
- int SCANCODE_F5 (readonly)
- int SCANCODE_F6 (readonly)
- int SCANCODE_F7 (readonly)
- int SCANCODE_F8 (readonly)
- int SCANCODE_F9 (readonly)
- int SCANCODE_FIND (readonly)
- int SCANCODE_G (readonly)
- int SCANCODE_GRAVE (readonly)
- int SCANCODE_GUI (readonly)
- int SCANCODE_H (readonly)
- int SCANCODE_HELP (readonly)
- int SCANCODE_HOME (readonly)
- int SCANCODE_I (readonly)
- int SCANCODE_INSERT (readonly)
- int SCANCODE_INTERNATIONAL1 (readonly)
- int SCANCODE_INTERNATIONAL2 (readonly)
- int SCANCODE_INTERNATIONAL3 (readonly)
- int SCANCODE_INTERNATIONAL4 (readonly)
- int SCANCODE_INTERNATIONAL5 (readonly)
- int SCANCODE_INTERNATIONAL6 (readonly)
- int SCANCODE_INTERNATIONAL7 (readonly)
- int SCANCODE_INTERNATIONAL8 (readonly)
- int SCANCODE_INTERNATIONAL9 (readonly)
- int SCANCODE_J (readonly)
- int SCANCODE_K (readonly)
- int SCANCODE_KBDILLUMDOWN (readonly)
- int SCANCODE_KBDILLUMTOGGLE (readonly)
- int SCANCODE_KBDILLUMUP (readonly)
- int SCANCODE_KP_0 (readonly)
- int SCANCODE_KP_00 (readonly)
- int SCANCODE_KP_000 (readonly)
- int SCANCODE_KP_1 (readonly)
- int SCANCODE_KP_2 (readonly)
- int SCANCODE_KP_3 (readonly)
- int SCANCODE_KP_4 (readonly)
- int SCANCODE_KP_5 (readonly)
- int SCANCODE_KP_6 (readonly)
- int SCANCODE_KP_7 (readonly)
- int SCANCODE_KP_8 (readonly)
- int SCANCODE_KP_9 (readonly)
- int SCANCODE_KP_A (readonly)
- int SCANCODE_KP_AMPERSAND (readonly)
- int SCANCODE_KP_AT (readonly)
- int SCANCODE_KP_B (readonly)
- int SCANCODE_KP_BACKSPACE (readonly)
- int SCANCODE_KP_BINARY (readonly)
- int SCANCODE_KP_C (readonly)
- int SCANCODE_KP_CLEAR (readonly)
- int SCANCODE_KP_CLEARENTRY (readonly)
- int SCANCODE_KP_COLON (readonly)
- int SCANCODE_KP_COMMA (readonly)
- int SCANCODE_KP_D (readonly)
- int SCANCODE_KP_DBLAMPERSAND (readonly)
- int SCANCODE_KP_DBLVERTICALBAR (readonly)
- int SCANCODE_KP_DECIMAL (readonly)
- int SCANCODE_KP_DIVIDE (readonly)
- int SCANCODE_KP_E (readonly)
- int SCANCODE_KP_ENTER (readonly)
- int SCANCODE_KP_EQUALS (readonly)
- int SCANCODE_KP_EQUALSAS400 (readonly)
- int SCANCODE_KP_EXCLAM (readonly)
- int SCANCODE_KP_F (readonly)
- int SCANCODE_KP_GREATER (readonly)
- int SCANCODE_KP_HASH (readonly)
- int SCANCODE_KP_HEXADECIMAL (readonly)
- int SCANCODE_KP_LEFTBRACE (readonly)
- int SCANCODE_KP_LEFTPAREN (readonly)
- int SCANCODE_KP_LESS (readonly)
- int SCANCODE_KP_MEMADD (readonly)
- int SCANCODE_KP_MEMCLEAR (readonly)
- int SCANCODE_KP_MEMDIVIDE (readonly)
- int SCANCODE_KP_MEMMULTIPLY (readonly)
- int SCANCODE_KP_MEMRECALL (readonly)
- int SCANCODE_KP_MEMSTORE (readonly)
- int SCANCODE_KP_MEMSUBTRACT (readonly)
- int SCANCODE_KP_MINUS (readonly)
- int SCANCODE_KP_MULTIPLY (readonly)
- int SCANCODE_KP_OCTAL (readonly)
- int SCANCODE_KP_PERCENT (readonly)
- int SCANCODE_KP_PERIOD (readonly)
- int SCANCODE_KP_PLUS (readonly)
- int SCANCODE_KP_PLUSMINUS (readonly)
- int SCANCODE_KP_POWER (readonly)
- int SCANCODE_KP_RIGHTBRACE (readonly)
- int SCANCODE_KP_RIGHTPAREN (readonly)
- int SCANCODE_KP_SPACE (readonly)
- int SCANCODE_KP_TAB (readonly)
- int SCANCODE_KP_VERTICALBAR (readonly)
- int SCANCODE_KP_XOR (readonly)
- int SCANCODE_L (readonly)
- int SCANCODE_LALT (readonly)
- int SCANCODE_LANG1 (readonly)
- int SCANCODE_LANG2 (readonly)
- int SCANCODE_LANG3 (readonly)
- int SCANCODE_LANG4 (readonly)
- int SCANCODE_LANG5 (readonly)
- int SCANCODE_LANG6 (readonly)
- int SCANCODE_LANG7 (readonly)
- int SCANCODE_LANG8 (readonly)
- int SCANCODE_LANG9 (readonly)
- int SCANCODE_LCTRL (readonly)
- int SCANCODE_LEFT (readonly)
- int SCANCODE_LEFTBRACKET (readonly)
- int SCANCODE_LGUI (readonly)
- int SCANCODE_LSHIFT (readonly)
- int SCANCODE_M (readonly)
- int SCANCODE_MAIL (readonly)
- int SCANCODE_MEDIASELECT (readonly)
- int SCANCODE_MENU (readonly)
- int SCANCODE_MINUS (readonly)
- int SCANCODE_MODE (readonly)
- int SCANCODE_MUTE (readonly)
- int SCANCODE_N (readonly)
- int SCANCODE_NONUSBACKSLASH (readonly)
- int SCANCODE_NONUSHASH (readonly)
- int SCANCODE_NUMLOCKCLEAR (readonly)
- int SCANCODE_O (readonly)
- int SCANCODE_OPER (readonly)
- int SCANCODE_OUT (readonly)
- int SCANCODE_P (readonly)
- int SCANCODE_PAGEDOWN (readonly)
- int SCANCODE_PAGEUP (readonly)
- int SCANCODE_PASTE (readonly)
- int SCANCODE_PAUSE (readonly)
- int SCANCODE_PERIOD (readonly)
- int SCANCODE_POWER (readonly)
- int SCANCODE_PRINTSCREEN (readonly)
- int SCANCODE_PRIOR (readonly)
- int SCANCODE_Q (readonly)
- int SCANCODE_R (readonly)
- int SCANCODE_RALT (readonly)
- int SCANCODE_RCTRL (readonly)
- int SCANCODE_RETURN (readonly)
- int SCANCODE_RETURN2 (readonly)
- int SCANCODE_RGUI (readonly)
- int SCANCODE_RIGHT (readonly)
- int SCANCODE_RIGHTBRACKET (readonly)
- int SCANCODE_RSHIFT (readonly)
- int SCANCODE_S (readonly)
- int SCANCODE_SCROLLLOCK (readonly)
- int SCANCODE_SELECT (readonly)
- int SCANCODE_SEMICOLON (readonly)
- int SCANCODE_SEPARATOR (readonly)
- int SCANCODE_SHIFT (readonly)
- int SCANCODE_SLASH (readonly)
- int SCANCODE_SLEEP (readonly)
- int SCANCODE_SPACE (readonly)
- int SCANCODE_STOP (readonly)
- int SCANCODE_SYSREQ (readonly)
- int SCANCODE_T (readonly)
- int SCANCODE_TAB (readonly)
- int SCANCODE_THOUSANDSSEPARATOR (readonly)
- int SCANCODE_U (readonly)
- int SCANCODE_UNDO (readonly)
- int SCANCODE_UNKNOWN (readonly)
- int SCANCODE_UP (readonly)
- int SCANCODE_V (readonly)
- int SCANCODE_VOLUMEDOWN (readonly)
- int SCANCODE_VOLUMEUP (readonly)
- int SCANCODE_W (readonly)
- int SCANCODE_WWW (readonly)
- int SCANCODE_X (readonly)
- int SCANCODE_Y (readonly)
- int SCANCODE_Z (readonly)
- unsigned SCAN_DIRS (readonly)
- unsigned SCAN_FILES (readonly)
- unsigned SCAN_HIDDEN (readonly)
- float SHADOW_MIN_QUANTIZE (readonly)
- float SHADOW_MIN_VIEW (readonly)
- unsigned SMOOTH_NONE (readonly)
- unsigned SMOOTH_POSITION (readonly)
- unsigned SMOOTH_ROTATION (readonly)
- int STREAM_BUFFER_LENGTH (readonly)
- unsigned char USE_FIXEDPOSTUPDATE (readonly)
- unsigned char USE_FIXEDUPDATE (readonly)
- unsigned char USE_POSTUPDATE (readonly)
- unsigned char USE_UPDATE (readonly)
- unsigned VO_DISABLE_OCCLUSION (readonly)
- unsigned VO_DISABLE_SHADOWS (readonly)
- unsigned VO_LOW_MATERIAL_QUALITY (readonly)
- unsigned VO_NONE (readonly)
*/

}
